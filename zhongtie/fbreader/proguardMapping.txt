com.brainsoon.utils.BitmapScannerActivity -> com.brainsoon.utils.BitmapScannerActivity:
    android.widget.ImageView bmp_scan -> a
    android.widget.TextView bmp_page -> b
    java.util.ArrayList bmpList -> c
    int curPos -> d
    android.graphics.Bitmap curBmp -> e
    float downX -> f
    float downY -> g
    float upX -> h
    float upY -> i
    19:26:void <init>() -> <init>
    30:40:void onCreate(android.os.Bundle) -> onCreate
    43:49:void setBitmap(int) -> a
    53:85:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.brainsoon.utils.BookUtils -> com.brainsoon.utils.a:
    android.content.Context mFBContext -> a
    boolean isSelected -> b
    android.content.Context mContext -> c
    java.lang.String productInfo -> d
    int FILETYPE -> e
    java.lang.String pdfPath -> f
    44:47:void <init>(android.content.Context) -> <init>
    36:41:void <clinit>() -> <clinit>
com.brainsoon.utils.TempActivity -> com.brainsoon.utils.TempActivity:
    java.util.ArrayList bmpList -> a
    18:18:void <init>() -> <init>
    24:75:void onCreate(android.os.Bundle) -> onCreate
    78:92:void getFiles(java.io.File) -> a
    96:115:void onClick(android.view.View) -> onClick
com.brainsoon.utils.TxtReaderActivity -> com.brainsoon.utils.TxtReaderActivity:
    android.widget.TextView txt_show -> a
    java.util.List contentList -> b
    java.lang.String fileName -> c
    java.lang.String fileCode -> d
    int curPage -> e
    float downX -> f
    float downY -> g
    float upX -> h
    float upY -> i
    23:29:void <init>() -> <init>
    34:80:void onCreate(android.os.Bundle) -> onCreate
    84:116:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.mobeta.android.dslv.DragSortController -> com.mobeta.android.dslv.a:
    int mDragInitMode -> a
    boolean mSortEnabled -> b
    int mRemoveMode -> c
    boolean mRemoveEnabled -> d
    boolean mIsRemoving -> e
    android.view.GestureDetector mDetector -> f
    android.view.GestureDetector mFlingRemoveDetector -> g
    int mTouchSlop -> h
    int mHitPos -> i
    int mFlingHitPos -> j
    int mClickRemoveHitPos -> k
    int[] mTempLoc -> l
    int mItemX -> m
    int mItemY -> n
    int mCurrX -> o
    int mCurrY -> p
    boolean mDragging -> q
    float mFlingSpeed -> r
    int mDragHandleId -> s
    int mClickRemoveId -> t
    int mFlingHandleId -> u
    boolean mCanDrag -> v
    com.mobeta.android.dslv.DragSortListView mDslv -> w
    int mPositionX -> x
    android.view.GestureDetector$OnGestureListener mFlingRemoveListener -> y
    31:444:void <init>(com.mobeta.android.dslv.DragSortListView,int,int,int,int,int) -> <init>
    138:139:void setDragInitMode(int) -> a
    149:150:void setSortEnabled(boolean) -> a
    162:163:void setRemoveMode(int) -> b
    173:174:void setRemoveEnabled(boolean) -> b
    223:234:boolean startDrag(int,int,int) -> a
    239:268:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    277:280:void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    296:296:int startDragPosition(android.view.MotionEvent) -> a
    300:300:int startFlingPosition(android.view.MotionEvent) -> b
    314:314:int dragHandleHitPosition(android.view.MotionEvent) -> c
    318:318:int flingHandleHitPosition(android.view.MotionEvent) -> d
    322:356:int viewIdHitPosition(android.view.MotionEvent,int) -> a
    361:375:boolean onDown(android.view.MotionEvent) -> onDown
    381:409:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    415:419:void onLongPress(android.view.MotionEvent) -> onLongPress
    424:424:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    430:435:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    442:442:void onShowPress(android.view.MotionEvent) -> onShowPress
    22:22:boolean access$000(com.mobeta.android.dslv.DragSortController) -> a
    22:22:boolean access$100(com.mobeta.android.dslv.DragSortController) -> b
    22:22:com.mobeta.android.dslv.DragSortListView access$200(com.mobeta.android.dslv.DragSortController) -> c
    22:22:float access$300(com.mobeta.android.dslv.DragSortController) -> d
    22:22:int access$400(com.mobeta.android.dslv.DragSortController) -> e
    22:22:boolean access$102(com.mobeta.android.dslv.DragSortController,boolean) -> a
com.mobeta.android.dslv.DragSortController$1 -> com.mobeta.android.dslv.b:
    com.mobeta.android.dslv.DragSortController this$0 -> a
    445:445:void <init>(com.mobeta.android.dslv.DragSortController) -> <init>
    450:464:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.mobeta.android.dslv.DragSortItemView -> com.mobeta.android.dslv.DragSortItemView:
    int mGravity -> a
    28:39:void <init>(android.content.Context) -> <init>
    42:43:void setGravity(int) -> setGravity
    46:46:int getGravity() -> getGravity
    51:62:void onLayout(boolean,int,int,int,int) -> onLayout
    70:98:void onMeasure(int,int) -> onMeasure
com.mobeta.android.dslv.DragSortItemViewCheckable -> com.mobeta.android.dslv.DragSortItemViewCheckable:
    30:31:void <init>(android.content.Context) -> <init>
    35:39:boolean isChecked() -> isChecked
    44:47:void setChecked(boolean) -> setChecked
    51:54:void toggle() -> toggle
com.mobeta.android.dslv.DragSortListView -> com.mobeta.android.dslv.DragSortListView:
    android.view.View mFloatView -> a
    android.graphics.Point mFloatLoc -> b
    android.graphics.Point mTouchLoc -> c
    int mFloatViewMid -> d
    boolean mFloatViewOnMeasured -> e
    android.database.DataSetObserver mObserver -> f
    float mFloatAlpha -> g
    float mCurrFloatAlpha -> h
    int mFloatPos -> i
    int mFirstExpPos -> j
    int mSecondExpPos -> k
    boolean mAnimate -> l
    int mSrcPos -> m
    int mDragDeltaX -> n
    int mDragDeltaY -> o
    int mOffsetX -> p
    int mOffsetY -> q
    com.mobeta.android.dslv.DragSortListView$DragListener mDragListener -> r
    com.mobeta.android.dslv.DragSortListView$DropListener mDropListener -> s
    com.mobeta.android.dslv.DragSortListView$RemoveListener mRemoveListener -> t
    boolean mDragEnabled -> u
    int mDragState -> v
    int mItemHeightCollapsed -> w
    int mFloatViewHeight -> x
    int mFloatViewHeightHalf -> y
    int mWidthMeasureSpec -> z
    android.view.View[] mSampleViewTypes -> A
    com.mobeta.android.dslv.DragSortListView$DragScroller mDragScroller -> B
    float mDragUpScrollStartFrac -> C
    float mDragDownScrollStartFrac -> D
    int mUpScrollStartY -> E
    int mDownScrollStartY -> F
    float mDownScrollStartYF -> G
    float mUpScrollStartYF -> H
    float mDragUpScrollHeight -> I
    float mDragDownScrollHeight -> J
    float mMaxScrollSpeed -> K
    com.mobeta.android.dslv.DragSortListView$DragScrollProfile mScrollProfile -> L
    int mX -> M
    int mY -> N
    int mLastX -> O
    int mLastY -> P
    int mDragStartY -> Q
    int mDragFlags -> R
    boolean mLastCallWasIntercept -> S
    boolean mInTouchEvent -> T
    com.mobeta.android.dslv.DragSortListView$FloatViewManager mFloatViewManager -> U
    android.view.MotionEvent mCancelEvent -> V
    int mCancelMethod -> W
    float mSlideRegionFrac -> aa
    float mSlideFrac -> ab
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper mAdapterWrapper -> ac
    boolean mTrackDragSort -> ad
    com.mobeta.android.dslv.DragSortListView$DragSortTracker mDragSortTracker -> ae
    boolean mBlockLayoutRequests -> af
    boolean mIgnoreTouchEvent -> ag
    com.mobeta.android.dslv.DragSortListView$HeightCache mChildHeightCache -> ah
    com.mobeta.android.dslv.DragSortListView$RemoveAnimator mRemoveAnimator -> ai
    com.mobeta.android.dslv.DragSortListView$LiftAnimator mLiftAnimator -> aj
    com.mobeta.android.dslv.DragSortListView$DropAnimator mDropAnimator -> ak
    boolean mUseRemoveVelocity -> al
    float mRemoveVelocityX -> am
    boolean mListViewIntercepted -> an
    boolean mFloatViewInvalidated -> ao
    76:2178:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    579:580:void setFloatAlpha(float) -> setFloatAlpha
    583:583:float getFloatAlpha() -> getFloatAlpha
    593:594:void setMaxScrollSpeed(float) -> setMaxScrollSpeed
    608:626:void setAdapter(android.widget.ListAdapter) -> setAdapter
    636:639:android.widget.ListAdapter getInputAdapter() -> getInputAdapter
    754:786:void drawDivider(int,android.graphics.Canvas) -> a
    790:833:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    836:844:int getItemHeight(int) -> b
    918:972:int getShuffleEdge(int,int) -> a
    977:1121:boolean updatePositions() -> d
    1126:1131:void onDraw(android.graphics.Canvas) -> onDraw
    1404:1406:void removeItem(int) -> a
    1416:1450:void removeItem(int,float) -> a
    1475:1487:void cancelDrag() -> a
    1490:1494:void clearPositions() -> e
    1499:1518:void dropFloatView() -> f
    1521:1522:void doRemoveItem() -> g
    1530:1548:void doRemoveItem(int) -> c
    1551:1564:void adjustOnReorder() -> h
    1578:1579:boolean stopDrag(boolean) -> a
    1584:1585:boolean stopDragWithVelocity(boolean,float) -> a
    1589:1609:boolean stopDrag(boolean,float) -> b
    1615:1662:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1666:1674:void doActionUpOrCancel() -> i
    1677:1690:void saveTouchCoords(android.view.MotionEvent) -> b
    1693:1693:boolean listViewIntercepted() -> b
    1700:1748:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1760:1761:void setDragScrollStart(float) -> setDragScrollStart
    1774:1789:void setDragScrollStarts(float,float) -> a
    1794:1835:void continueDrag(int,int) -> b
    1838:1850:void updateScrollStarts() -> j
    1854:1856:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1859:1871:void adjustAllItems() -> k
    1888:1922:void adjustItem(int,android.view.View,boolean) -> a
    1925:1971:int getChildHeight(int) -> d
    1976:2002:int getChildHeight(int,android.view.View,boolean) -> b
    2006:2006:int calcItemHeight(int,android.view.View,boolean) -> c
    2011:2045:int calcItemHeight(int,int) -> c
    2050:2053:void requestLayout() -> requestLayout
    2056:2095:int adjustScroll(int,android.view.View,int,int) -> a
    2099:2113:void measureItem(android.view.View) -> a
    2116:2121:void measureFloatView() -> l
    2125:2134:void onMeasure(int,int) -> onMeasure
    2138:2150:void layoutChildren() -> layoutChildren
    2154:2175:boolean onDragTouchEvent(android.view.MotionEvent) -> a
    2208:2217:boolean startDrag(int,int,int,int) -> a
    2245:2304:boolean startDrag(int,android.view.View,int,int,int) -> a
    2308:2316:void doDragFloatView(boolean) -> b
    2319:2342:void doDragFloatView(int,android.view.View,boolean) -> d
    2350:2407:void updateFloatView() -> m
    2410:2418:void destroyFloatView() -> n
    2474:2475:void setFloatViewManager(com.mobeta.android.dslv.DragSortListView$FloatViewManager) -> setFloatViewManager
    2478:2479:void setDragListener(com.mobeta.android.dslv.DragSortListView$DragListener) -> setDragListener
    2492:2493:void setDragEnabled(boolean) -> setDragEnabled
    2496:2496:boolean isDragEnabled() -> c
    2512:2513:void setDropListener(com.mobeta.android.dslv.DragSortListView$DropListener) -> setDropListener
    2526:2527:void setRemoveListener(com.mobeta.android.dslv.DragSortListView$RemoveListener) -> setRemoveListener
    2562:2565:void setDragSortListener(com.mobeta.android.dslv.DragSortListView$DragSortListener) -> setDragSortListener
    2575:2578:void setDragScrollProfile(com.mobeta.android.dslv.DragSortListView$DragScrollProfile) -> setDragScrollProfile
    61:61:void setAdapter(android.widget.Adapter) -> setAdapter
    61:61:float access$000(com.mobeta.android.dslv.DragSortListView) -> a
    61:61:int access$100(com.mobeta.android.dslv.DragSortListView) -> b
    61:61:void access$200(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> a
    61:61:int access$300(com.mobeta.android.dslv.DragSortListView) -> c
    61:61:int access$400(com.mobeta.android.dslv.DragSortListView) -> d
    61:61:int access$302(com.mobeta.android.dslv.DragSortListView,int) -> a
    61:61:android.graphics.Point access$500(com.mobeta.android.dslv.DragSortListView) -> e
    61:61:int access$600(com.mobeta.android.dslv.DragSortListView) -> f
    61:61:void access$700(com.mobeta.android.dslv.DragSortListView,boolean) -> a
    61:61:int access$800(com.mobeta.android.dslv.DragSortListView) -> g
    61:61:int access$900(com.mobeta.android.dslv.DragSortListView) -> h
    61:61:int access$102(com.mobeta.android.dslv.DragSortListView,int) -> b
    61:61:int access$1000(com.mobeta.android.dslv.DragSortListView) -> i
    61:61:int access$1100(com.mobeta.android.dslv.DragSortListView) -> j
    61:61:void access$1200(com.mobeta.android.dslv.DragSortListView) -> k
    61:61:int access$1300(com.mobeta.android.dslv.DragSortListView) -> l
    61:61:int access$1400(com.mobeta.android.dslv.DragSortListView) -> m
    61:61:boolean access$1500(com.mobeta.android.dslv.DragSortListView) -> n
    61:61:float access$1600(com.mobeta.android.dslv.DragSortListView) -> o
    61:61:float access$1602(com.mobeta.android.dslv.DragSortListView,float) -> a
    61:61:void access$1700(com.mobeta.android.dslv.DragSortListView) -> p
    61:61:int access$1800(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> b
    61:61:void access$1900(com.mobeta.android.dslv.DragSortListView) -> q
    61:61:int access$2000(com.mobeta.android.dslv.DragSortListView) -> r
    61:61:float access$2100(com.mobeta.android.dslv.DragSortListView) -> s
    61:61:float access$2200(com.mobeta.android.dslv.DragSortListView) -> t
    61:61:com.mobeta.android.dslv.DragSortListView$DragScrollProfile access$2300(com.mobeta.android.dslv.DragSortListView) -> u
    61:61:float access$2400(com.mobeta.android.dslv.DragSortListView) -> v
    61:61:float access$2500(com.mobeta.android.dslv.DragSortListView) -> w
    61:61:boolean access$2602(com.mobeta.android.dslv.DragSortListView,boolean) -> b
    61:61:void access$2700(com.mobeta.android.dslv.DragSortListView,int,android.view.View,boolean) -> c
    61:61:int access$2800(com.mobeta.android.dslv.DragSortListView,int) -> c
    61:61:int access$2900(com.mobeta.android.dslv.DragSortListView,int) -> d
    61:61:int access$3000(com.mobeta.android.dslv.DragSortListView) -> x
    61:61:int access$3100(com.mobeta.android.dslv.DragSortListView,int,int) -> a
com.mobeta.android.dslv.DragSortListView$1 -> com.mobeta.android.dslv.c:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    272:272:void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    275:275:float getSpeed(float,long) -> a
com.mobeta.android.dslv.DragSortListView$2 -> com.mobeta.android.dslv.d:
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    554:554:void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    556:559:void cancel() -> a
    563:564:void onChanged() -> onChanged
    568:569:void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$AdapterWrapper -> com.mobeta.android.dslv.DragSortListView$a:
    android.widget.ListAdapter mAdapter -> b
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    646:659:void <init>(com.mobeta.android.dslv.DragSortListView,android.widget.ListAdapter) -> <init>
    662:662:android.widget.ListAdapter getAdapter() -> a
    667:667:long getItemId(int) -> getItemId
    672:672:java.lang.Object getItem(int) -> getItem
    677:677:int getCount() -> getCount
    682:682:boolean areAllItemsEnabled() -> areAllItemsEnabled
    687:687:boolean isEnabled(int) -> isEnabled
    692:692:int getItemViewType(int) -> getItemViewType
    697:697:int getViewTypeCount() -> getViewTypeCount
    702:702:boolean hasStableIds() -> hasStableIds
    707:707:boolean isEmpty() -> isEmpty
    718:748:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.mobeta.android.dslv.DragSortListView$AdapterWrapper$1 -> com.mobeta.android.dslv.e:
    com.mobeta.android.dslv.DragSortListView val$this$0 -> a
    com.mobeta.android.dslv.DragSortListView$AdapterWrapper this$1 -> b
    650:650:void <init>(com.mobeta.android.dslv.DragSortListView$AdapterWrapper,com.mobeta.android.dslv.DragSortListView) -> <init>
    652:653:void onChanged() -> onChanged
    656:657:void onInvalidated() -> onInvalidated
com.mobeta.android.dslv.DragSortListView$DragListener -> com.mobeta.android.dslv.DragSortListView$b:
    void drag(int,int) -> a
com.mobeta.android.dslv.DragSortListView$DragScrollProfile -> com.mobeta.android.dslv.DragSortListView$c:
    float getSpeed(float,long) -> a
com.mobeta.android.dslv.DragSortListView$DragScroller -> com.mobeta.android.dslv.DragSortListView$d:
    boolean mAbort -> b
    long mPrevTime -> c
    long mCurrTime -> d
    int dy -> e
    float dt -> f
    long tStart -> g
    int scrollDir -> h
    float mScrollSpeed -> i
    boolean mScrolling -> j
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    2830:2830:boolean isScrolling() -> a
    2834:2834:int getScrollDir() -> b
    2824:2838:void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    2841:2850:void startScrolling(int) -> a
    2853:2861:void stopScrolling(boolean) -> a
    2865:2951:void run() -> run
com.mobeta.android.dslv.DragSortListView$DragSortListener -> com.mobeta.android.dslv.DragSortListView$e:
com.mobeta.android.dslv.DragSortListView$DragSortTracker -> com.mobeta.android.dslv.DragSortListView$f:
    java.lang.StringBuilder mBuilder -> a
    java.io.File mFile -> b
    int mNumInBuffer -> d
    int mNumFlushes -> e
    boolean mTracking -> f
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    2955:2978:void <init>(com.mobeta.android.dslv.DragSortListView) -> <init>
    2981:2984:void startTracking() -> a
    2987:3038:void appendState() -> b
    3041:3063:void flush() -> c
    3066:3071:void stopTracking() -> d
com.mobeta.android.dslv.DragSortListView$DropAnimator -> com.mobeta.android.dslv.DragSortListView$g:
    int mDropPos -> d
    int srcPos -> e
    float mInitDeltaY -> f
    float mInitDeltaX -> g
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    1243:1245:void <init>(com.mobeta.android.dslv.DragSortListView,float,int) -> <init>
    1249:1254:void onStart() -> a
    1257:1276:int getTargetY() -> e
    1281:1291:void onUpdate(float,float) -> a
    1295:1296:void onStop() -> b
com.mobeta.android.dslv.DragSortListView$DropListener -> com.mobeta.android.dslv.DragSortListView$h:
    void drop(int,int) -> a_
com.mobeta.android.dslv.DragSortListView$FloatViewManager -> com.mobeta.android.dslv.DragSortListView$i:
    android.view.View onCreateFloatView(int) -> c
    void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    void onDestroyFloatView(android.view.View) -> a
com.mobeta.android.dslv.DragSortListView$HeightCache -> com.mobeta.android.dslv.DragSortListView$j:
    android.util.SparseIntArray mMap -> b
    java.util.ArrayList mOrder -> c
    int mMaxSize -> d
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    859:863:void <init>(com.mobeta.android.dslv.DragSortListView,int) -> <init>
    869:883:void add(int,int) -> a
    886:886:int get(int) -> a
    890:892:void clear() -> a
com.mobeta.android.dslv.DragSortListView$LiftAnimator -> com.mobeta.android.dslv.DragSortListView$k:
    float mInitDragDeltaY -> d
    float mFinalDragDeltaY -> e
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    1216:1218:void onStart() -> a
    1222:1230:void onUpdate(float,float) -> a
com.mobeta.android.dslv.DragSortListView$RemoveAnimator -> com.mobeta.android.dslv.DragSortListView$l:
    float mFloatLocX -> d
    float mFirstStartBlank -> e
    float mSecondStartBlank -> f
    int mFirstChildHeight -> g
    int mSecondChildHeight -> h
    int mFirstPos -> i
    int mSecondPos -> j
    int srcPos -> k
    com.mobeta.android.dslv.DragSortListView this$0 -> a
    1309:1318:void <init>(com.mobeta.android.dslv.DragSortListView,float,int) -> <init>
    1322:1344:void onStart() -> a
    1348:1394:void onUpdate(float,float) -> a
    1398:1399:void onStop() -> b
com.mobeta.android.dslv.DragSortListView$RemoveListener -> com.mobeta.android.dslv.DragSortListView$m:
    void remove(int) -> a
com.mobeta.android.dslv.DragSortListView$SmoothAnimator -> com.mobeta.android.dslv.DragSortListView$n:
    long mStartTime -> b
    float mDurationF -> a
    float mAlpha -> d
    float mA -> e
    float mB -> f
    float mC -> g
    float mD -> h
    boolean mCanceled -> i
    com.mobeta.android.dslv.DragSortListView this$0 -> c
    1143:1149:void <init>(com.mobeta.android.dslv.DragSortListView,float,int) -> <init>
    1152:1157:float transform(float) -> a
    1162:1166:void start() -> c
    1169:1170:void cancel() -> d
    1174:1174:void onStart() -> a
    1178:1178:void onUpdate(float,float) -> a
    1182:1182:void onStop() -> b
    1186:1199:void run() -> run
com.mobeta.android.dslv.SimpleFloatViewManager -> com.mobeta.android.dslv.f:
    android.graphics.Bitmap mFloatBitmap -> a
    android.widget.ImageView mImageView -> b
    int mFloatBGColor -> c
    android.widget.ListView mListView -> d
    22:28:void <init>(android.widget.ListView) -> <init>
    31:32:void setBackgroundColor(int) -> d
    42:65:android.view.View onCreateFloatView(int) -> c
    74:74:void onDragFloatView(android.view.View,android.graphics.Point,android.graphics.Point) -> a
    82:86:void onDestroyFloatView(android.view.View) -> a
com.paragon.dictionary.fbreader.OpenDictionaryActivity -> com.paragon.dictionary.fbreader.OpenDictionaryActivity:
    android.webkit.WebView myArticleView -> a
    android.widget.TextView myTitleLabel -> b
    android.widget.ImageButton myOpenDictionaryButton -> c
    java.lang.String myQuery -> d
    int myHeight -> e
    int myGravity -> f
    com.paragon.open.dictionary.api.Dictionary ourDictionary -> g
    41:49:void <init>() -> <init>
    55:56:void setDictionary(com.paragon.open.dictionary.api.Dictionary) -> a
    60:75:void onCreate(android.os.Bundle) -> onCreate
    79:123:void onResume() -> onResume
    127:130:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    133:163:void setViewSize(int,int) -> a
    166:168:void openTextInDictionary(java.lang.String) -> a
    171:183:java.lang.String saveArticle(java.lang.String,android.content.Context) -> a
    41:41:java.lang.String access$000(com.paragon.dictionary.fbreader.OpenDictionaryActivity) -> a
    41:41:void access$100(com.paragon.dictionary.fbreader.OpenDictionaryActivity,java.lang.String) -> a
    41:41:java.lang.String access$200(com.paragon.dictionary.fbreader.OpenDictionaryActivity,java.lang.String,android.content.Context) -> a
    41:41:android.webkit.WebView access$300(com.paragon.dictionary.fbreader.OpenDictionaryActivity) -> b
    52:52:void <clinit>() -> <clinit>
com.paragon.dictionary.fbreader.OpenDictionaryActivity$1 -> com.paragon.dictionary.fbreader.a:
    com.paragon.dictionary.fbreader.OpenDictionaryActivity this$0 -> a
    68:68:void <init>(com.paragon.dictionary.fbreader.OpenDictionaryActivity) -> <init>
    71:73:void onClick(android.view.View) -> onClick
com.paragon.dictionary.fbreader.OpenDictionaryActivity$2 -> com.paragon.dictionary.fbreader.b:
    com.paragon.dictionary.fbreader.OpenDictionaryActivity this$0 -> a
    91:91:void <init>(com.paragon.dictionary.fbreader.OpenDictionaryActivity) -> <init>
    94:100:void onComplete(java.lang.String,com.paragon.open.dictionary.api.TranslateMode) -> a
    104:107:void onWordNotFound(java.util.ArrayList) -> a
    111:114:void onError(com.paragon.open.dictionary.api.Error) -> a
    118:120:void onIPCError(java.lang.String) -> a
com.paragon.dictionary.fbreader.OpenDictionaryActivity$3 -> com.paragon.dictionary.fbreader.c:
    com.paragon.dictionary.fbreader.OpenDictionaryActivity this$0 -> a
    141:141:void <init>(com.paragon.dictionary.fbreader.OpenDictionaryActivity) -> <init>
    144:145:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.paragon.dictionary.fbreader.OpenDictionaryFlyout -> com.paragon.dictionary.fbreader.d:
    com.paragon.open.dictionary.api.Direction myDirection -> a
    java.lang.String myPackageName -> b
    38:41:void <init>(com.paragon.open.dictionary.api.Dictionary) -> <init>
    44:56:com.paragon.open.dictionary.api.Dictionary getDictionary(android.content.Context) -> a
    60:77:void showTranslation(android.app.Activity,java.lang.String,org.geometerplus.android.fbreader.DictionaryUtil$PopupFrameMetric) -> a
com.paragon.open.dictionary.api.Dictionary -> com.paragon.open.dictionary.api.a:
    android.content.Context ctx -> b
    android.os.Handler handler -> c
    com.paragon.open.dictionary.api.OpenDictionaryAPI api -> a
    java.lang.String packageName -> d
    java.lang.String id -> e
    java.lang.String idHex -> f
    java.lang.String lang -> g
    java.lang.String uid -> h
    int wordsCount -> i
    java.lang.String version -> j
    boolean isRTL -> k
    java.util.HashMap nameFullMap -> l
    java.util.HashMap nameShortMap -> m
    java.util.HashMap languageNameMap -> n
    java.util.HashMap languagesPairNameFullMap -> o
    java.util.HashMap languagesPairNameShortMap -> p
    java.util.HashMap authorNameMap -> q
    java.util.HashMap authorWebMap -> r
    java.util.HashMap productNameMap -> s
    boolean isTranslationAsImageSupported -> t
    boolean isTranslationAsTextSupported -> u
    com.paragon.open.dictionary.api.Direction direction -> v
    com.paragon.open.dictionary.api.Dictionary pairDictionary -> w
    com.paragon.open.dictionary.api.Morphology morphology -> x
    129:138:void <init>(android.content.Context,com.paragon.open.dictionary.api.OpenDictionaryAPI,android.content.pm.ApplicationInfo) -> <init>
    139:144:void <init>(com.paragon.open.dictionary.api.Dictionary,com.paragon.open.dictionary.api.OpenDictionaryAPI,android.content.pm.ApplicationInfo) -> <init>
    212:229:void processSendError(java.lang.Throwable,com.paragon.open.dictionary.api.Dictionary$ErrorListener,java.lang.String) -> a
    231:238:void processBindError(com.paragon.open.dictionary.api.Dictionary$ErrorListener) -> a
    240:244:void processHandleError(java.lang.Throwable,com.paragon.open.dictionary.api.Dictionary$ErrorListener,java.lang.String) -> b
    257:325:void getTranslationAsText(java.lang.String,com.paragon.open.dictionary.api.TranslateMode,com.paragon.open.dictionary.api.TranslateFormat,com.paragon.open.dictionary.api.Dictionary$TranslateAsTextListener) -> a
    418:418:boolean isTranslationAsTextSupported() -> a
    436:437:void showTranslation(java.lang.String) -> a
    458:468:void showTranslationImpl(android.content.Context,java.lang.String,java.lang.Integer) -> a
    471:482:void fillClientInfo(java.lang.Object) -> a
    485:507:void prepare(com.paragon.open.dictionary.api.Dictionary,android.content.pm.ApplicationInfo,java.lang.String) -> a
    509:512:void preparePair(android.content.pm.ApplicationInfo) -> a
    514:518:void prepareDirection() -> j
    522:522:int hashCode() -> hashCode
    526:526:boolean equals(java.lang.Object) -> equals
    530:530:java.lang.String toString() -> toString
    539:539:java.lang.String getUID() -> b
    548:548:com.paragon.open.dictionary.api.Direction getDirection() -> c
    557:557:boolean hasPairDictionary() -> d
    566:566:com.paragon.open.dictionary.api.Dictionary getPairDictionary() -> e
    602:602:boolean hasMorphology() -> f
    611:611:com.paragon.open.dictionary.api.Morphology getMorphology() -> g
    619:619:java.lang.String getName() -> h
    626:626:java.lang.String getName(java.util.Locale) -> a
    719:720:java.lang.String getLocalizedName(java.util.HashMap,java.util.Locale) -> a
    729:729:java.lang.String getApplicationPackageName() -> i
    55:55:java.lang.String access$000(com.paragon.open.dictionary.api.Dictionary) -> a
    55:55:void access$100(com.paragon.open.dictionary.api.Dictionary,java.lang.Object) -> a
    55:55:void access$200(com.paragon.open.dictionary.api.Dictionary,java.lang.Throwable,com.paragon.open.dictionary.api.Dictionary$ErrorListener,java.lang.String) -> a
    55:55:void access$400(com.paragon.open.dictionary.api.Dictionary,java.lang.Throwable,com.paragon.open.dictionary.api.Dictionary$ErrorListener,java.lang.String) -> b
    55:55:android.content.Context access$500(com.paragon.open.dictionary.api.Dictionary) -> b
    55:55:java.lang.String access$600(com.paragon.open.dictionary.api.Dictionary) -> c
com.paragon.open.dictionary.api.Dictionary$2 -> com.paragon.open.dictionary.api.b:
    com.paragon.open.dictionary.api.Dictionary$ErrorListener val$listener -> a
    java.lang.String val$queryId -> b
    java.lang.Throwable val$e -> c
    com.paragon.open.dictionary.api.Dictionary this$0 -> d
    214:214:void <init>(com.paragon.open.dictionary.api.Dictionary,com.paragon.open.dictionary.api.Dictionary$ErrorListener,java.lang.String,java.lang.Throwable) -> <init>
    216:218:void run() -> run
com.paragon.open.dictionary.api.Dictionary$3 -> com.paragon.open.dictionary.api.c:
    com.paragon.open.dictionary.api.Dictionary$ErrorListener val$listener -> a
    java.lang.String val$queryId -> b
    java.lang.Throwable val$e -> c
    com.paragon.open.dictionary.api.Dictionary this$0 -> d
    222:222:void <init>(com.paragon.open.dictionary.api.Dictionary,com.paragon.open.dictionary.api.Dictionary$ErrorListener,java.lang.String,java.lang.Throwable) -> <init>
    224:226:void run() -> run
com.paragon.open.dictionary.api.Dictionary$4 -> com.paragon.open.dictionary.api.d:
    com.paragon.open.dictionary.api.Dictionary$ErrorListener val$listener -> a
    com.paragon.open.dictionary.api.Dictionary this$0 -> b
    232:232:void <init>(com.paragon.open.dictionary.api.Dictionary,com.paragon.open.dictionary.api.Dictionary$ErrorListener) -> <init>
    235:236:void run() -> run
com.paragon.open.dictionary.api.Dictionary$5 -> com.paragon.open.dictionary.api.e:
    java.lang.String val$word -> a
    com.paragon.open.dictionary.api.TranslateMode val$mode -> b
    com.paragon.open.dictionary.api.TranslateFormat val$format -> c
    com.paragon.open.dictionary.api.Dictionary$TranslateAsTextListener val$listener -> d
    com.paragon.open.dictionary.api.Dictionary this$0 -> e
    264:264:void <init>(com.paragon.open.dictionary.api.Dictionary,java.lang.String,com.paragon.open.dictionary.api.TranslateMode,com.paragon.open.dictionary.api.TranslateFormat,com.paragon.open.dictionary.api.Dictionary$TranslateAsTextListener) -> <init>
    267:268:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    271:315:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    318:320:void unbind() -> a
    264:264:void access$700(com.paragon.open.dictionary.api.Dictionary$5) -> a
com.paragon.open.dictionary.api.Dictionary$5$1 -> com.paragon.open.dictionary.api.f:
    com.paragon.open.dictionary.api.Dictionary$5 this$1 -> a
    280:280:void <init>(com.paragon.open.dictionary.api.Dictionary$5) -> <init>
    284:290:void handleMessage(android.os.Message) -> handleMessage
    292:307:void handleMessageImpl(android.os.Message) -> a
com.paragon.open.dictionary.api.Dictionary$7 -> com.paragon.open.dictionary.api.a$1:
    int[] $SwitchMap$com$paragon$open$dictionary$api$TranslateFormat -> a
    297:297:void <clinit>() -> <clinit>
com.paragon.open.dictionary.api.Dictionary$ErrorListener -> com.paragon.open.dictionary.api.a$a:
    void onError(com.paragon.open.dictionary.api.Error) -> a
    void onIPCError(java.lang.String) -> a
com.paragon.open.dictionary.api.Dictionary$TranslateAsTextListener -> com.paragon.open.dictionary.api.a$b:
    void onComplete(java.lang.String,com.paragon.open.dictionary.api.TranslateMode) -> a
com.paragon.open.dictionary.api.Dictionary$TranslateBaseListener -> com.paragon.open.dictionary.api.a$c:
    void onWordNotFound(java.util.ArrayList) -> a
com.paragon.open.dictionary.api.Direction -> com.paragon.open.dictionary.api.g:
    com.paragon.open.dictionary.api.Language from -> a
    com.paragon.open.dictionary.api.Language to -> b
    java.lang.String toString -> c
    44:50:void <init>(com.paragon.open.dictionary.api.Language,com.paragon.open.dictionary.api.Language) -> <init>
    54:55:boolean equals(java.lang.Object) -> equals
    59:59:int hashCode() -> hashCode
    63:63:java.lang.String toString() -> toString
com.paragon.open.dictionary.api.Error -> com.paragon.open.dictionary.api.h:
    com.paragon.open.dictionary.api.Error INTERNAL_ERROR -> a
    com.paragon.open.dictionary.api.Error DATABASE_IS_NOT_AVAILABLE -> b
    com.paragon.open.dictionary.api.Error ERROR_STATE_OF_THE_APPLICATION -> c
    com.paragon.open.dictionary.api.Error INCORRECT_PARAMETERS -> d
    java.lang.String name -> e
    java.lang.String message -> f
    com.paragon.open.dictionary.api.Error[] $VALUES -> g
    24:24:com.paragon.open.dictionary.api.Error[] values() -> values
    24:24:com.paragon.open.dictionary.api.Error valueOf(java.lang.String) -> valueOf
    47:49:void <init>(java.lang.String,int,java.lang.String) -> <init>
    57:57:java.lang.String getName() -> a
    66:66:java.lang.String getMessage() -> b
    70:71:com.paragon.open.dictionary.api.Error setMessage(java.lang.String) -> a
    75:78:com.paragon.open.dictionary.api.Error getByName(java.lang.String) -> b
    24:42:void <clinit>() -> <clinit>
com.paragon.open.dictionary.api.Language -> com.paragon.open.dictionary.api.i:
    com.paragon.open.dictionary.api.Language ANY -> a
    com.paragon.open.dictionary.api.Language Arabic -> b
    com.paragon.open.dictionary.api.Language Basque -> c
    com.paragon.open.dictionary.api.Language Bulgarian -> d
    com.paragon.open.dictionary.api.Language Catalan -> e
    com.paragon.open.dictionary.api.Language Chinese -> f
    com.paragon.open.dictionary.api.Language Croatian -> g
    com.paragon.open.dictionary.api.Language Czech -> h
    com.paragon.open.dictionary.api.Language Danish -> i
    com.paragon.open.dictionary.api.Language Dutch -> j
    com.paragon.open.dictionary.api.Language English -> k
    com.paragon.open.dictionary.api.Language Estonian -> l
    com.paragon.open.dictionary.api.Language Finnish -> m
    com.paragon.open.dictionary.api.Language French -> n
    com.paragon.open.dictionary.api.Language German -> o
    com.paragon.open.dictionary.api.Language Greek -> p
    com.paragon.open.dictionary.api.Language Hebrew -> q
    com.paragon.open.dictionary.api.Language Hungarian -> r
    com.paragon.open.dictionary.api.Language Italian -> s
    com.paragon.open.dictionary.api.Language Japanese -> t
    com.paragon.open.dictionary.api.Language Korean -> u
    com.paragon.open.dictionary.api.Language Latin -> v
    com.paragon.open.dictionary.api.Language Lithuanian -> w
    com.paragon.open.dictionary.api.Language Norwegian -> x
    com.paragon.open.dictionary.api.Language Polish -> y
    com.paragon.open.dictionary.api.Language Portuguese -> z
    com.paragon.open.dictionary.api.Language Romanian -> A
    com.paragon.open.dictionary.api.Language Russian -> B
    com.paragon.open.dictionary.api.Language Serbian -> C
    com.paragon.open.dictionary.api.Language Slovak -> D
    com.paragon.open.dictionary.api.Language Slovenian -> E
    com.paragon.open.dictionary.api.Language Spanish -> F
    com.paragon.open.dictionary.api.Language Swedish -> G
    com.paragon.open.dictionary.api.Language Turkish -> H
    com.paragon.open.dictionary.api.Language Ukrainian -> I
    com.paragon.open.dictionary.api.Language Uzbek -> J
    com.paragon.open.dictionary.api.Language Vietnamese -> K
    java.lang.String name -> L
    java.lang.String shortName -> M
    com.paragon.open.dictionary.api.Language[] $VALUES -> N
    26:26:com.paragon.open.dictionary.api.Language[] values() -> values
    26:26:com.paragon.open.dictionary.api.Language valueOf(java.lang.String) -> valueOf
    79:82:void <init>(java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    86:86:java.lang.String toString() -> toString
    111:119:com.paragon.open.dictionary.api.Language fromShortName(java.lang.String) -> a
    26:68:void <clinit>() -> <clinit>
com.paragon.open.dictionary.api.Morphology -> com.paragon.open.dictionary.api.j:
    com.paragon.open.dictionary.api.Dictionary dict -> a
    java.lang.String packageName -> b
    java.lang.String uid -> c
    com.paragon.open.dictionary.api.Language language -> d
    40:43:void <init>(android.content.Context,com.paragon.open.dictionary.api.Dictionary,android.content.pm.ApplicationInfo,java.lang.String) -> <init>
    90:90:com.paragon.open.dictionary.api.Language getLanguage() -> a
    94:95:void prepare(android.content.pm.ApplicationInfo,java.lang.String) -> a
    98:100:void setLanguage(com.paragon.open.dictionary.api.Language) -> a
    104:104:int hashCode() -> hashCode
    108:109:boolean equals(java.lang.Object) -> equals
    113:113:java.lang.String toString() -> toString
com.paragon.open.dictionary.api.OpenDictionaryAPI -> com.paragon.open.dictionary.api.k:
    com.paragon.open.dictionary.api.Direction DIRECTION_ANY_ANY -> b
    android.content.Context ctx -> c
    java.util.HashMap dictsMap -> d
    java.util.HashMap morphosMap -> a
    75:81:void <init>(android.content.Context) -> <init>
    83:110:void prepare() -> b
    168:168:java.util.HashSet getDictionaries() -> a
    179:201:java.util.HashSet getDictionaries(com.paragon.open.dictionary.api.Direction) -> a
    64:64:void <clinit>() -> <clinit>
com.paragon.open.dictionary.api.TranslateFormat -> com.paragon.open.dictionary.api.l:
    com.paragon.open.dictionary.api.TranslateFormat HTML -> a
    com.paragon.open.dictionary.api.TranslateFormat PLAIN -> b
    java.lang.String name -> c
    com.paragon.open.dictionary.api.TranslateFormat[] $VALUES -> d
    24:24:com.paragon.open.dictionary.api.TranslateFormat[] values() -> values
    24:24:com.paragon.open.dictionary.api.TranslateFormat valueOf(java.lang.String) -> valueOf
    37:39:void <init>(java.lang.String,int,java.lang.String) -> <init>
    47:47:java.lang.String getName() -> a
    52:52:java.lang.String toString() -> toString
    24:33:void <clinit>() -> <clinit>
com.paragon.open.dictionary.api.TranslateMode -> com.paragon.open.dictionary.api.m:
    com.paragon.open.dictionary.api.TranslateMode FULL -> a
    com.paragon.open.dictionary.api.TranslateMode SHORT -> b
    java.lang.String name -> c
    com.paragon.open.dictionary.api.TranslateMode[] $VALUES -> d
    24:24:com.paragon.open.dictionary.api.TranslateMode[] values() -> values
    24:24:com.paragon.open.dictionary.api.TranslateMode valueOf(java.lang.String) -> valueOf
    37:39:void <init>(java.lang.String,int,java.lang.String) -> <init>
    47:47:java.lang.String getName() -> a
    52:52:java.lang.String toString() -> toString
    56:59:com.paragon.open.dictionary.api.TranslateMode getByName(java.lang.String) -> a
    24:33:void <clinit>() -> <clinit>
com.paragon.open.dictionary.api.Utils -> com.paragon.open.dictionary.api.n:
    35:35:java.lang.String prefix(com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> a
    39:39:java.lang.Object getObject(android.content.pm.ApplicationInfo,com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> a
    42:42:boolean getBoolean(android.content.pm.ApplicationInfo,com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> b
    45:45:int getInt(android.content.pm.ApplicationInfo,com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> c
    48:48:java.lang.String getString(android.content.pm.ApplicationInfo,com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> d
    54:54:java.lang.String[] getStringArray(android.content.pm.ApplicationInfo,com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> e
    57:61:java.util.HashMap getLocalizedNames(android.content.pm.ApplicationInfo,com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> f
    64:67:byte[] fromHex(java.lang.String) -> a
    71:72:boolean isMetaNotEmpty(android.content.pm.ApplicationInfo,com.paragon.open.dictionary.api.Utils$Type,java.lang.String,com.paragon.open.dictionary.api.Utils$Name) -> g
com.paragon.open.dictionary.api.Utils$Name -> com.paragon.open.dictionary.api.n$a:
    com.paragon.open.dictionary.api.Utils$Name ID -> a
    com.paragon.open.dictionary.api.Utils$Name LANG -> b
    com.paragon.open.dictionary.api.Utils$Name WORDS_COUNT -> c
    com.paragon.open.dictionary.api.Utils$Name VERSION -> d
    com.paragon.open.dictionary.api.Utils$Name IS_RTL -> e
    com.paragon.open.dictionary.api.Utils$Name NAME_FULL -> f
    com.paragon.open.dictionary.api.Utils$Name NAME_SHORT -> g
    com.paragon.open.dictionary.api.Utils$Name LANGUAGE_NAME -> h
    com.paragon.open.dictionary.api.Utils$Name LANGUAGES_PAIR_NAME_FULL -> i
    com.paragon.open.dictionary.api.Utils$Name LANGUAGES_PAIR_NAME_SHORT -> j
    com.paragon.open.dictionary.api.Utils$Name AUTHOR_NAME -> k
    com.paragon.open.dictionary.api.Utils$Name AUTHOR_WEB -> l
    com.paragon.open.dictionary.api.Utils$Name PRODUCT_NAME -> m
    com.paragon.open.dictionary.api.Utils$Name TRANSLATION_AS_IMAGE_SUPPORTED -> n
    com.paragon.open.dictionary.api.Utils$Name TRANSLATION_AS_TEXT_SUPPORTED -> o
    java.lang.String name -> p
    com.paragon.open.dictionary.api.Utils$Name[] $VALUES -> q
    93:93:com.paragon.open.dictionary.api.Utils$Name[] values() -> values
    93:93:com.paragon.open.dictionary.api.Utils$Name valueOf(java.lang.String) -> valueOf
    113:115:void <init>(java.lang.String,int,java.lang.String) -> <init>
    119:119:java.lang.String toString() -> toString
    93:109:void <clinit>() -> <clinit>
com.paragon.open.dictionary.api.Utils$Type -> com.paragon.open.dictionary.api.n$b:
    com.paragon.open.dictionary.api.Utils$Type DICT -> a
    com.paragon.open.dictionary.api.Utils$Type MORPHO -> b
    java.lang.String name -> c
    com.paragon.open.dictionary.api.Utils$Type[] $VALUES -> d
    75:75:com.paragon.open.dictionary.api.Utils$Type[] values() -> values
    75:75:com.paragon.open.dictionary.api.Utils$Type valueOf(java.lang.String) -> valueOf
    82:84:void <init>(java.lang.String,int,java.lang.String) -> <init>
    88:88:java.lang.String toString() -> toString
    75:78:void <clinit>() -> <clinit>
org.amse.ys.zip.Decompressor -> org.amse.ys.zip.a:
    java.util.Queue ourDeflators -> a
    int read(byte[],int,int) -> a
    int read() -> a
    17:18:void <init>() -> <init>
    23:28:void storeDecompressor(org.amse.ys.zip.Decompressor) -> a
    31:44:org.amse.ys.zip.Decompressor init(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> a
    49:49:int available() -> b
    20:20:void <clinit>() -> <clinit>
org.amse.ys.zip.DeflatingDecompressor -> org.amse.ys.zip.DeflatingDecompressor:
    org.amse.ys.zip.MyBufferedInputStream myStream -> a
    int myCompressedAvailable -> b
    int myAvailable -> c
    byte[] myInBuffer -> d
    int myInBufferOffset -> e
    int myInBufferLength -> f
    byte[] myOutBuffer -> g
    int myOutBufferOffset -> h
    int myOutBufferLength -> i
    int myInflatorId -> j
    18:30:void <init>(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> <init>
    33:57:void reset(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> b
    61:61:int available() -> b
    66:94:int read(byte[],int,int) -> a
    99:111:int read() -> a
    115:161:void fillOutBuffer() -> c
    int startInflating() -> startInflating
    void endInflating(int) -> endInflating
    long inflate(int,byte[],int,int,byte[]) -> inflate
    7:8:void <clinit>() -> <clinit>
org.amse.ys.zip.LocalFileHeader -> org.amse.ys.zip.b:
    int Signature -> a
    int Version -> b
    int Flags -> c
    int CompressionMethod -> d
    int ModificationTime -> e
    int ModificationDate -> f
    int CRC32 -> g
    int CompressedSize -> h
    int UncompressedSize -> i
    int NameLength -> j
    int ExtraLength -> k
    java.lang.String FileName -> l
    int DataOffset -> m
    32:33:void <init>() -> <init>
    36:93:void readFrom(org.amse.ys.zip.MyBufferedInputStream) -> a
org.amse.ys.zip.MyBufferedInputStream -> org.amse.ys.zip.c:
    org.amse.ys.zip.ZipFile$InputStreamHolder myStreamHolder -> c
    java.io.InputStream myFileInputStream -> d
    byte[] myBuffer -> e
    int myBytesReady -> a
    int myPositionInBuffer -> b
    int myCurrentPosition -> f
    13:19:void <init>(org.amse.ys.zip.ZipFile$InputStreamHolder,int) -> <init>
    22:23:void <init>(org.amse.ys.zip.ZipFile$InputStreamHolder) -> <init>
    27:27:int available() -> available
    31:31:int offset() -> a
    36:51:int read(byte[],int,int) -> read
    56:65:int read() -> read
    69:74:int read2Bytes() -> b
    78:85:int read4Bytes() -> c
    89:93:java.lang.String readString(int) -> a
    98:116:long skip(long) -> skip
    121:131:void backSkip(int) -> b
    134:139:void setPosition(int) -> c
    157:159:void close() -> close
org.amse.ys.zip.NoCompressionDecompressor -> org.amse.ys.zip.d:
    org.amse.ys.zip.LocalFileHeader myHeader -> a
    org.amse.ys.zip.MyBufferedInputStream myStream -> b
    int myCurrentPosition -> c
    11:14:void <init>(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> <init>
    18:28:int read(byte[],int,int) -> a
    33:37:int read() -> a
    43:43:int available() -> b
org.amse.ys.zip.ZipException -> org.amse.ys.zip.e:
    8:9:void <init>(java.lang.String) -> <init>
org.amse.ys.zip.ZipFile -> org.amse.ys.zip.f:
    org.amse.ys.zip.ZipFile$InputStreamHolder myStreamHolder -> a
    java.util.LinkedHashMap myFileHeaders -> b
    boolean myAllFilesAreRead -> c
    java.util.Queue myStoredStreams -> d
    24:113:void <init>(org.amse.ys.zip.ZipFile$InputStreamHolder) -> <init>
    50:53:java.util.Collection headers() -> a
    57:74:boolean readFileHeader(org.amse.ys.zip.MyBufferedInputStream,java.lang.String) -> a
    78:94:void readAllHeaders() -> c
    100:111:void findAndReadDescriptor(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> a
    116:117:void storeBaseStream(org.amse.ys.zip.MyBufferedInputStream) -> a
    120:121:org.amse.ys.zip.MyBufferedInputStream getBaseStream() -> b
    125:125:org.amse.ys.zip.ZipInputStream createZipInputStream(org.amse.ys.zip.LocalFileHeader) -> a
    130:132:boolean entryExists(java.lang.String) -> a
    137:137:int getEntrySize(java.lang.String) -> b
    141:141:java.io.InputStream getInputStream(java.lang.String) -> c
    145:167:org.amse.ys.zip.LocalFileHeader getHeader(java.lang.String) -> d
org.amse.ys.zip.ZipFile$1 -> org.amse.ys.zip.g:
    long serialVersionUID -> serialVersionUID
    org.amse.ys.zip.ZipFile this$0 -> a
    24:24:void <init>(org.amse.ys.zip.ZipFile) -> <init>
    29:29:org.amse.ys.zip.LocalFileHeader get(java.lang.Object) -> a
    34:34:org.amse.ys.zip.LocalFileHeader put(java.lang.String,org.amse.ys.zip.LocalFileHeader) -> a
    24:24:java.lang.Object get(java.lang.Object) -> get
    24:24:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
org.amse.ys.zip.ZipFile$InputStreamHolder -> org.amse.ys.zip.f$a:
    java.io.InputStream getInputStream() -> a
org.amse.ys.zip.ZipInputStream -> org.amse.ys.zip.h:
    org.amse.ys.zip.ZipFile myParent -> a
    org.amse.ys.zip.MyBufferedInputStream myBaseStream -> b
    org.amse.ys.zip.Decompressor myDecompressor -> c
    boolean myIsClosed -> d
    11:16:void <init>(org.amse.ys.zip.ZipFile,org.amse.ys.zip.LocalFileHeader) -> <init>
    20:20:int available() -> available
    25:34:int read(byte[],int,int) -> read
    39:39:int read() -> read
    44:49:void close() -> close
    54:58:void finalize() -> finalize
org.geometerplus.android.MyInterface.SearchLocalCountInterface -> org.geometerplus.android.MyInterface.a:
    void resfreshCount() -> a
org.geometerplus.android.fbreader.BookCatalogActivity -> org.geometerplus.android.fbreader.BookCatalogActivity:
    android.widget.LinearLayout linearLayoutTop -> c
    android.widget.ListView listCatalog -> d
    android.widget.ListView listAnnotate -> e
    android.widget.Button tabCatalog -> f
    android.widget.Button tabBookMark -> g
    org.geometerplus.android.fbreader.BookCatalogActivity$TOCAdapter myAdapter -> h
    org.geometerplus.zlibrary.core.tree.ZLTree mySelectedItem -> i
    org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter mkAdapter -> j
    java.lang.Long bookId -> k
    android.view.View$OnClickListener myListener -> a
    android.widget.AdapterView$OnItemClickListener listAnnotateListener -> l
    android.widget.AdapterView$OnItemLongClickListener listAnnotateLongListener -> m
    android.os.Handler refreshHandler -> b
    52:362:void <init>() -> <init>
    71:143:void onCreate(android.os.Bundle) -> onCreate
    149:161:void openBookText(org.geometerplus.android.fbreader.extBkMarkDB.BookMark) -> a
    165:176:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    321:339:void openDelMarkDialog(java.lang.Long) -> a
    52:52:org.geometerplus.zlibrary.core.tree.ZLTree access$000(org.geometerplus.android.fbreader.BookCatalogActivity) -> a
    52:52:android.widget.LinearLayout access$100(org.geometerplus.android.fbreader.BookCatalogActivity) -> b
    52:52:android.widget.Button access$200(org.geometerplus.android.fbreader.BookCatalogActivity) -> c
    52:52:android.widget.Button access$300(org.geometerplus.android.fbreader.BookCatalogActivity) -> d
    52:52:android.widget.ListView access$400(org.geometerplus.android.fbreader.BookCatalogActivity) -> e
    52:52:android.widget.ListView access$500(org.geometerplus.android.fbreader.BookCatalogActivity) -> f
    52:52:void access$600(org.geometerplus.android.fbreader.BookCatalogActivity,java.lang.Long) -> a
    52:52:java.lang.Long access$700(org.geometerplus.android.fbreader.BookCatalogActivity) -> g
    52:52:org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter access$800(org.geometerplus.android.fbreader.BookCatalogActivity) -> h
org.geometerplus.android.fbreader.BookCatalogActivity$1 -> org.geometerplus.android.fbreader.a:
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> a
    135:135:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity) -> <init>
    139:141:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.BookCatalogActivity$2 -> org.geometerplus.android.fbreader.b:
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> a
    251:251:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity) -> <init>
    255:278:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.BookCatalogActivity$3 -> org.geometerplus.android.fbreader.c:
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> a
    286:286:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity) -> <init>
    290:299:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
org.geometerplus.android.fbreader.BookCatalogActivity$4 -> org.geometerplus.android.fbreader.d:
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> a
    304:304:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity) -> <init>
    308:316:boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
org.geometerplus.android.fbreader.BookCatalogActivity$5 -> org.geometerplus.android.fbreader.e:
    java.lang.Long val$id -> a
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> b
    324:324:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity,java.lang.Long) -> <init>
    327:331:void onClick(android.content.DialogInterface,int) -> onClick
org.geometerplus.android.fbreader.BookCatalogActivity$6 -> org.geometerplus.android.fbreader.f:
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> a
    333:333:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity) -> <init>
    336:336:void onClick(android.content.DialogInterface,int) -> onClick
org.geometerplus.android.fbreader.BookCatalogActivity$7 -> org.geometerplus.android.fbreader.g:
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> a
    363:363:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity) -> <init>
    365:373:void handleMessage(android.os.Message) -> handleMessage
org.geometerplus.android.fbreader.BookCatalogActivity$TOCAdapter -> org.geometerplus.android.fbreader.BookCatalogActivity$a:
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> a
    180:182:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity,android.widget.ListView,org.geometerplus.fbreader.bookmodel.TOCTree) -> <init>
    187:202:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    206:220:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    224:238:void openBookText(org.geometerplus.fbreader.bookmodel.TOCTree) -> a
    242:246:boolean runTreeItem(org.geometerplus.zlibrary.core.tree.ZLTree) -> a
org.geometerplus.android.fbreader.BookCatalogActivity$getBookMarksThread -> org.geometerplus.android.fbreader.BookCatalogActivity$b:
    java.lang.Long bookId -> a
    org.geometerplus.android.fbreader.BookCatalogActivity this$0 -> b
    345:347:void <init>(org.geometerplus.android.fbreader.BookCatalogActivity,java.lang.Long) -> <init>
    351:358:void run() -> run
org.geometerplus.android.fbreader.BookmarkEditActivity -> org.geometerplus.android.fbreader.BookmarkEditActivity:
    55:55:void <init>() -> <init>
    58:61:void onCreate(android.os.Bundle) -> onCreate
org.geometerplus.android.fbreader.BookmarksActivity -> org.geometerplus.android.fbreader.BookmarksActivity:
    org.geometerplus.android.fbreader.libraryService.BookCollectionShadow myCollection -> a
    org.geometerplus.fbreader.book.Book myBook -> b
    java.util.Comparator myComparator -> c
    org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter myThisBookAdapter -> d
    org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter myAllBooksAdapter -> e
    org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter mySearchResultsAdapter -> f
    org.geometerplus.zlibrary.core.resources.ZLResource myResource -> g
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption myBookmarkSearchPatternOption -> h
    42:57:void <init>() -> <init>
    61:64:android.widget.ListView createTab(java.lang.String,int) -> a
    69:87:void onCreate(android.os.Bundle) -> onCreate
    118:149:void onStart() -> onStart
    153:173:void onNewIntent(android.content.Intent) -> onNewIntent
    177:179:void onStop() -> onStop
    183:190:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    195:196:boolean onSearchRequested() -> onSearchRequested
    200:209:void showSearchResultsTab(java.util.LinkedList) -> a
    213:217:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    223:248:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    252:259:void addBookmark() -> a
    262:270:void gotoBookmark(org.geometerplus.fbreader.book.Bookmark) -> a
    42:42:org.geometerplus.fbreader.book.Book access$000(org.geometerplus.android.fbreader.BookmarksActivity) -> a
    42:42:org.geometerplus.android.fbreader.libraryService.BookCollectionShadow access$100(org.geometerplus.android.fbreader.BookmarksActivity) -> b
    42:42:org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter access$200(org.geometerplus.android.fbreader.BookmarksActivity) -> c
    42:42:org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter access$300(org.geometerplus.android.fbreader.BookmarksActivity) -> d
    42:42:org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter access$202(org.geometerplus.android.fbreader.BookmarksActivity,org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter) -> a
    42:42:android.widget.ListView access$400(org.geometerplus.android.fbreader.BookmarksActivity,java.lang.String,int) -> a
    42:42:org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter access$302(org.geometerplus.android.fbreader.BookmarksActivity,org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter) -> b
    42:42:java.util.Comparator access$700(org.geometerplus.android.fbreader.BookmarksActivity) -> e
    42:42:org.geometerplus.zlibrary.core.resources.ZLResource access$800(org.geometerplus.android.fbreader.BookmarksActivity) -> f
    42:42:void access$900(org.geometerplus.android.fbreader.BookmarksActivity,org.geometerplus.fbreader.book.Bookmark) -> a
    42:42:void access$1000(org.geometerplus.android.fbreader.BookmarksActivity) -> g
org.geometerplus.android.fbreader.BookmarksActivity$1 -> org.geometerplus.android.fbreader.h:
    org.geometerplus.android.fbreader.BookmarksActivity this$0 -> a
    120:120:void <init>(org.geometerplus.android.fbreader.BookmarksActivity) -> <init>
    122:123:void run() -> run
org.geometerplus.android.fbreader.BookmarksActivity$2 -> org.geometerplus.android.fbreader.i:
    org.geometerplus.android.fbreader.BookmarksActivity this$0 -> a
    126:126:void <init>(org.geometerplus.android.fbreader.BookmarksActivity) -> <init>
    128:145:void run() -> run
org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter -> org.geometerplus.android.fbreader.BookmarksActivity$a:
    java.util.List myBookmarks -> b
    boolean myShowAddBookmarkItem -> c
    org.geometerplus.android.fbreader.BookmarksActivity this$0 -> a
    273:282:void <init>(org.geometerplus.android.fbreader.BookmarksActivity,android.widget.ListView,boolean) -> <init>
    285:285:java.util.List bookmarks() -> a
    289:302:void addAll(java.util.List) -> a
    305:316:void add(org.geometerplus.fbreader.book.Bookmark) -> a
    319:325:void remove(org.geometerplus.fbreader.book.Bookmark) -> b
    328:334:void clear() -> b
    337:344:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    348:370:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    375:375:boolean areAllItemsEnabled() -> areAllItemsEnabled
    380:380:boolean isEnabled(int) -> isEnabled
    385:385:long getItemId(int) -> getItemId
    390:393:org.geometerplus.fbreader.book.Bookmark getItem(int) -> a
    398:398:int getCount() -> getCount
    402:408:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    272:272:java.lang.Object getItem(int) -> getItem
    272:272:java.util.List access$600(org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter) -> a
org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter$1 -> org.geometerplus.android.fbreader.j:
    java.util.List val$bookmarks -> a
    org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter this$1 -> b
    289:289:void <init>(org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter,java.util.List) -> <init>
    291:300:void run() -> run
org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter$2 -> org.geometerplus.android.fbreader.k:
    org.geometerplus.fbreader.book.Bookmark val$b -> a
    org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter this$1 -> b
    305:305:void <init>(org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter,org.geometerplus.fbreader.book.Bookmark) -> <init>
    307:314:void run() -> run
org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter$3 -> org.geometerplus.android.fbreader.l:
    org.geometerplus.fbreader.book.Bookmark val$b -> a
    org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter this$1 -> b
    319:319:void <init>(org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter,org.geometerplus.fbreader.book.Bookmark) -> <init>
    321:323:void run() -> run
org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter$4 -> org.geometerplus.android.fbreader.m:
    org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter this$1 -> a
    328:328:void <init>(org.geometerplus.android.fbreader.BookmarksActivity$BookmarksAdapter) -> <init>
    330:332:void run() -> run
org.geometerplus.android.fbreader.BookmarksActivity$Initializer -> org.geometerplus.android.fbreader.BookmarksActivity$b:
    org.geometerplus.android.fbreader.BookmarksActivity this$0 -> a
    89:89:void <init>(org.geometerplus.android.fbreader.BookmarksActivity) -> <init>
    91:113:void run() -> run
    89:89:void <init>(org.geometerplus.android.fbreader.BookmarksActivity,org.geometerplus.android.fbreader.BookmarksActivity$1) -> <init>
org.geometerplus.android.fbreader.BookmarksActivity$Initializer$1 -> org.geometerplus.android.fbreader.n:
    org.geometerplus.android.fbreader.BookmarksActivity$Initializer this$1 -> a
    108:108:void <init>(org.geometerplus.android.fbreader.BookmarksActivity$Initializer) -> <init>
    110:111:void run() -> run
org.geometerplus.android.fbreader.ButtonsPopupPanel -> org.geometerplus.android.fbreader.o:
    java.util.ArrayList myButtons -> d
    48:52:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    55:62:void addButton(java.lang.String,boolean,int) -> a
    65:112:void addTextView(java.lang.String,int) -> a
    116:119:void update() -> a
    122:129:void onClick(android.view.View) -> onClick
    35:35:org.geometerplus.zlibrary.core.application.ZLApplication access$000(org.geometerplus.android.fbreader.ButtonsPopupPanel) -> a
    35:35:org.geometerplus.zlibrary.core.application.ZLApplication access$100(org.geometerplus.android.fbreader.ButtonsPopupPanel) -> b
org.geometerplus.android.fbreader.ButtonsPopupPanel$1 -> org.geometerplus.android.fbreader.p:
    org.geometerplus.android.fbreader.ButtonsPopupPanel this$0 -> a
    96:96:void <init>(org.geometerplus.android.fbreader.ButtonsPopupPanel) -> <init>
    100:101:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.ButtonsPopupPanel$2 -> org.geometerplus.android.fbreader.q:
    org.geometerplus.android.fbreader.ButtonsPopupPanel this$0 -> a
    104:104:void <init>(org.geometerplus.android.fbreader.ButtonsPopupPanel) -> <init>
    108:109:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.ButtonsPopupPanel$ActionButton -> org.geometerplus.android.fbreader.o$a:
    java.lang.String ActionId -> a
    boolean IsCloseButton -> b
    org.geometerplus.android.fbreader.ButtonsPopupPanel this$0 -> c
    41:45:void <init>(org.geometerplus.android.fbreader.ButtonsPopupPanel,android.content.Context,java.lang.String,boolean) -> <init>
org.geometerplus.android.fbreader.DictionaryUtil -> org.geometerplus.android.fbreader.r:
    int FLAG_INSTALLED_ONLY -> b
    int FLAG_SHOW_AS_DICTIONARY -> c
    int FLAG_SHOW_AS_TRANSLATOR -> d
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption ourSingleWordTranslatorOption -> e
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption ourMultiWordTranslatorOption -> f
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption TargetLanguageOption -> a
    java.util.Map ourInfos -> g
    257:273:void collectOpenDictionaries(android.content.Context) -> c
    276:291:void init(android.content.Context) -> a
    294:323:java.util.List dictionaryInfos(android.content.Context,boolean) -> a
    327:334:org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo firstInfo() -> g
    338:341:org.geometerplus.zlibrary.ui.android.options.ZLStringOption singleWordTranslatorOption() -> a
    345:348:org.geometerplus.zlibrary.ui.android.options.ZLStringOption multiWordTranslatorOption() -> b
    352:362:org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo getCurrentDictionaryInfo(boolean) -> a
    385:409:void openTextInDictionary(android.app.Activity,java.lang.String,boolean,int,int) -> a
    412:415:void openWordInDictionary(android.app.Activity,org.geometerplus.zlibrary.text.view.ZLTextWord,org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
    418:439:void installDictionaryIfNotInstalled(android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo) -> a
    442:445:void installDictionary(android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo) -> c
    50:50:int access$000() -> c
    50:50:int access$100() -> d
    50:50:int access$200() -> e
    50:50:java.util.Map access$300() -> f
    50:50:void access$500(android.content.Context) -> b
    50:50:void access$600(android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo) -> b
    51:63:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.DictionaryUtil$1 -> org.geometerplus.android.fbreader.s:
    258:258:void <init>() -> <init>
    261:261:int compare(com.paragon.open.dictionary.api.Dictionary,com.paragon.open.dictionary.api.Dictionary) -> a
    258:258:int compare(java.lang.Object,java.lang.Object) -> compare
org.geometerplus.android.fbreader.DictionaryUtil$2 -> org.geometerplus.android.fbreader.t:
    android.content.Context val$context -> a
    277:277:void <init>(android.content.Context) -> <init>
    279:286:void run() -> run
org.geometerplus.android.fbreader.DictionaryUtil$3 -> org.geometerplus.android.fbreader.u:
    org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo val$info -> a
    java.lang.String val$textToTranslate -> b
    android.app.Activity val$activity -> c
    org.geometerplus.android.fbreader.DictionaryUtil$PopupFrameMetric val$frameMetrics -> d
    404:404:void <init>(org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo,java.lang.String,android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PopupFrameMetric) -> <init>
    406:407:void run() -> run
org.geometerplus.android.fbreader.DictionaryUtil$4 -> org.geometerplus.android.fbreader.v:
    android.app.Activity val$activity -> a
    org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo val$info -> b
    431:431:void <init>(android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo) -> <init>
    433:434:void onClick(android.content.DialogInterface,int) -> onClick
org.geometerplus.android.fbreader.DictionaryUtil$BitKnightsInfoReader -> org.geometerplus.android.fbreader.r$a:
    android.content.Context myContext -> a
    int myCounter -> b
    212:214:void <init>(android.content.Context) -> <init>
    218:218:boolean dontCacheAttributeValues() -> a
    223:239:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
org.geometerplus.android.fbreader.DictionaryUtil$InfoReader -> org.geometerplus.android.fbreader.r$b:
    170:170:void <init>() -> <init>
    173:173:boolean dontCacheAttributeValues() -> a
    178:204:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    170:170:void <init>(org.geometerplus.android.fbreader.DictionaryUtil$1) -> <init>
org.geometerplus.android.fbreader.DictionaryUtil$OpenDictionaryPackageInfo -> org.geometerplus.android.fbreader.r$c:
    com.paragon.dictionary.fbreader.OpenDictionaryFlyout Flyout -> a
    151:162:void <init>(com.paragon.open.dictionary.api.Dictionary) -> <init>
    166:167:void open(java.lang.String,android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PopupFrameMetric) -> a
org.geometerplus.android.fbreader.DictionaryUtil$PackageInfo -> org.geometerplus.android.fbreader.r$d:
    java.lang.String Id -> b
    java.lang.String PackageName -> c
    java.lang.String ClassName -> d
    java.lang.String Title -> e
    java.lang.String IntentAction -> f
    java.lang.String IntentKey -> g
    java.lang.String IntentDataPattern -> h
    boolean SupportsTargetLanguageSetting -> i
    77:88:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> <init>
    91:108:android.content.Intent getDictionaryIntent(java.lang.String) -> a
    void open(java.lang.String,android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PopupFrameMetric) -> a
org.geometerplus.android.fbreader.DictionaryUtil$PlainPackageInfo -> org.geometerplus.android.fbreader.r$e:
    117:118:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean) -> <init>
    122:144:void open(java.lang.String,android.app.Activity,org.geometerplus.android.fbreader.DictionaryUtil$PopupFrameMetric) -> a
org.geometerplus.android.fbreader.DictionaryUtil$PopupFrameMetric -> org.geometerplus.android.fbreader.r$f:
    int Height -> a
    int Gravity -> b
    369:380:void <init>(android.util.DisplayMetrics,int,int) -> <init>
org.geometerplus.android.fbreader.FBAndroidAction -> org.geometerplus.android.fbreader.w:
    org.geometerplus.android.fbreader.FBReader BaseActivity -> a
    29:31:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
org.geometerplus.android.fbreader.FBReader -> org.geometerplus.android.fbreader.FBReader:
    org.geometerplus.fbreader.fbreader.FBReaderApp myFBReaderApp -> d
    org.geometerplus.fbreader.book.Book myBook -> e
    android.widget.RelativeLayout myRootView -> f
    org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget myMainView -> g
    boolean myShowStatusBarFlag -> h
    boolean myShowActionBarFlag -> i
    boolean myActionBarIsVisible -> j
    android.view.View vEditMarkMenu -> k
    android.widget.PopupWindow pwEditMark -> l
    android.view.View cancelView -> m
    android.widget.Button markEditOk -> n
    android.widget.Button markEditCancel -> o
    android.widget.EditText markEditInfo -> p
    android.widget.TextView markEditTitle -> q
    java.util.List myPluginActions -> r
    android.content.BroadcastReceiver myPluginInfoReceiver -> s
    android.view.View$OnClickListener markListener -> t
    android.widget.ViewAnimator mTopTools -> u
    android.widget.ImageView mToolMinify -> v
    android.widget.ImageView mToolBookmark -> w
    android.widget.ImageButton mBtnMkHint -> x
    android.widget.TextView mTxtMkHintContent -> y
    android.view.View$OnClickListener hitListener -> a
    org.geometerplus.android.fbreader.NavigationPopup myNavigationPopup -> z
    android.os.PowerManager$WakeLock myWakeLock -> A
    boolean myWakeLockToCreate -> B
    boolean myStartTimer -> C
    android.content.BroadcastReceiver myBatteryInfoReceiver -> D
    android.view.View$OnClickListener myToolsListener -> b
    android.view.View$OnLongClickListener myToolsLongListener -> c
    89:1229:void <init>() -> <init>
    104:109:void openBookActivity(android.content.Context,org.geometerplus.fbreader.book.Book,org.geometerplus.fbreader.book.Bookmark) -> a
    112:112:org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary getZLibrary() -> o
    167:192:void openBook(android.content.Intent,java.lang.Runnable,boolean) -> a
    195:210:org.geometerplus.fbreader.book.Book createBookForFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    214:214:java.lang.Runnable getPostponedInitAction() -> p
    227:397:void onCreate(android.os.Bundle) -> onCreate
    425:457:void saveMarkInfo(java.lang.String) -> a
    460:463:void showMsg(java.lang.String) -> b
    475:506:void createTools(android.view.LayoutInflater) -> a
    517:532:void createMarkHint(android.view.LayoutInflater) -> b
    549:549:org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget getMainView() -> a
    554:602:void onNewIntent(android.content.Intent) -> onNewIntent
    606:640:void onStart() -> onStart
    644:648:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    651:666:void initPluginActions() -> q
    670:704:void onResume() -> onResume
    709:720:void onPause() -> onPause
    724:728:void onStop() -> onStop
    732:736:void onDestroy() -> onDestroy
    740:742:void onLowMemory() -> onLowMemory
    746:759:boolean onSearchRequested() -> onSearchRequested
    766:771:void showSelectionPanel() -> b
    774:778:void hideSelectionPanel() -> c
    781:783:void onPreferencesUpdate(org.geometerplus.fbreader.book.Book) -> a
    787:805:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    808:809:void runCancelAction(android.content.Intent) -> a
    834:837:void addMenuItem(android.view.Menu,java.lang.String,int,boolean) -> a
    840:843:void addMenuItem(android.view.Menu,java.lang.String) -> a
    848:870:void setupMenu(android.view.Menu) -> a
    874:878:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    884:884:boolean barsAreShown() -> d
    889:905:void setStatusBarVisibility(boolean) -> a
    911:929:void hideBars() -> e
    935:946:void showBars() -> f
    954:997:org.geometerplus.android.fbreader.extBkMarkDB.BookMark getCurPageBookMark() -> g
    1018:1039:void refreshBookmarkHint() -> h
    1045:1053:void refresh() -> i
    1059:1060:void increaseFont() -> j
    1066:1067:void decreaseFont() -> k
    1071:1077:void setTitle(java.lang.CharSequence) -> setTitle
    1081:1082:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1087:1088:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1092:1095:void setButtonLight(boolean) -> b
    1102:1117:void createWakeLock() -> l
    1120:1134:void switchWakeLock(boolean) -> c
    1148:1151:void setScreenBrightnessAuto() -> r
    1154:1163:void setScreenBrightness(int) -> a
    1166:1167:int getScreenBrightness() -> m
    1171:1171:org.geometerplus.android.fbreader.libraryService.BookCollectionShadow getCollection() -> s
    1176:1177:void onBackPressed() -> onBackPressed
    1181:1183:void finish() -> finish
    89:89:java.util.List access$000(org.geometerplus.android.fbreader.FBReader) -> a
    89:89:org.geometerplus.fbreader.fbreader.FBReaderApp access$100(org.geometerplus.android.fbreader.FBReader) -> b
    89:89:android.widget.PopupWindow access$200(org.geometerplus.android.fbreader.FBReader) -> c
    89:89:android.widget.EditText access$300(org.geometerplus.android.fbreader.FBReader) -> d
    89:89:void access$400(org.geometerplus.android.fbreader.FBReader,java.lang.String) -> a
    89:89:android.widget.TextView access$500(org.geometerplus.android.fbreader.FBReader) -> e
    89:89:void access$600(org.geometerplus.android.fbreader.FBReader,android.content.Intent,java.lang.Runnable,boolean) -> a
    89:89:java.lang.Runnable access$700(org.geometerplus.android.fbreader.FBReader) -> f
    89:89:void access$800(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.book.Book) -> a
    89:89:org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary access$900() -> n
    89:89:void access$1000(org.geometerplus.android.fbreader.FBReader,boolean) -> a
    89:89:android.widget.TextView access$1100(org.geometerplus.android.fbreader.FBReader) -> g
    89:89:android.widget.ImageView access$1200(org.geometerplus.android.fbreader.FBReader) -> h
    89:89:android.view.View access$1300(org.geometerplus.android.fbreader.FBReader) -> i
org.geometerplus.android.fbreader.FBReader$1 -> org.geometerplus.android.fbreader.x:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    137:137:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    140:162:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.geometerplus.android.fbreader.FBReader$10 -> org.geometerplus.android.fbreader.y:
    org.geometerplus.zlibrary.core.application.ZLApplication$PopupPanel val$popup -> a
    android.app.SearchManager val$manager -> b
    org.geometerplus.android.fbreader.FBReader this$0 -> c
    749:749:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.zlibrary.core.application.ZLApplication$PopupPanel,android.app.SearchManager) -> <init>
    751:755:void onCancel() -> onCancel
org.geometerplus.android.fbreader.FBReader$11 -> org.geometerplus.android.fbreader.z:
    org.geometerplus.fbreader.book.Book val$book -> a
    org.geometerplus.android.fbreader.FBReader this$0 -> b
    793:793:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.book.Book) -> <init>
    795:796:void run() -> run
org.geometerplus.android.fbreader.FBReader$12 -> org.geometerplus.android.fbreader.aa:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    1136:1136:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    1138:1144:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.geometerplus.android.fbreader.FBReader$13 -> org.geometerplus.android.fbreader.ab:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    1188:1188:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    1192:1226:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.FBReader$14 -> org.geometerplus.android.fbreader.ac:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    1229:1229:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    1233:1244:boolean onLongClick(android.view.View) -> onLongClick
org.geometerplus.android.fbreader.FBReader$2 -> org.geometerplus.android.fbreader.ad:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    214:214:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    216:221:void run() -> run
org.geometerplus.android.fbreader.FBReader$2$1 -> org.geometerplus.android.fbreader.ae:
    org.geometerplus.android.fbreader.FBReader$2 this$1 -> a
    216:216:void <init>(org.geometerplus.android.fbreader.FBReader$2) -> <init>
    218:219:void run() -> run
org.geometerplus.android.fbreader.FBReader$3 -> org.geometerplus.android.fbreader.af:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    375:375:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    379:380:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.FBReader$4 -> org.geometerplus.android.fbreader.ag:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    403:403:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    407:421:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.FBReader$5 -> org.geometerplus.android.fbreader.ah:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    534:534:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    538:545:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.FBReader$6 -> org.geometerplus.android.fbreader.ai:
    android.content.Intent val$intent -> a
    org.geometerplus.android.fbreader.FBReader this$0 -> b
    566:566:void <init>(org.geometerplus.android.fbreader.FBReader,android.content.Intent) -> <init>
    568:569:void run() -> run
org.geometerplus.android.fbreader.FBReader$7 -> org.geometerplus.android.fbreader.aj:
    java.lang.String val$pattern -> a
    org.geometerplus.android.fbreader.FBReader this$0 -> b
    573:573:void <init>(org.geometerplus.android.fbreader.FBReader,java.lang.String) -> <init>
    575:596:void run() -> run
org.geometerplus.android.fbreader.FBReader$7$1 -> org.geometerplus.android.fbreader.ak:
    org.geometerplus.android.fbreader.TextSearchPopup val$popup -> a
    org.geometerplus.android.fbreader.FBReader$7 this$1 -> b
    581:581:void <init>(org.geometerplus.android.fbreader.FBReader$7,org.geometerplus.android.fbreader.TextSearchPopup) -> <init>
    583:585:void run() -> run
org.geometerplus.android.fbreader.FBReader$7$2 -> org.geometerplus.android.fbreader.al:
    org.geometerplus.android.fbreader.TextSearchPopup val$popup -> a
    org.geometerplus.android.fbreader.FBReader$7 this$1 -> b
    588:588:void <init>(org.geometerplus.android.fbreader.FBReader$7,org.geometerplus.android.fbreader.TextSearchPopup) -> <init>
    590:593:void run() -> run
org.geometerplus.android.fbreader.FBReader$8 -> org.geometerplus.android.fbreader.am:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    608:608:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    610:619:void run() -> run
org.geometerplus.android.fbreader.FBReader$8$1 -> org.geometerplus.android.fbreader.an:
    org.geometerplus.android.fbreader.FBReader$8 this$1 -> a
    610:610:void <init>(org.geometerplus.android.fbreader.FBReader$8) -> <init>
    612:615:void run() -> run
org.geometerplus.android.fbreader.FBReader$9 -> org.geometerplus.android.fbreader.ao:
    org.geometerplus.android.fbreader.FBReader this$0 -> a
    694:694:void <init>(org.geometerplus.android.fbreader.FBReader) -> <init>
    696:702:void run() -> run
org.geometerplus.android.fbreader.FBReaderApplication -> org.geometerplus.android.fbreader.FBReaderApplication:
    24:24:void <init>() -> <init>
org.geometerplus.android.fbreader.FBUtil -> org.geometerplus.android.fbreader.ap:
    37:54:void shareBook(android.app.Activity,org.geometerplus.fbreader.book.Book) -> a
org.geometerplus.android.fbreader.NavigationPopup -> org.geometerplus.android.fbreader.aq:
    org.geometerplus.android.fbreader.PopupWindow myWindow -> a
    org.geometerplus.zlibrary.text.view.ZLTextWordCursor myStartPosition -> b
    org.geometerplus.zlibrary.text.view.ZLTextWordCursor myEndPosition -> c
    org.geometerplus.fbreader.fbreader.FBReaderApp myFBReader -> d
    android.widget.ImageButton myResetButton -> e
    android.graphics.drawable.Drawable imgProgressBackDisable -> f
    android.graphics.drawable.Drawable imgProgressBack -> g
    android.graphics.drawable.Drawable imgProgressForward -> h
    int startProgress -> i
    int endProgress -> j
    42:52:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    55:64:void runNavigation(org.geometerplus.android.fbreader.FBReader,android.widget.RelativeLayout) -> a
    67:70:void update() -> a
    73:84:void stopNavigation() -> b
    88:158:void createControlPanel(org.geometerplus.android.fbreader.FBReader,android.widget.RelativeLayout) -> b
    161:185:void setupNavigation() -> c
    188:197:java.lang.String makeProgressText(int,int) -> a
    40:40:org.geometerplus.fbreader.fbreader.FBReaderApp access$000(org.geometerplus.android.fbreader.NavigationPopup) -> a
    40:40:int access$102(org.geometerplus.android.fbreader.NavigationPopup,int) -> a
    40:40:org.geometerplus.zlibrary.text.view.ZLTextWordCursor access$202(org.geometerplus.android.fbreader.NavigationPopup,org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> a
    40:40:int access$302(org.geometerplus.android.fbreader.NavigationPopup,int) -> b
    40:40:int access$300(org.geometerplus.android.fbreader.NavigationPopup) -> b
    40:40:java.lang.String access$400(org.geometerplus.android.fbreader.NavigationPopup,int,int) -> a
    40:40:org.geometerplus.zlibrary.text.view.ZLTextWordCursor access$502(org.geometerplus.android.fbreader.NavigationPopup,org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> b
org.geometerplus.android.fbreader.NavigationPopup$1 -> org.geometerplus.android.fbreader.ar:
    android.widget.TextView val$text -> a
    org.geometerplus.android.fbreader.NavigationPopup this$0 -> b
    99:99:void <init>(org.geometerplus.android.fbreader.NavigationPopup,android.widget.TextView) -> <init>
    101:109:void gotoPage(int) -> a
    112:114:void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    117:124:void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    127:130:void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
org.geometerplus.android.fbreader.NavigationPopup$2 -> org.geometerplus.android.fbreader.as:
    org.geometerplus.android.fbreader.NavigationPopup this$0 -> a
    134:134:void <init>(org.geometerplus.android.fbreader.NavigationPopup) -> <init>
    136:152:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.OrientationUtil -> org.geometerplus.android.fbreader.at:
    29:30:void startActivity(android.app.Activity,android.content.Intent) -> a
    33:34:void startActivityForResult(android.app.Activity,android.content.Intent,int) -> a
    37:44:void setOrientation(android.app.Activity,android.content.Intent) -> b
org.geometerplus.android.fbreader.PopupPanel -> org.geometerplus.android.fbreader.au:
    org.geometerplus.zlibrary.text.view.ZLTextWordCursor StartPosition -> a
    org.geometerplus.android.fbreader.PopupWindow myWindow -> b
    org.geometerplus.android.fbreader.FBReader myActivity -> d
    android.widget.RelativeLayout myRoot -> e
    40:41:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    44:44:org.geometerplus.fbreader.fbreader.FBReaderApp getReader() -> b
    49:55:void show_() -> c
    59:62:void hide_() -> d
    65:71:void removeWindow(android.app.Activity) -> a
    74:77:void removeAllWindows(org.geometerplus.zlibrary.core.application.ZLApplication,android.app.Activity) -> a
    80:84:void restoreVisibilities(org.geometerplus.zlibrary.core.application.ZLApplication) -> a
    87:90:void initPosition() -> e
    93:97:void storePosition() -> f
    100:102:void setPanelInfo(org.geometerplus.android.fbreader.FBReader,android.widget.RelativeLayout) -> a
    void createControlPanel(org.geometerplus.android.fbreader.FBReader,android.widget.RelativeLayout) -> b
org.geometerplus.android.fbreader.PopupWindow -> org.geometerplus.android.fbreader.PopupWindow:
    android.app.Activity myActivity -> a
    boolean myAnimated -> b
    android.animation.Animator myShowHideAnimator -> c
    android.animation.Animator$AnimatorListener myEndShowListener -> d
    android.animation.Animator$AnimatorListener myEndHideListener -> e
    43:86:void <init>(android.app.Activity,android.widget.RelativeLayout,org.geometerplus.android.fbreader.PopupWindow$Location) -> <init>
    89:89:android.app.Activity getActivity() -> getActivity
    94:94:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    103:118:void initAnimator() -> c
    121:126:void show() -> a
    129:134:void showInternal() -> d
    138:151:void showAnimatedInternal() -> e
    154:159:void hide() -> b
    162:167:void hideInternal() -> f
    171:183:void hideAnimatedInternal() -> g
    186:187:void addView(android.view.View) -> addView
    32:32:android.animation.Animator access$002(org.geometerplus.android.fbreader.PopupWindow,android.animation.Animator) -> a
    32:32:void access$100(org.geometerplus.android.fbreader.PopupWindow) -> a
    32:32:void access$200(org.geometerplus.android.fbreader.PopupWindow) -> b
org.geometerplus.android.fbreader.PopupWindow$1 -> org.geometerplus.android.fbreader.av:
    org.geometerplus.android.fbreader.PopupWindow this$0 -> a
    103:103:void <init>(org.geometerplus.android.fbreader.PopupWindow) -> <init>
    106:108:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.geometerplus.android.fbreader.PopupWindow$2 -> org.geometerplus.android.fbreader.aw:
    org.geometerplus.android.fbreader.PopupWindow this$0 -> a
    111:111:void <init>(org.geometerplus.android.fbreader.PopupWindow) -> <init>
    114:116:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
org.geometerplus.android.fbreader.PopupWindow$3 -> org.geometerplus.android.fbreader.ax:
    org.geometerplus.android.fbreader.PopupWindow this$0 -> a
    121:121:void <init>(org.geometerplus.android.fbreader.PopupWindow) -> <init>
    123:124:void run() -> run
org.geometerplus.android.fbreader.PopupWindow$4 -> org.geometerplus.android.fbreader.ay:
    org.geometerplus.android.fbreader.PopupWindow this$0 -> a
    154:154:void <init>(org.geometerplus.android.fbreader.PopupWindow) -> <init>
    156:157:void run() -> run
org.geometerplus.android.fbreader.PopupWindow$5 -> org.geometerplus.android.fbreader.az:
    int[] $SwitchMap$org$geometerplus$android$fbreader$PopupWindow$Location -> a
    51:51:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.PopupWindow$Location -> org.geometerplus.android.fbreader.PopupWindow$a:
    org.geometerplus.android.fbreader.PopupWindow$Location BottomFlat -> a
    org.geometerplus.android.fbreader.PopupWindow$Location Bottom -> b
    org.geometerplus.android.fbreader.PopupWindow$Location Floating -> c
    org.geometerplus.android.fbreader.PopupWindow$Location[] $VALUES -> d
    33:33:org.geometerplus.android.fbreader.PopupWindow$Location[] values() -> values
    33:33:org.geometerplus.android.fbreader.PopupWindow$Location valueOf(java.lang.String) -> valueOf
    33:33:void <init>(java.lang.String,int) -> <init>
    33:36:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.ProcessHyperlinkAction -> org.geometerplus.android.fbreader.ba:
    33:34:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    38:38:boolean isEnabled() -> a
    43:85:void run(java.lang.Object[]) -> a
    121:121:void openInBrowser(java.lang.String) -> a
org.geometerplus.android.fbreader.RunPluginAction -> org.geometerplus.android.fbreader.bb:
    android.net.Uri myUri -> c
    32:34:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp,android.net.Uri) -> <init>
    38:45:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SearchAction -> org.geometerplus.android.fbreader.bc:
    26:27:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    31:31:boolean isVisible() -> b
    36:38:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SelectionBookmarkAction -> org.geometerplus.android.fbreader.bd:
    35:36:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    43:61:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SelectionCopyAction -> org.geometerplus.android.fbreader.be:
    34:35:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    39:49:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SelectionHidePanelAction -> org.geometerplus.android.fbreader.bf:
    26:27:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    31:32:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SelectionPopup -> org.geometerplus.android.fbreader.bg:
    38:39:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    43:43:java.lang.String getId() -> g
    48:59:void createControlPanel(org.geometerplus.android.fbreader.FBReader,android.widget.RelativeLayout) -> b
    62:86:void move(int,int) -> a
org.geometerplus.android.fbreader.SelectionShareAction -> org.geometerplus.android.fbreader.bh:
    30:31:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    35:46:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SelectionShowPanelAction -> org.geometerplus.android.fbreader.bi:
    26:27:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    31:31:boolean isEnabled() -> a
    36:37:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SelectionTranslateAction -> org.geometerplus.android.fbreader.bj:
    27:28:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    32:41:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SetScreenOrientationAction -> org.geometerplus.android.fbreader.bk:
    java.lang.String myOptionValue -> c
    32:45:void setOrientation(android.app.Activity,java.lang.String) -> a
    50:52:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp,java.lang.String) -> <init>
    56:56:org.geometerplus.zlibrary.core.util.ZLBoolean3 isChecked() -> c
    62:65:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.ShareBookAction -> org.geometerplus.android.fbreader.bl:
    26:27:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    31:31:boolean isVisible() -> b
    36:37:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.ShowBookInfoAction -> org.geometerplus.android.fbreader.bm:
    31:32:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    36:36:boolean isVisible() -> b
    41:47:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.ShowBookmarksAction -> org.geometerplus.android.fbreader.bn:
    32:33:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    37:37:boolean isVisible() -> b
    42:55:void run(java.lang.Object[]) -> a
    58:65:void startBookmarksActivity(android.content.Intent) -> a
org.geometerplus.android.fbreader.ShowCancelMenuAction -> org.geometerplus.android.fbreader.bo:
    26:27:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    31:39:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.ShowLibraryAction -> org.geometerplus.android.fbreader.bp:
    33:34:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    38:51:void run(java.lang.Object[]) -> a
    54:58:void startLibraryActivity(android.content.Intent) -> a
org.geometerplus.android.fbreader.ShowPreferencesAction -> org.geometerplus.android.fbreader.bq:
    30:31:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    35:41:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.SimpleContainer -> org.geometerplus.android.fbreader.br:
    android.view.View myEditText -> a
    android.widget.Button myOkButton -> b
    android.widget.Button myCancelButton -> c
    35:44:void <init>(android.content.Context) -> <init>
    48:52:void onLayout(boolean,int,int,int,int) -> onLayout
org.geometerplus.android.fbreader.TOCActivity -> org.geometerplus.android.fbreader.TOCActivity:
    org.geometerplus.android.fbreader.TOCActivity$TOCAdapter myAdapter -> a
    org.geometerplus.zlibrary.core.tree.ZLTree mySelectedItem -> b
    41:41:void <init>() -> <init>
    47:74:void onCreate(android.os.Bundle) -> onCreate
    78:80:void onStart() -> onStart
    84:85:void onNewIntent(android.content.Intent) -> onNewIntent
    92:102:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    41:41:org.geometerplus.zlibrary.core.tree.ZLTree access$000(org.geometerplus.android.fbreader.TOCActivity) -> a
org.geometerplus.android.fbreader.TOCActivity$TOCAdapter -> org.geometerplus.android.fbreader.TOCActivity$a:
    org.geometerplus.android.fbreader.TOCActivity this$0 -> a
    106:108:void <init>(org.geometerplus.android.fbreader.TOCActivity,org.geometerplus.fbreader.bookmodel.TOCTree) -> <init>
    112:120:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    124:131:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    135:143:void openBookText(org.geometerplus.fbreader.bookmodel.TOCTree) -> a
    147:151:boolean runTreeItem(org.geometerplus.zlibrary.core.tree.ZLTree) -> a
org.geometerplus.android.fbreader.TextSearchPopup -> org.geometerplus.android.fbreader.bs:
    33:34:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    38:38:java.lang.String getId() -> g
    43:45:void hide_() -> d
    49:59:void createControlPanel(org.geometerplus.android.fbreader.FBReader,android.widget.RelativeLayout) -> b
org.geometerplus.android.fbreader.ToggleBarsAction -> org.geometerplus.android.fbreader.bt:
    32:33:void <init>(org.geometerplus.android.fbreader.FBReader,org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    37:43:void run(java.lang.Object[]) -> a
org.geometerplus.android.fbreader.ZLTreeAdapter -> org.geometerplus.android.fbreader.bu:
    android.widget.ListView myParent -> a
    org.geometerplus.zlibrary.core.tree.ZLTree myTree -> b
    org.geometerplus.zlibrary.core.tree.ZLTree[] myItems -> c
    java.util.HashSet myOpenItems -> d
    35:46:void <init>(android.widget.ListView,org.geometerplus.zlibrary.core.tree.ZLTree) -> <init>
    49:56:void openTree(org.geometerplus.zlibrary.core.tree.ZLTree) -> b
    59:70:void expandOrCollapseTree(org.geometerplus.zlibrary.core.tree.ZLTree) -> c
    73:73:boolean isOpen(org.geometerplus.zlibrary.core.tree.ZLTree) -> d
    77:99:void selectItem(org.geometerplus.zlibrary.core.tree.ZLTree) -> e
    102:108:int getCount(org.geometerplus.zlibrary.core.tree.ZLTree) -> f
    112:112:int getCount() -> getCount
    116:130:int indexByPosition(int,org.geometerplus.zlibrary.core.tree.ZLTree) -> a
    134:140:org.geometerplus.zlibrary.core.tree.ZLTree getItem(int) -> a
    144:144:boolean areAllItemsEnabled() -> areAllItemsEnabled
    148:148:boolean isEnabled(int) -> isEnabled
    152:152:long getItemId(int) -> getItemId
    156:160:boolean runTreeItem(org.geometerplus.zlibrary.core.tree.ZLTree) -> a
    181:182:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    185:185:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    190:200:void setIcon(android.widget.ImageView,org.geometerplus.zlibrary.core.tree.ZLTree) -> a
    31:31:java.lang.Object getItem(int) -> getItem
org.geometerplus.android.fbreader.api.ApiException -> org.geometerplus.android.fbreader.api.a:
    long serialVersionUID -> serialVersionUID
org.geometerplus.android.fbreader.api.ApiInterface -> org.geometerplus.android.fbreader.api.b:
    org.geometerplus.android.fbreader.api.ApiObject request(int,org.geometerplus.android.fbreader.api.ApiObject[]) -> a
    java.util.List requestList(int,org.geometerplus.android.fbreader.api.ApiObject[]) -> b
    java.util.Map requestMap(int,org.geometerplus.android.fbreader.api.ApiObject[]) -> c
org.geometerplus.android.fbreader.api.ApiInterface$Stub -> org.geometerplus.android.fbreader.api.b$a:
    14:16:void <init>() -> <init>
    34:34:android.os.IBinder asBinder() -> asBinder
    38:88:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.geometerplus.android.fbreader.api.ApiObject -> org.geometerplus.android.fbreader.api.c:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    13:13:void <init>() -> <init>
    152:152:org.geometerplus.android.fbreader.api.ApiObject envelope(int) -> a
    160:160:org.geometerplus.android.fbreader.api.ApiObject envelope(boolean) -> a
    164:164:org.geometerplus.android.fbreader.api.ApiObject envelope(java.lang.String) -> a
    168:168:org.geometerplus.android.fbreader.api.ApiObject envelope(java.util.Date) -> a
    172:176:java.util.List envelopeStringList(java.util.List) -> a
    180:184:java.util.List envelopeIntegerList(java.util.List) -> b
    int type() -> a
    190:190:int describeContents() -> describeContents
    194:195:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    197:197:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.api.ApiObject$1 -> org.geometerplus.android.fbreader.api.d:
    198:198:void <init>() -> <init>
    200:219:org.geometerplus.android.fbreader.api.ApiObject createFromParcel(android.os.Parcel) -> a
    224:224:org.geometerplus.android.fbreader.api.ApiObject[] newArray(int) -> a
    198:198:java.lang.Object[] newArray(int) -> newArray
    198:198:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.geometerplus.android.fbreader.api.ApiObject$Boolean -> org.geometerplus.android.fbreader.api.c$a:
    boolean Value -> a
    78:80:void <init>(boolean) -> <init>
    84:84:int type() -> a
    89:91:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.geometerplus.android.fbreader.api.ApiObject$Date -> org.geometerplus.android.fbreader.api.c$b:
    java.util.Date Value -> a
    97:99:void <init>(java.util.Date) -> <init>
    103:103:int type() -> a
    108:110:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.geometerplus.android.fbreader.api.ApiObject$Error -> org.geometerplus.android.fbreader.api.c$c:
    java.lang.String Message -> a
    135:137:void <init>(java.lang.String) -> <init>
    141:141:int type() -> a
    146:148:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.geometerplus.android.fbreader.api.ApiObject$Integer -> org.geometerplus.android.fbreader.api.c$d:
    int Value -> a
    40:42:void <init>(int) -> <init>
    46:46:int type() -> a
    51:53:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.geometerplus.android.fbreader.api.ApiObject$Long -> org.geometerplus.android.fbreader.api.c$e:
    long Value -> a
    59:61:void <init>(long) -> <init>
    65:65:int type() -> a
    70:72:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.geometerplus.android.fbreader.api.ApiObject$String -> org.geometerplus.android.fbreader.api.c$f:
    java.lang.String Value -> a
    116:118:void <init>(java.lang.String) -> <init>
    122:122:int type() -> a
    127:129:void writeToParcel(android.os.Parcel,int) -> writeToParcel
org.geometerplus.android.fbreader.api.ApiObject$Void -> org.geometerplus.android.fbreader.api.c$g:
    org.geometerplus.android.fbreader.api.ApiObject$Void Instance -> a
    28:29:void <init>() -> <init>
    33:33:int type() -> a
    26:26:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.api.ApiServerImplementation -> org.geometerplus.android.fbreader.api.e:
    org.geometerplus.fbreader.fbreader.FBReaderApp myReader -> a
    35:35:void <init>() -> <init>
    37:41:void sendEvent(android.content.ContextWrapper,java.lang.String) -> a
    45:48:org.geometerplus.fbreader.fbreader.FBReaderApp getReader() -> w
    52:52:org.geometerplus.android.fbreader.api.ApiObject$Error unsupportedMethodError(int) -> i
    56:56:org.geometerplus.android.fbreader.api.ApiObject$Error exceptionInMethodError(int,java.lang.Throwable) -> a
    61:225:org.geometerplus.android.fbreader.api.ApiObject request(int,org.geometerplus.android.fbreader.api.ApiObject[]) -> a
    231:264:java.util.List requestList(int,org.geometerplus.android.fbreader.api.ApiObject[]) -> b
    269:269:java.util.Map errorMap(org.geometerplus.android.fbreader.api.ApiObject$Error) -> a
    274:279:java.util.Map requestMap(int,org.geometerplus.android.fbreader.api.ApiObject[]) -> c
    285:285:java.lang.String getFBReaderVersion() -> a
    290:290:java.util.List getOptionGroups() -> b
    294:294:java.util.List getOptionNames(java.lang.String) -> a
    298:298:java.lang.String getOptionValue(java.lang.String,java.lang.String) -> a
    303:303:void setOptionValue(java.lang.String,java.lang.String,java.lang.String) -> a
    306:306:java.lang.String getBookLanguage() -> c
    310:310:java.lang.String getBookTitle() -> d
    315:315:java.util.List getBookTags() -> e
    319:319:java.lang.String getBookFilePath() -> f
    323:324:java.lang.String getBookHash() -> g
    329:329:java.lang.String getBookUniqueId() -> h
    334:334:java.util.Date getBookLastTurningTime() -> i
    339:339:java.lang.String getBookLanguage(long) -> a
    344:344:java.lang.String getBookTitle(long) -> b
    354:354:java.lang.String getBookFilePath(long) -> c
    359:359:java.lang.String getBookHash(long) -> d
    364:364:java.lang.String getBookUniqueId(long) -> e
    369:369:java.util.Date getBookLastTurningTime(long) -> f
    374:374:org.geometerplus.android.fbreader.api.TextPosition getPageStart() -> j
    378:378:org.geometerplus.android.fbreader.api.TextPosition getPageEnd() -> k
    382:383:boolean isPageEndOfSection() -> l
    387:388:boolean isPageEndOfText() -> m
    392:395:org.geometerplus.android.fbreader.api.TextPosition getTextPosition(org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> a
    400:400:org.geometerplus.zlibrary.text.view.ZLTextFixedPosition getZLTextPosition(org.geometerplus.android.fbreader.api.TextPosition) -> b
    409:412:void setPageStart(org.geometerplus.android.fbreader.api.TextPosition) -> a
    415:419:void highlightArea(org.geometerplus.android.fbreader.api.TextPosition,org.geometerplus.android.fbreader.api.TextPosition) -> a
    422:423:void clearHighlighting() -> n
    426:426:int getBottomMargin() -> o
    430:431:void setBottomMargin(int) -> a
    434:434:int getTopMargin() -> p
    438:439:void setTopMargin(int) -> b
    442:442:int getLeftMargin() -> q
    446:447:void setLeftMargin(int) -> c
    450:450:int getRightMargin() -> r
    454:455:void setRightMargin(int) -> d
    458:458:int getParagraphsNumber() -> s
    462:465:int getParagraphElementsCount(int) -> e
    469:480:java.lang.String getParagraphText(int) -> f
    484:495:java.util.List getParagraphWords(int) -> g
    499:510:java.util.ArrayList getParagraphWordIndices(int) -> h
    516:516:java.util.List listActions() -> t
    521:521:java.util.List listActionNames(java.util.List) -> a
    526:526:java.lang.String getKeyAction(int,boolean) -> a
    531:531:void setKeyAction(int,boolean,java.lang.String) -> a
    534:534:java.util.List listZoneMaps() -> u
    538:538:java.lang.String getZoneMap() -> v
    542:543:void setZoneMap(java.lang.String) -> b
    546:546:int getZoneMapHeight(java.lang.String) -> c
    550:550:int getZoneMapWidth(java.lang.String) -> d
    554:555:void createZoneMap(java.lang.String,int,int) -> a
    558:558:boolean isZoneMapCustom(java.lang.String) -> e
    562:563:void deleteZoneMap(java.lang.String) -> f
    566:566:java.lang.String getTapZoneAction(java.lang.String,int,int,boolean) -> a
    572:572:java.lang.String getTapActionByCoordinates(java.lang.String,int,int,int,int,boolean) -> a
    578:579:void setTapZoneAction(java.lang.String,int,int,boolean,java.lang.String) -> a
org.geometerplus.android.fbreader.api.ApiService -> org.geometerplus.android.fbreader.api.ApiService:
    26:26:void <init>() -> <init>
    29:29:android.os.IBinder onBind(android.content.Intent) -> onBind
org.geometerplus.android.fbreader.api.PluginApi -> org.geometerplus.android.fbreader.api.PluginApi:
org.geometerplus.android.fbreader.api.PluginApi$ActionInfo -> org.geometerplus.android.fbreader.api.PluginApi$a:
    java.lang.String myId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    42:44:void <init>(android.net.Uri) -> <init>
    int getType() -> a
    49:49:android.net.Uri getId() -> b
    53:53:int describeContents() -> describeContents
    57:59:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    61:61:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.api.PluginApi$ActionInfo$1 -> org.geometerplus.android.fbreader.api.f:
    61:61:void <init>() -> <init>
    63:77:org.geometerplus.android.fbreader.api.PluginApi$ActionInfo createFromParcel(android.os.Parcel) -> a
    82:82:org.geometerplus.android.fbreader.api.PluginApi$ActionInfo[] newArray(int) -> a
    61:61:java.lang.Object[] newArray(int) -> newArray
    61:61:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.geometerplus.android.fbreader.api.PluginApi$MenuActionInfo -> org.geometerplus.android.fbreader.api.PluginApi$b:
    java.lang.String MenuItemName -> a
    int Weight -> b
    92:95:void <init>(android.net.Uri,java.lang.String,int) -> <init>
    99:99:int getType() -> a
    104:107:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    110:110:int compareTo(org.geometerplus.android.fbreader.api.PluginApi$MenuActionInfo) -> a
    87:87:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.android.fbreader.api.PluginApi$PluginInfo -> org.geometerplus.android.fbreader.api.PluginApi$PluginInfo:
    17:17:void <init>() -> <init>
org.geometerplus.android.fbreader.api.TextPosition -> org.geometerplus.android.fbreader.api.g:
    int ParagraphIndex -> a
    int ElementIndex -> b
    int CharIndex -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    15:19:void <init>(int,int,int) -> <init>
    23:23:int type() -> a
    28:32:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    34:34:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.api.TextPosition$1 -> org.geometerplus.android.fbreader.api.h:
    35:35:void <init>() -> <init>
    37:38:org.geometerplus.android.fbreader.api.TextPosition createFromParcel(android.os.Parcel) -> a
    42:42:org.geometerplus.android.fbreader.api.TextPosition[] newArray(int) -> a
    35:35:java.lang.Object[] newArray(int) -> newArray
    35:35:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
org.geometerplus.android.fbreader.covers.CoverCache -> org.geometerplus.android.fbreader.covers.a:
    java.lang.Object NULL_BITMAP -> b
    int HoldersCounter -> a
    java.util.Map myBitmaps -> c
    28:37:void <init>() -> <init>
    45:49:android.graphics.Bitmap getBitmap(org.geometerplus.fbreader.tree.FBTree$Key) -> a
    53:54:void putBitmap(org.geometerplus.fbreader.tree.FBTree$Key,android.graphics.Bitmap) -> a
    32:32:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.covers.CoverCache$1 -> org.geometerplus.android.fbreader.covers.b:
    org.geometerplus.android.fbreader.covers.CoverCache this$0 -> a
    37:37:void <init>(org.geometerplus.android.fbreader.covers.CoverCache,int,float,boolean) -> <init>
    40:40:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
org.geometerplus.android.fbreader.covers.CoverCache$NullObjectException -> org.geometerplus.android.fbreader.covers.a$a:
    29:29:void <init>() -> <init>
org.geometerplus.android.fbreader.covers.CoverHolder -> org.geometerplus.android.fbreader.covers.c:
    org.geometerplus.android.fbreader.covers.CoverManager myManager -> d
    android.widget.ImageView CoverView -> a
    org.geometerplus.fbreader.tree.FBTree$Key Key -> b
    org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable coverSyncRunnable -> e
    java.util.concurrent.Future coverBitmapTask -> c
    java.lang.Runnable coverBitmapRunnable -> f
    40:47:void <init>(org.geometerplus.android.fbreader.covers.CoverManager,android.widget.ImageView,org.geometerplus.fbreader.tree.FBTree$Key) -> <init>
    50:58:void setKey(org.geometerplus.fbreader.tree.FBTree$Key) -> a
    31:31:org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable access$002(org.geometerplus.android.fbreader.covers.CoverHolder,org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable) -> a
    31:31:org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable access$000(org.geometerplus.android.fbreader.covers.CoverHolder) -> a
    31:31:org.geometerplus.android.fbreader.covers.CoverManager access$300(org.geometerplus.android.fbreader.covers.CoverHolder) -> b
    31:31:java.lang.Runnable access$402(org.geometerplus.android.fbreader.covers.CoverHolder,java.lang.Runnable) -> a
    31:31:java.lang.Runnable access$400(org.geometerplus.android.fbreader.covers.CoverHolder) -> c
org.geometerplus.android.fbreader.covers.CoverHolder$CoverBitmapRunnable -> org.geometerplus.android.fbreader.covers.c$a:
    org.geometerplus.zlibrary.core.image.ZLLoadableImage myImage -> b
    org.geometerplus.fbreader.tree.FBTree$Key myKey -> c
    org.geometerplus.android.fbreader.covers.CoverHolder this$0 -> a
    107:113:void <init>(org.geometerplus.android.fbreader.covers.CoverHolder,org.geometerplus.zlibrary.core.image.ZLLoadableImage) -> <init>
    116:165:void run() -> run
    103:103:org.geometerplus.fbreader.tree.FBTree$Key access$500(org.geometerplus.android.fbreader.covers.CoverHolder$CoverBitmapRunnable) -> a
org.geometerplus.android.fbreader.covers.CoverHolder$CoverBitmapRunnable$1 -> org.geometerplus.android.fbreader.covers.d:
    android.graphics.Bitmap val$coverBitmap -> a
    org.geometerplus.android.fbreader.covers.CoverHolder$CoverBitmapRunnable this$1 -> b
    147:147:void <init>(org.geometerplus.android.fbreader.covers.CoverHolder$CoverBitmapRunnable,android.graphics.Bitmap) -> <init>
    150:155:void run() -> run
org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable -> org.geometerplus.android.fbreader.covers.c$b:
    org.geometerplus.zlibrary.core.image.ZLLoadableImage myImage -> b
    org.geometerplus.fbreader.tree.FBTree$Key myKey -> c
    org.geometerplus.android.fbreader.covers.CoverHolder this$0 -> a
    64:70:void <init>(org.geometerplus.android.fbreader.covers.CoverHolder,org.geometerplus.zlibrary.core.image.ZLLoadableImage) -> <init>
    73:100:void run() -> run
    60:60:org.geometerplus.fbreader.tree.FBTree$Key access$100(org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable) -> a
    60:60:org.geometerplus.zlibrary.core.image.ZLLoadableImage access$200(org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable) -> b
org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable$1 -> org.geometerplus.android.fbreader.covers.e:
    org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable this$1 -> a
    84:84:void <init>(org.geometerplus.android.fbreader.covers.CoverHolder$CoverSyncRunnable) -> <init>
    87:92:void run() -> run
org.geometerplus.android.fbreader.covers.CoverManager -> org.geometerplus.android.fbreader.covers.f:
    org.geometerplus.android.fbreader.covers.CoverCache Cache -> a
    java.util.concurrent.ExecutorService myPool -> b
    android.app.Activity myActivity -> c
    int myCoverWidth -> d
    int myCoverHeight -> e
    37:58:void <init>(android.app.Activity,int,int) -> <init>
    61:62:void runOnUiThread(java.lang.Runnable) -> a
    65:69:void setupCoverView(android.widget.ImageView) -> a
    72:77:android.graphics.Bitmap getBitmap(org.geometerplus.zlibrary.core.image.ZLImage) -> a
    81:92:void setCoverForView(org.geometerplus.android.fbreader.covers.CoverHolder,org.geometerplus.zlibrary.core.image.ZLLoadableImage) -> a
    95:102:org.geometerplus.android.fbreader.covers.CoverHolder getHolder(android.widget.ImageView,org.geometerplus.fbreader.tree.FBTree) -> b
    106:132:boolean trySetCoverImage(android.widget.ImageView,org.geometerplus.fbreader.tree.FBTree) -> a
org.geometerplus.android.fbreader.covers.CoverManager$1 -> org.geometerplus.android.fbreader.covers.g:
org.geometerplus.android.fbreader.covers.CoverManager$MinPriorityThreadFactory -> org.geometerplus.android.fbreader.covers.f$a:
    java.util.concurrent.ThreadFactory myDefaultThreadFactory -> a
    39:40:void <init>() -> <init>
    43:45:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    39:39:void <init>(org.geometerplus.android.fbreader.covers.CoverManager$1) -> <init>
org.geometerplus.android.fbreader.crash.FixBooksDirectoryActivity -> org.geometerplus.android.fbreader.crash.FixBooksDirectoryActivity:
    40:40:void <init>() -> <init>
    43:80:void onCreate(android.os.Bundle) -> onCreate
org.geometerplus.android.fbreader.crash.FixBooksDirectoryActivity$1 -> org.geometerplus.android.fbreader.crash.a:
    org.geometerplus.android.fbreader.crash.FixBooksDirectoryActivity this$0 -> a
    75:75:void <init>(org.geometerplus.android.fbreader.crash.FixBooksDirectoryActivity) -> <init>
    77:78:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.crash.MissingNativeLibraryActivity -> org.geometerplus.android.fbreader.crash.MissingNativeLibraryActivity:
    32:32:void <init>() -> <init>
    35:57:void onCreate(android.os.Bundle) -> onCreate
org.geometerplus.android.fbreader.error.BookReadingErrorActivity -> org.geometerplus.android.fbreader.error.BookReadingErrorActivity:
    41:41:void <init>() -> <init>
    44:78:void onCreate(android.os.Bundle) -> onCreate
org.geometerplus.android.fbreader.error.BookReadingErrorActivity$1 -> org.geometerplus.android.fbreader.error.a:
    org.geometerplus.android.fbreader.error.BookReadingErrorActivity this$0 -> a
    73:73:void <init>(org.geometerplus.android.fbreader.error.BookReadingErrorActivity) -> <init>
    75:76:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.extBkMarkDB.BookMark -> org.geometerplus.android.fbreader.extBkMarkDB.a:
    java.lang.Long _id -> a
    java.lang.String content -> b
    java.util.Date createTime -> c
    java.lang.Long bookId -> d
    int paragraphIndex -> e
    int elementIndex -> f
    int charIndex -> g
    int startParagraphIndex -> h
    10:10:void <init>() -> <init>
    20:20:java.lang.Long get_id() -> a
    23:24:void set_id(java.lang.Long) -> a
    26:26:java.lang.String getContent() -> b
    29:30:void setContent(java.lang.String) -> a
    32:32:java.util.Date getCreateTime() -> c
    35:36:void setCreateTime(java.util.Date) -> a
    38:38:java.lang.Long getBookId() -> d
    41:42:void setBookId(java.lang.Long) -> b
    44:44:int getParagraphIndex() -> e
    47:48:void setParagraphIndex(int) -> a
    50:50:int getElementIndex() -> f
    53:54:void setElementIndex(int) -> b
    56:56:int getCharIndex() -> g
    59:60:void setCharIndex(int) -> c
    62:62:int getStartParagraphIndex() -> h
    65:66:void setStartParagraphIndex(int) -> d
org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter -> org.geometerplus.android.fbreader.extBkMarkDB.b:
    java.util.List bookMarks -> a
    int source -> b
    android.view.LayoutInflater inflater -> c
    android.content.Context mContext -> d
    21:28:void <init>(android.content.Context,java.util.List,int) -> <init>
    31:32:void setBookMarks(java.util.List) -> a
    35:35:int getCount() -> getCount
    39:39:java.lang.Object getItem(int) -> getItem
    43:43:long getItemId(int) -> getItemId
    49:79:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter$1 -> org.geometerplus.android.fbreader.extBkMarkDB.c:
org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter$ViewCache -> org.geometerplus.android.fbreader.extBkMarkDB.b$a:
    android.widget.TextView textView -> a
    org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter this$0 -> b
    82:82:void <init>(org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter) -> <init>
    82:82:void <init>(org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter,org.geometerplus.android.fbreader.extBkMarkDB.BookMarkAdapter$1) -> <init>
org.geometerplus.android.fbreader.extBkMarkDB.BookMarkDBHelper -> org.geometerplus.android.fbreader.extBkMarkDB.d:
    org.geometerplus.android.fbreader.extBkMarkDB.BookMarkDBHelper dbInstance -> a
    android.database.sqlite.SQLiteDatabase mDb -> b
    android.database.sqlite.SQLiteStatement bookStatement -> c
    34:37:org.geometerplus.android.fbreader.extBkMarkDB.BookMarkDBHelper getInstance(android.content.Context) -> a
    41:42:void <init>(android.content.Context) -> <init>
    46:55:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    59:61:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    68:91:void addBookMark(org.geometerplus.android.fbreader.extBkMarkDB.BookMark) -> a
    99:127:java.util.List getBookById(java.lang.Long) -> a
    136:165:java.util.List getBookMarkByParagraphIndex(java.lang.Long,int) -> a
    173:186:void deleteMarkById(java.lang.Long) -> b
    193:208:void updateContentById(java.lang.Long,java.lang.String) -> a
org.geometerplus.android.fbreader.image.ImageViewActivity -> org.geometerplus.android.fbreader.image.ImageViewActivity:
    android.graphics.Bitmap myBitmap -> a
    org.geometerplus.zlibrary.core.util.ZLColor myBgColor -> b
    47:47:void <init>() -> <init>
    55:112:void onCreate(android.os.Bundle) -> onCreate
    119:121:void onStart() -> onStart
    125:126:void onNewIntent(android.content.Intent) -> onNewIntent
    130:135:void onDestroy() -> onDestroy
    47:47:org.geometerplus.zlibrary.core.util.ZLColor access$000(org.geometerplus.android.fbreader.image.ImageViewActivity) -> a
    47:47:android.graphics.Bitmap access$100(org.geometerplus.android.fbreader.image.ImageViewActivity) -> b
org.geometerplus.android.fbreader.image.ImageViewActivity$ImageView -> org.geometerplus.android.fbreader.image.ImageViewActivity$a:
    android.graphics.Paint myPaint -> b
    int myDx -> c
    int myDy -> d
    float myZoomFactor -> e
    boolean myMotionControl -> f
    int mySavedX -> g
    int mySavedY -> h
    long previousTime -> i
    long currentTime -> j
    float myStartPinchDistance2 -> k
    float myStartZoomFactor -> l
    org.geometerplus.android.fbreader.image.ImageViewActivity this$0 -> a
    138:295:void <init>(org.geometerplus.android.fbreader.image.ImageViewActivity) -> <init>
    150:186:void onDraw(android.graphics.Canvas) -> onDraw
    189:218:void shift(int,int) -> a
    247:253:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    258:290:boolean onSingleTouchEvent(android.view.MotionEvent) -> a
    298:325:boolean onDoubleTouchEvent(android.view.MotionEvent) -> b
org.geometerplus.android.fbreader.library.BookInfoActivity -> org.geometerplus.android.fbreader.library.BookInfoActivity:
    org.geometerplus.zlibrary.core.resources.ZLResource myResource -> a
    org.geometerplus.fbreader.book.Book myBook -> b
    boolean myDontReloadBook -> c
    org.geometerplus.android.fbreader.libraryService.BookCollectionShadow myCollection -> d
    59:67:void <init>() -> <init>
    71:85:void onCreate(android.os.Bundle) -> onCreate
    89:109:void onStart() -> onStart
    113:114:void onNewIntent(android.content.Intent) -> onNewIntent
    118:122:void onDestroy() -> onDestroy
    129:130:org.geometerplus.fbreader.book.Book bookByIntent(android.content.Intent) -> a
    138:139:void setupInfoPair(int,java.lang.String,java.lang.CharSequence) -> a
    142:150:void setupInfoPair(int,java.lang.String,java.lang.CharSequence,int) -> a
    153:191:void setupCover(org.geometerplus.fbreader.book.Book) -> a
    194:233:void setupBookInfo(org.geometerplus.fbreader.book.Book) -> b
    236:248:void setupAnnotation(org.geometerplus.fbreader.book.Book) -> c
    251:271:void setupFileInfo(org.geometerplus.fbreader.book.Book) -> d
    308:323:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    327:334:void addMenuItem(android.view.Menu,int,java.lang.String,boolean) -> a
    338:394:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    399:404:void onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> onBookEvent
    407:407:void onBuildEvent(org.geometerplus.fbreader.book.IBookCollection$Status) -> onBuildEvent
    410:415:void saveBook() -> a
    59:59:org.geometerplus.fbreader.book.Book access$000(org.geometerplus.android.fbreader.library.BookInfoActivity) -> a
    59:59:org.geometerplus.android.fbreader.libraryService.BookCollectionShadow access$100(org.geometerplus.android.fbreader.library.BookInfoActivity) -> b
org.geometerplus.android.fbreader.library.BookInfoActivity$1 -> org.geometerplus.android.fbreader.library.a:
    org.geometerplus.android.fbreader.library.BookInfoActivity this$0 -> a
    410:410:void <init>(org.geometerplus.android.fbreader.library.BookInfoActivity) -> <init>
    412:413:void run() -> run
org.geometerplus.android.fbreader.library.LibraryActivity -> org.geometerplus.android.fbreader.library.LibraryActivity:
    org.geometerplus.fbreader.library.RootTree myRootTree -> a
    org.geometerplus.fbreader.book.Book mySelectedBook -> b
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption BookSearchPatternOption -> c
    44:136:void <init>() -> <init>
    52:74:void onCreate(android.os.Bundle) -> onCreate
    78:86:void onNewIntent(android.content.Intent) -> onNewIntent
    90:91:void onResume() -> onResume
    95:95:org.geometerplus.fbreader.library.LibraryTree getTreeByKey(org.geometerplus.fbreader.tree.FBTree$Key) -> a
    100:103:void onDestroy() -> onDestroy
    107:108:boolean isTreeSelected(org.geometerplus.fbreader.tree.FBTree) -> a
    113:120:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    126:131:void showBookInfo(org.geometerplus.fbreader.book.Book) -> a
    140:144:void openSearchResults() -> d
    148:149:boolean onSearchRequested() -> onSearchRequested
    166:171:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    174:194:void createBookContextMenu(android.view.ContextMenu,org.geometerplus.fbreader.book.Book) -> a
    198:203:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    207:242:boolean onContextItemSelected(int,org.geometerplus.fbreader.book.Book) -> a
    251:254:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    259:261:boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    265:270:android.view.MenuItem addMenuItem(android.view.Menu,int,java.lang.String,int) -> a
    274:284:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    311:321:void tryToDeleteBook(org.geometerplus.fbreader.book.Book) -> b
    324:345:void startBookSearch(java.lang.String) -> a
    348:357:void onSearchEvent(boolean) -> a
    360:363:void onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> onBookEvent
    366:367:void onBuildEvent(org.geometerplus.fbreader.book.IBookCollection$Status) -> onBuildEvent
    44:44:org.geometerplus.fbreader.tree.FBTree getTreeByKey(org.geometerplus.fbreader.tree.FBTree$Key) -> b
    44:44:org.geometerplus.fbreader.library.RootTree access$000(org.geometerplus.android.fbreader.library.LibraryActivity) -> a
    44:44:org.geometerplus.fbreader.tree.FBTree access$100(org.geometerplus.android.fbreader.library.LibraryActivity) -> b
    44:44:org.geometerplus.fbreader.tree.FBTree access$200(org.geometerplus.android.fbreader.library.LibraryActivity) -> c
    44:44:org.geometerplus.fbreader.tree.FBTree access$300(org.geometerplus.android.fbreader.library.LibraryActivity) -> d
    44:44:org.geometerplus.fbreader.tree.FBTree access$400(org.geometerplus.android.fbreader.library.LibraryActivity) -> e
    44:44:void access$500(org.geometerplus.android.fbreader.library.LibraryActivity,boolean) -> a
    44:44:void access$600(org.geometerplus.android.fbreader.library.LibraryActivity) -> f
org.geometerplus.android.fbreader.library.LibraryActivity$1 -> org.geometerplus.android.fbreader.library.b:
    org.geometerplus.android.fbreader.library.LibraryActivity this$0 -> a
    69:69:void <init>(org.geometerplus.android.fbreader.library.LibraryActivity) -> <init>
    71:72:void run() -> run
org.geometerplus.android.fbreader.library.LibraryActivity$2 -> org.geometerplus.android.fbreader.library.c:
    java.lang.String val$pattern -> a
    org.geometerplus.android.fbreader.library.LibraryActivity this$0 -> b
    326:326:void <init>(org.geometerplus.android.fbreader.library.LibraryActivity,java.lang.String,java.lang.String) -> <init>
    328:341:void run() -> run
org.geometerplus.android.fbreader.library.LibraryActivity$3 -> org.geometerplus.android.fbreader.library.d:
    boolean val$found -> a
    org.geometerplus.android.fbreader.library.LibraryActivity this$0 -> b
    348:348:void <init>(org.geometerplus.android.fbreader.library.LibraryActivity,boolean) -> <init>
    350:355:void run() -> run
org.geometerplus.android.fbreader.library.LibraryActivity$BookDeleter -> org.geometerplus.android.fbreader.library.LibraryActivity$a:
    org.geometerplus.fbreader.book.Book myBook -> b
    org.geometerplus.android.fbreader.library.LibraryActivity this$0 -> a
    294:296:void <init>(org.geometerplus.android.fbreader.library.LibraryActivity,org.geometerplus.fbreader.book.Book) -> <init>
    299:307:void onClick(android.content.DialogInterface,int) -> onClick
org.geometerplus.android.fbreader.library.LibrarySearchActivity -> org.geometerplus.android.fbreader.library.LibrarySearchActivity:
    27:27:void <init>() -> <init>
    30:44:void onCreate(android.os.Bundle) -> onCreate
org.geometerplus.android.fbreader.library.LibraryTreeAdapter -> org.geometerplus.android.fbreader.library.e:
    org.geometerplus.android.fbreader.covers.CoverManager myCoverManager -> a
    42:43:void <init>(org.geometerplus.android.fbreader.library.LibraryActivity) -> <init>
    46:66:android.view.View createView(android.view.View,android.view.ViewGroup,org.geometerplus.fbreader.library.LibraryTree) -> a
    70:90:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    94:125:int getCoverResourceId(org.geometerplus.fbreader.library.LibraryTree) -> a
org.geometerplus.android.fbreader.libraryService.BookCollectionShadow -> org.geometerplus.android.fbreader.libraryService.a:
    android.content.Context myContext -> c
    org.geometerplus.android.fbreader.libraryService.LibraryInterface myInterface -> d
    java.lang.Runnable myOnBindAction -> e
    android.content.BroadcastReceiver myReceiver -> f
    java.lang.Boolean issynchronized -> a
    org.geometerplus.android.MyInterface.SearchLocalCountInterface searchLocalCountInterface -> b
    55:94:void <init>() -> <init>
    81:87:java.lang.Runnable combined(java.lang.Runnable,java.lang.Runnable) -> a
    96:112:void bindToService(android.content.Context,java.lang.Runnable) -> a
    128:144:void unbind() -> a
    147:153:void reset(boolean) -> a
    156:162:int size() -> size
    167:173:org.geometerplus.fbreader.book.IBookCollection$Status status() -> status
    178:184:java.util.List books(org.geometerplus.fbreader.book.BookQuery) -> books
    189:195:boolean hasBooks(org.geometerplus.fbreader.book.Filter) -> hasBooks
    200:206:java.util.List recentBooks() -> recentBooks
    211:217:org.geometerplus.fbreader.book.Book getRecentBook(int) -> getRecentBook
    223:230:org.geometerplus.fbreader.book.Book getBookByFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> getBookByFile
    235:241:org.geometerplus.fbreader.book.Book getBookById(long) -> getBookById
    246:252:org.geometerplus.fbreader.book.Book getBookByUid(org.geometerplus.fbreader.book.UID) -> getBookByUid
    257:268:java.util.List authors() -> authors
    273:284:java.util.List tags() -> tags
    289:295:boolean hasSeries() -> hasSeries
    299:305:java.util.List series() -> series
    310:316:java.util.List titles(org.geometerplus.fbreader.book.BookQuery) -> titles
    321:327:java.util.List firstTitleLetters() -> firstTitleLetters
    332:338:boolean saveBook(org.geometerplus.fbreader.book.Book) -> saveBook
    343:349:void removeBook(org.geometerplus.fbreader.book.Book,boolean) -> removeBook
    352:358:void addBookToRecentList(org.geometerplus.fbreader.book.Book) -> addBookToRecentList
    361:367:java.util.List labels() -> labels
    371:385:org.geometerplus.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    390:398:void storePosition(long,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> storePosition
    401:408:boolean isHyperlinkVisited(org.geometerplus.fbreader.book.Book,java.lang.String) -> isHyperlinkVisited
    413:419:void markHyperlinkAsVisited(org.geometerplus.fbreader.book.Book,java.lang.String) -> markHyperlinkAsVisited
    423:430:boolean saveCover(org.geometerplus.fbreader.book.Book,java.lang.String) -> saveCover
    435:443:java.util.List bookmarks(org.geometerplus.fbreader.book.BookmarkQuery) -> bookmarks
    448:456:void saveBookmark(org.geometerplus.fbreader.book.Bookmark) -> saveBookmark
    459:465:void deleteBookmark(org.geometerplus.fbreader.book.Bookmark) -> deleteBookmark
    468:474:org.geometerplus.fbreader.book.HighlightingStyle getHighlightingStyle(int) -> getHighlightingStyle
    479:485:java.util.List highlightingStyles() -> highlightingStyles
    490:497:void saveHighlightingStyle(org.geometerplus.fbreader.book.HighlightingStyle) -> saveHighlightingStyle
    500:507:void rescan(java.lang.String) -> rescan
    512:526:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    530:531:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    55:55:boolean access$000(org.geometerplus.android.fbreader.libraryService.BookCollectionShadow) -> a
    55:55:void access$100(org.geometerplus.android.fbreader.libraryService.BookCollectionShadow,org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    55:55:void access$200(org.geometerplus.android.fbreader.libraryService.BookCollectionShadow,org.geometerplus.fbreader.book.IBookCollection$Status) -> a
org.geometerplus.android.fbreader.libraryService.BookCollectionShadow$1 -> org.geometerplus.android.fbreader.libraryService.b:
    org.geometerplus.android.fbreader.libraryService.BookCollectionShadow this$0 -> a
    60:60:void <init>(org.geometerplus.android.fbreader.libraryService.BookCollectionShadow) -> <init>
    62:77:void onReceive(android.content.Context,android.content.Intent) -> onReceive
org.geometerplus.android.fbreader.libraryService.BookCollectionShadow$2 -> org.geometerplus.android.fbreader.libraryService.c:
    java.lang.Runnable val$action0 -> a
    java.lang.Runnable val$action1 -> b
    87:87:void <init>(java.lang.Runnable,java.lang.Runnable) -> <init>
    89:91:void run() -> run
org.geometerplus.android.fbreader.libraryService.LibraryInterface -> org.geometerplus.android.fbreader.libraryService.d:
    void reset(java.util.List,boolean) -> a
    java.lang.String status() -> a
    int size() -> b
    java.util.List books(java.lang.String) -> a
    boolean hasBooks(java.lang.String) -> b
    java.util.List recentBooks() -> c
    java.lang.String getBookByFile(java.lang.String) -> c
    java.lang.String getBookById(long) -> a
    java.lang.String getBookByUid(java.lang.String,java.lang.String) -> a
    java.lang.String getRecentBook(int) -> a
    java.util.List authors() -> d
    boolean hasSeries() -> e
    java.util.List series() -> f
    java.util.List tags() -> g
    java.util.List labels() -> h
    java.util.List titles(java.lang.String) -> d
    java.util.List firstTitleLetters() -> i
    boolean saveBook(java.lang.String) -> e
    void removeBook(java.lang.String,boolean) -> a
    void addBookToRecentList(java.lang.String) -> f
    org.geometerplus.android.fbreader.api.TextPosition getStoredPosition(long) -> b
    void storePosition(long,org.geometerplus.android.fbreader.api.TextPosition) -> a
    boolean isHyperlinkVisited(java.lang.String,java.lang.String) -> b
    void markHyperlinkAsVisited(java.lang.String,java.lang.String) -> c
    boolean saveCover(java.lang.String,java.lang.String) -> d
    java.util.List bookmarks(java.lang.String) -> g
    java.lang.String saveBookmark(java.lang.String) -> h
    void deleteBookmark(java.lang.String) -> i
    java.lang.String getHighlightingStyle(int) -> b
    java.util.List highlightingStyles() -> j
    void saveHighlightingStyle(java.lang.String) -> j
    void rescan(java.lang.String) -> k
org.geometerplus.android.fbreader.libraryService.LibraryInterface$Stub -> org.geometerplus.android.fbreader.libraryService.d$a:
    14:16:void <init>() -> <init>
    23:30:org.geometerplus.android.fbreader.libraryService.LibraryInterface asInterface(android.os.IBinder) -> a
    34:34:android.os.IBinder asBinder() -> asBinder
    38:363:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
org.geometerplus.android.fbreader.libraryService.LibraryInterface$Stub$Proxy -> org.geometerplus.android.fbreader.libraryService.d$a$a:
    android.os.IBinder mRemote -> a
    369:371:void <init>(android.os.IBinder) -> <init>
    374:374:android.os.IBinder asBinder() -> asBinder
    382:395:void reset(java.util.List,boolean) -> a
    398:411:java.lang.String status() -> a
    415:428:int size() -> b
    432:446:java.util.List books(java.lang.String) -> a
    450:464:boolean hasBooks(java.lang.String) -> b
    468:481:java.util.List recentBooks() -> c
    485:499:java.lang.String getBookByFile(java.lang.String) -> c
    503:517:java.lang.String getBookById(long) -> a
    521:536:java.lang.String getBookByUid(java.lang.String,java.lang.String) -> a
    540:554:java.lang.String getRecentBook(int) -> a
    558:571:java.util.List authors() -> d
    575:588:boolean hasSeries() -> e
    592:605:java.util.List series() -> f
    609:622:java.util.List tags() -> g
    626:639:java.util.List labels() -> h
    643:657:java.util.List titles(java.lang.String) -> d
    661:674:java.util.List firstTitleLetters() -> i
    678:692:boolean saveBook(java.lang.String) -> e
    696:709:void removeBook(java.lang.String,boolean) -> a
    712:724:void addBookToRecentList(java.lang.String) -> f
    727:746:org.geometerplus.android.fbreader.api.TextPosition getStoredPosition(long) -> b
    750:769:void storePosition(long,org.geometerplus.android.fbreader.api.TextPosition) -> a
    772:787:boolean isHyperlinkVisited(java.lang.String,java.lang.String) -> b
    791:804:void markHyperlinkAsVisited(java.lang.String,java.lang.String) -> c
    807:822:boolean saveCover(java.lang.String,java.lang.String) -> d
    826:840:java.util.List bookmarks(java.lang.String) -> g
    844:858:java.lang.String saveBookmark(java.lang.String) -> h
    862:874:void deleteBookmark(java.lang.String) -> i
    877:891:java.lang.String getHighlightingStyle(int) -> b
    895:908:java.util.List highlightingStyles() -> j
    912:924:void saveHighlightingStyle(java.lang.String) -> j
    927:939:void rescan(java.lang.String) -> k
org.geometerplus.android.fbreader.libraryService.LibraryService -> org.geometerplus.android.fbreader.libraryService.LibraryService:
    org.geometerplus.android.fbreader.libraryService.LibraryService$LibraryImplementation myLibrary -> a
    47:47:void <init>() -> <init>
    300:301:void onStart(android.content.Intent,int) -> onStart
    305:305:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    311:311:android.os.IBinder onBind(android.content.Intent) -> onBind
    316:319:void onCreate() -> onCreate
    323:328:void onDestroy() -> onDestroy
org.geometerplus.android.fbreader.libraryService.LibraryService$LibraryImplementation -> org.geometerplus.android.fbreader.libraryService.LibraryService$a:
    org.geometerplus.fbreader.book.BooksDatabase myDatabase -> b
    java.util.List myFileObservers -> c
    org.geometerplus.fbreader.book.BookCollection myCollection -> d
    org.geometerplus.android.fbreader.libraryService.LibraryService this$0 -> a
    95:101:void <init>(org.geometerplus.android.fbreader.libraryService.LibraryService) -> <init>
    104:133:void reset(java.util.List,boolean) -> a
    136:139:void deactivate() -> k
    142:142:java.lang.String status() -> a
    146:146:int size() -> b
    150:151:java.util.List books(java.lang.String) -> a
    156:156:boolean hasBooks(java.lang.String) -> b
    160:160:java.util.List recentBooks() -> c
    164:164:java.lang.String getRecentBook(int) -> a
    168:169:java.lang.String getBookByFile(java.lang.String) -> c
    173:173:java.lang.String getBookById(long) -> a
    177:177:java.lang.String getBookByUid(java.lang.String,java.lang.String) -> a
    181:186:java.util.List authors() -> d
    190:190:boolean hasSeries() -> e
    194:194:java.util.List series() -> f
    198:203:java.util.List tags() -> g
    207:207:java.util.List titles(java.lang.String) -> d
    211:211:java.util.List firstTitleLetters() -> i
    215:215:boolean saveBook(java.lang.String) -> e
    219:220:void removeBook(java.lang.String,boolean) -> a
    223:224:void addBookToRecentList(java.lang.String) -> f
    227:227:java.util.List labels() -> h
    231:237:org.geometerplus.android.fbreader.api.TextPosition getStoredPosition(long) -> b
    242:248:void storePosition(long,org.geometerplus.android.fbreader.api.TextPosition) -> a
    251:251:boolean isHyperlinkVisited(java.lang.String,java.lang.String) -> b
    255:256:void markHyperlinkAsVisited(java.lang.String,java.lang.String) -> c
    260:260:boolean saveCover(java.lang.String,java.lang.String) -> d
    264:265:java.util.List bookmarks(java.lang.String) -> g
    270:272:java.lang.String saveBookmark(java.lang.String) -> h
    276:277:void deleteBookmark(java.lang.String) -> i
    280:280:java.lang.String getHighlightingStyle(int) -> b
    284:284:java.util.List highlightingStyles() -> j
    288:289:void saveHighlightingStyle(java.lang.String) -> j
    292:293:void rescan(java.lang.String) -> k
org.geometerplus.android.fbreader.libraryService.LibraryService$LibraryImplementation$1 -> org.geometerplus.android.fbreader.libraryService.e:
    org.geometerplus.android.fbreader.libraryService.LibraryService$LibraryImplementation this$1 -> a
    118:118:void <init>(org.geometerplus.android.fbreader.libraryService.LibraryService$LibraryImplementation) -> <init>
    120:124:void onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> onBookEvent
    127:130:void onBuildEvent(org.geometerplus.fbreader.book.IBookCollection$Status) -> onBuildEvent
org.geometerplus.android.fbreader.libraryService.LibraryService$Observer -> org.geometerplus.android.fbreader.libraryService.LibraryService$b:
    java.lang.String myPrefix -> a
    org.geometerplus.fbreader.book.BookCollection myCollection -> b
    59:62:void <init>(java.lang.String,org.geometerplus.fbreader.book.BookCollection) -> <init>
    66:90:void onEvent(int,java.lang.String) -> onEvent
org.geometerplus.android.fbreader.libraryService.SQLiteBooksDatabase -> org.geometerplus.android.fbreader.libraryService.f:
    org.geometerplus.fbreader.book.BooksDatabase ourInstance -> a
    android.database.sqlite.SQLiteDatabase myDatabase -> b
    boolean myTagCacheIsInitialized -> c
    java.util.HashMap myIdByTag -> d
    java.util.HashMap myTagById -> e
    android.database.sqlite.SQLiteStatement myUpdateBookInfoStatement -> f
    android.database.sqlite.SQLiteStatement myInsertBookInfoStatement -> g
    android.database.sqlite.SQLiteStatement myDeleteBookAuthorsStatement -> h
    android.database.sqlite.SQLiteStatement myGetAuthorIdStatement -> i
    android.database.sqlite.SQLiteStatement myInsertAuthorStatement -> j
    android.database.sqlite.SQLiteStatement myInsertBookAuthorStatement -> k
    android.database.sqlite.SQLiteStatement myGetTagIdStatement -> l
    android.database.sqlite.SQLiteStatement myCreateTagIdStatement -> m
    android.database.sqlite.SQLiteStatement myDeleteBookTagsStatement -> n
    android.database.sqlite.SQLiteStatement myInsertBookTagStatement -> o
    android.database.sqlite.SQLiteStatement myDeleteBookUidsStatement -> p
    android.database.sqlite.SQLiteStatement myInsertBookUidStatement -> q
    android.database.sqlite.SQLiteStatement myGetSeriesIdStatement -> r
    android.database.sqlite.SQLiteStatement myInsertSeriesStatement -> s
    android.database.sqlite.SQLiteStatement myInsertBookSeriesStatement -> t
    android.database.sqlite.SQLiteStatement myDeleteBookSeriesStatement -> u
    android.database.sqlite.SQLiteStatement myRemoveFileInfoStatement -> v
    android.database.sqlite.SQLiteStatement myInsertFileInfoStatement -> w
    android.database.sqlite.SQLiteStatement myUpdateFileInfoStatement -> x
    android.database.sqlite.SQLiteStatement mySaveRecentBookStatement -> y
    android.database.sqlite.SQLiteStatement mySetLabelStatement -> z
    android.database.sqlite.SQLiteStatement myRemoveLabelStatement -> A
    android.database.sqlite.SQLiteStatement myInsertStyleStatement -> B
    android.database.sqlite.SQLiteStatement myInsertBookmarkStatement -> C
    android.database.sqlite.SQLiteStatement myUpdateBookmarkStatement -> D
    android.database.sqlite.SQLiteStatement myDeleteBookmarkStatement -> E
    android.database.sqlite.SQLiteStatement myStorePositionStatement -> F
    android.database.sqlite.SQLiteStatement myStoreVisitedHyperlinksStatement -> G
    android.database.sqlite.SQLiteStatement mySaveProgessStatement -> H
    49:52:org.geometerplus.fbreader.book.BooksDatabase Instance(android.content.Context) -> a
    57:182:void <init>(android.content.Context) -> <init>
    63:79:void executeAsTransaction(java.lang.Runnable) -> executeAsTransaction
    82:150:void migrate() -> a
    154:162:org.geometerplus.fbreader.book.Book loadBook(long) -> loadBook
    166:177:org.geometerplus.fbreader.book.Book loadBookByFile(long,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> loadBookByFile
    185:200:void initTagCache() -> b
    204:315:java.util.Map loadBooks(org.geometerplus.fbreader.book.FileInfoSet,boolean) -> loadBooks
    320:337:void setExistingFlag(java.util.Collection,boolean) -> setExistingFlag
    342:353:void updateBookInfo(long,long,java.lang.String,java.lang.String,java.lang.String) -> updateBookInfo
    358:368:long insertBookInfo(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String,java.lang.String) -> insertBookInfo
    373:380:void deleteAllBookAuthors(long) -> deleteAllBookAuthors
    386:412:void saveBookAuthorInfo(long,long,org.geometerplus.fbreader.book.Author) -> saveBookAuthorInfo
    415:425:java.util.List listAuthors(long) -> listAuthors
    431:465:long getTagId(org.geometerplus.fbreader.book.Tag) -> a
    470:477:void deleteAllBookTags(long) -> deleteAllBookTags
    481:489:void saveBookTagInfo(long,org.geometerplus.fbreader.book.Tag) -> saveBookTagInfo
    492:503:org.geometerplus.fbreader.book.Tag getTagById(long) -> a
    507:517:java.util.List listTags(long) -> listTags
    522:533:java.util.List listLabels(long) -> listLabels
    538:545:void deleteAllBookUids(long) -> deleteAllBookUids
    550:562:void saveBookUid(long,org.geometerplus.fbreader.book.UID) -> saveBookUid
    566:572:java.util.List listUids(long) -> listUids
    577:583:java.lang.Long bookIdByUid(org.geometerplus.fbreader.book.UID) -> bookIdByUid
    591:626:void saveBookSeriesInfo(long,org.geometerplus.fbreader.book.SeriesInfo) -> saveBookSeriesInfo
    629:635:org.geometerplus.fbreader.book.SeriesInfo getSeriesInfo(long) -> getSeriesInfo
    640:650:void removeFileInfo(long) -> removeFileInfo
    655:691:void saveFileInfo(org.geometerplus.fbreader.book.FileInfo) -> saveFileInfo
    694:710:java.util.Collection loadFileInfos() -> loadFileInfos
    714:743:java.util.Collection loadFileInfos(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> loadFileInfos
    747:770:java.util.Collection loadFileInfos(long) -> loadFileInfos
    775:789:void saveRecentBookIds(java.util.List) -> saveRecentBookIds
    793:801:java.util.List loadRecentBookIds() -> loadRecentBookIds
    807:817:void setLabel(long,java.lang.String) -> setLabel
    822:831:void removeLabel(long,java.lang.String) -> removeLabel
    835:841:boolean hasVisibleBookmark(long) -> hasVisibleBookmark
    846:886:java.util.List loadBookmarks(org.geometerplus.fbreader.book.BookmarkQuery) -> loadBookmarks
    891:902:java.util.List loadStyles() -> loadStyles
    907:918:void saveStyle(org.geometerplus.fbreader.book.HighlightingStyle) -> saveStyle
    925:970:long saveBookmark(org.geometerplus.fbreader.book.Bookmark) -> saveBookmark
    977:984:void deleteBookmark(org.geometerplus.fbreader.book.Bookmark) -> deleteBookmark
    987:999:org.geometerplus.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    1004:1014:void storePosition(long,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> storePosition
    1030:1039:void addVisitedHyperlink(long,java.lang.String) -> addVisitedHyperlink
    1042:1048:java.util.Collection loadVisitedHyperlinks(long) -> loadVisitedHyperlinks
    1054:1063:void saveBookProgress(long,org.geometerplus.zlibrary.core.util.RationalNumber) -> saveBookProgress
    1068:1077:org.geometerplus.zlibrary.core.util.RationalNumber getProgress(long) -> getProgress
    1081:1121:void createTables() -> c
    1124:1142:void updateTables1() -> d
    1145:1148:void updateTables2() -> e
    1151:1158:void updateTables3() -> f
    1161:1195:void updateTables4() -> g
    1198:1238:void updateTables5() -> h
    1241:1290:void updateTables6() -> i
    1293:1325:void updateTables7() -> j
    1328:1331:void updateTables8() -> k
    1334:1335:void updateTables9() -> l
    1338:1341:void updateTables10() -> m
    1344:1345:void updateTables11() -> n
    1348:1349:void updateTables12() -> o
    1352:1355:void updateTables13() -> p
    1358:1366:void updateTables14() -> q
    1369:1374:void updateTables15() -> r
    1377:1380:void updateTables16() -> s
    1383:1389:void updateTables17() -> t
    1392:1422:void updateTables18() -> u
    1425:1426:void updateTables19() -> v
    1429:1444:void updateTables20() -> w
    1447:1454:void updateTables21() -> x
    1457:1460:void updateTables22() -> y
    1463:1470:void updateTables23() -> z
    1473:1476:void updateTables24() -> A
    1479:1484:void updateTables25() -> B
    45:45:android.database.sqlite.SQLiteDatabase access$000(org.geometerplus.android.fbreader.libraryService.SQLiteBooksDatabase) -> a
    45:45:android.database.sqlite.SQLiteStatement access$100(org.geometerplus.android.fbreader.libraryService.SQLiteBooksDatabase) -> b
org.geometerplus.android.fbreader.libraryService.SQLiteBooksDatabase$1 -> org.geometerplus.android.fbreader.libraryService.g:
    java.util.List val$ids -> a
    org.geometerplus.android.fbreader.libraryService.SQLiteBooksDatabase this$0 -> b
    780:780:void <init>(org.geometerplus.android.fbreader.libraryService.SQLiteBooksDatabase,java.util.List) -> <init>
    782:787:void run() -> run
org.geometerplus.android.fbreader.libraryService.Util -> org.geometerplus.android.fbreader.libraryService.h:
    27:27:java.lang.String authorToString(org.geometerplus.fbreader.book.Author) -> a
    31:35:org.geometerplus.fbreader.book.Author stringToAuthor(java.lang.String) -> a
    40:40:java.lang.String tagToString(org.geometerplus.fbreader.book.Tag) -> a
    44:48:org.geometerplus.fbreader.book.Tag stringToTag(java.lang.String) -> b
org.geometerplus.android.fbreader.preferences.AnimationSpeedPreference -> org.geometerplus.android.fbreader.preferences.a:
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption myOption -> a
    org.geometerplus.zlibrary.core.resources.ZLResource myResource -> b
    android.widget.SeekBar mySlider -> c
    42:53:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption) -> <init>
    57:63:void onBindDialogView(android.view.View) -> onBindDialogView
    67:70:void onClick(android.content.DialogInterface,int) -> onClick
    35:35:android.widget.SeekBar access$000(org.geometerplus.android.fbreader.preferences.AnimationSpeedPreference) -> a
    35:35:org.geometerplus.zlibrary.core.resources.ZLResource access$100(org.geometerplus.android.fbreader.preferences.AnimationSpeedPreference) -> b
org.geometerplus.android.fbreader.preferences.AnimationSpeedPreference$SeekBarDrawable -> org.geometerplus.android.fbreader.preferences.a$a:
    android.graphics.drawable.Drawable myBase -> b
    android.graphics.Paint myPaint -> c
    android.graphics.Paint myOutlinePaint -> d
    org.geometerplus.android.fbreader.preferences.AnimationSpeedPreference this$0 -> a
    77:89:void <init>(org.geometerplus.android.fbreader.preferences.AnimationSpeedPreference) -> <init>
    93:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    98:99:boolean onStateChange(int[]) -> onStateChange
    104:104:boolean isStateful() -> isStateful
    109:109:boolean onLevelChange(int) -> onLevelChange
    114:141:void draw(android.graphics.Canvas) -> draw
    145:145:int getOpacity() -> getOpacity
    150:150:void setAlpha(int) -> setAlpha
    154:154:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
org.geometerplus.android.fbreader.preferences.BatteryLevelToTurnScreenOffPreference -> org.geometerplus.android.fbreader.preferences.b:
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption myOption -> a
    31:46:void <init>(android.content.Context,org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    50:55:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.BookLanguagePreference -> org.geometerplus.android.fbreader.preferences.c:
    org.geometerplus.fbreader.book.Book myBook -> a
    61:66:java.util.List languages() -> b
    70:76:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.fbreader.book.Book) -> <init>
    80:80:void init() -> a
    84:86:void setLanguage(java.lang.String) -> a
org.geometerplus.android.fbreader.preferences.BookTitlePreference -> org.geometerplus.android.fbreader.preferences.d:
    org.geometerplus.fbreader.book.Book myBook -> a
    44:47:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.fbreader.book.Book) -> <init>
    51:54:void setValue(java.lang.String) -> a
org.geometerplus.android.fbreader.preferences.ColorPreference -> org.geometerplus.android.fbreader.preferences.ColorPreference:
    36:38:void <init>(android.content.Context) -> <init>
    java.lang.String getTitle() -> a
    org.geometerplus.zlibrary.core.util.ZLColor getSavedColor() -> b
    void saveColor(org.geometerplus.zlibrary.core.util.ZLColor) -> a
    46:53:void onBindView(android.view.View) -> onBindView
    57:71:void onClick() -> onClick
    34:34:java.lang.CharSequence getTitle() -> getTitle
    34:34:boolean access$000(org.geometerplus.android.fbreader.preferences.ColorPreference,java.lang.Object) -> a
    34:34:void access$100(org.geometerplus.android.fbreader.preferences.ColorPreference) -> a
org.geometerplus.android.fbreader.preferences.ColorPreference$1 -> org.geometerplus.android.fbreader.preferences.e:
    org.geometerplus.android.fbreader.preferences.ColorPreference this$0 -> a
    57:57:void <init>(org.geometerplus.android.fbreader.preferences.ColorPreference) -> <init>
    60:65:void onOk(yuku.ambilwarna.AmbilWarnaDialog,int) -> a
    69:69:void onCancel(yuku.ambilwarna.AmbilWarnaDialog) -> a
org.geometerplus.android.fbreader.preferences.DictionaryPreference -> org.geometerplus.android.fbreader.preferences.f:
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption myOption -> a
    35:50:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLStringOption,java.util.List) -> <init>
    54:56:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.EditBookInfoActivity -> org.geometerplus.android.fbreader.preferences.EditBookInfoActivity:
    org.geometerplus.android.fbreader.libraryService.BookCollectionShadow myCollection -> c
    boolean myInitialized -> d
    org.geometerplus.fbreader.book.Book myBook -> e
    145:152:void <init>() -> <init>
    155:160:void saveBook() -> a
    164:164:void init(android.content.Intent) -> a
    168:189:void onStart() -> onStart
    193:195:void onStop() -> onStop
    144:144:android.preference.Preference addPreference(android.preference.Preference) -> a
    144:144:org.geometerplus.fbreader.book.Book access$000(org.geometerplus.android.fbreader.preferences.EditBookInfoActivity) -> a
    144:144:org.geometerplus.android.fbreader.libraryService.BookCollectionShadow access$100(org.geometerplus.android.fbreader.preferences.EditBookInfoActivity) -> b
    144:144:boolean access$200(org.geometerplus.android.fbreader.preferences.EditBookInfoActivity) -> c
    144:144:boolean access$202(org.geometerplus.android.fbreader.preferences.EditBookInfoActivity,boolean) -> a
org.geometerplus.android.fbreader.preferences.EditBookInfoActivity$1 -> org.geometerplus.android.fbreader.preferences.g:
    org.geometerplus.android.fbreader.preferences.EditBookInfoActivity this$0 -> a
    155:155:void <init>(org.geometerplus.android.fbreader.preferences.EditBookInfoActivity) -> <init>
    157:158:void run() -> run
org.geometerplus.android.fbreader.preferences.EditBookInfoActivity$2 -> org.geometerplus.android.fbreader.preferences.h:
    org.geometerplus.android.fbreader.preferences.EditBookInfoActivity this$0 -> a
    177:177:void <init>(org.geometerplus.android.fbreader.preferences.EditBookInfoActivity) -> <init>
    179:187:void run() -> run
org.geometerplus.android.fbreader.preferences.EncodingPreference -> org.geometerplus.android.fbreader.preferences.i:
    org.geometerplus.fbreader.book.Book myBook -> a
    93:129:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.fbreader.book.Book) -> <init>
    133:141:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.EncodingPreference$1 -> org.geometerplus.android.fbreader.preferences.j:
    org.geometerplus.android.fbreader.preferences.EncodingPreference this$0 -> a
    105:105:void <init>(org.geometerplus.android.fbreader.preferences.EncodingPreference) -> <init>
    107:107:int compare(org.geometerplus.zlibrary.core.encodings.Encoding,org.geometerplus.zlibrary.core.encodings.Encoding) -> a
    105:105:int compare(java.lang.Object,java.lang.Object) -> compare
org.geometerplus.android.fbreader.preferences.FontOption -> org.geometerplus.android.fbreader.preferences.k:
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption myOption -> a
    java.lang.String UNCHANGED -> b
    37:62:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLStringOption,boolean) -> <init>
    66:69:void onDialogClosed(boolean) -> onDialogClosed
    34:34:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.preferences.FontStylePreference -> org.geometerplus.android.fbreader.preferences.l:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption myBoldOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption myItalicOption -> b
    java.lang.String[] myValues -> c
    30:43:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption,org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption) -> <init>
    47:51:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.InfoPreference -> org.geometerplus.android.fbreader.preferences.m:
    27:31:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
org.geometerplus.android.fbreader.preferences.LanguagePreference -> org.geometerplus.android.fbreader.preferences.n:
    33:46:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,java.util.List) -> <init>
    50:54:void onDialogClosed(boolean) -> onDialogClosed
    void init() -> a
    void setLanguage(java.lang.String) -> a
org.geometerplus.android.fbreader.preferences.PreferenceActivity -> org.geometerplus.android.fbreader.preferences.PreferenceActivity:
    org.geometerplus.android.fbreader.libraryService.BookCollectionShadow myCollection -> c
    52:56:void <init>() -> <init>
    60:63:void onStart() -> onStart
    67:70:void onStop() -> onStop
    74:582:void init(android.content.Intent) -> a
    51:51:android.preference.Preference addPreference(android.preference.Preference) -> a
    51:51:org.geometerplus.android.fbreader.libraryService.BookCollectionShadow access$000(org.geometerplus.android.fbreader.preferences.PreferenceActivity) -> a
org.geometerplus.android.fbreader.preferences.PreferenceActivity$1 -> org.geometerplus.android.fbreader.preferences.o:
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> a
    87:87:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.ui.android.options.ZLStringListOption,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    89:91:void setValue(java.lang.String) -> a
org.geometerplus.android.fbreader.preferences.PreferenceActivity$2 -> org.geometerplus.android.fbreader.preferences.p:
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> a
    103:103:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,java.util.List) -> <init>
    106:107:void init() -> a
    111:119:void setLanguage(java.lang.String) -> a
org.geometerplus.android.fbreader.preferences.PreferenceActivity$3 -> org.geometerplus.android.fbreader.preferences.q:
    int myLevel -> c
    org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary val$androidLibrary -> a
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> b
    136:137:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary) -> <init>
    141:143:void onClick() -> onClick
org.geometerplus.android.fbreader.preferences.PreferenceActivity$4 -> org.geometerplus.android.fbreader.preferences.r:
    org.geometerplus.android.fbreader.preferences.ZLPreferenceSet val$bgPreferences -> a
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> b
    332:332:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.fbreader.fbreader.ColorProfile,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.android.fbreader.preferences.ZLPreferenceSet) -> <init>
    335:337:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.PreferenceActivity$5 -> org.geometerplus.android.fbreader.preferences.s:
    org.geometerplus.android.fbreader.preferences.ZLPreferenceSet val$footerPreferences -> a
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> b
    382:382:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption,java.lang.String[],org.geometerplus.android.fbreader.preferences.ZLPreferenceSet) -> <init>
    385:389:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.PreferenceActivity$6 -> org.geometerplus.android.fbreader.preferences.t:
    org.geometerplus.fbreader.fbreader.FBReaderApp val$fbReader -> a
    org.geometerplus.zlibrary.core.application.ZLKeyBindings val$keyBindings -> b
    org.geometerplus.android.fbreader.preferences.ZLPreferenceSet val$volumeKeysPreferences -> c
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> d
    433:436:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.fbreader.fbreader.FBReaderApp,org.geometerplus.zlibrary.core.application.ZLKeyBindings,org.geometerplus.android.fbreader.preferences.ZLPreferenceSet) -> <init>
    440:449:void onClick() -> onClick
org.geometerplus.android.fbreader.preferences.PreferenceActivity$7 -> org.geometerplus.android.fbreader.preferences.u:
    org.geometerplus.zlibrary.core.application.ZLKeyBindings val$keyBindings -> a
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> b
    453:458:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.core.application.ZLKeyBindings) -> <init>
    462:470:void onClick() -> onClick
org.geometerplus.android.fbreader.preferences.PreferenceActivity$8 -> org.geometerplus.android.fbreader.preferences.v:
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> a
    496:496:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,java.util.List) -> <init>
    499:500:void init() -> a
    504:505:void setLanguage(java.lang.String) -> a
org.geometerplus.android.fbreader.preferences.PreferenceActivity$9 -> org.geometerplus.android.fbreader.preferences.w:
    org.geometerplus.android.fbreader.preferences.LanguagePreference val$targetLanguagePreference -> a
    org.geometerplus.android.fbreader.preferences.PreferenceActivity this$0 -> b
    515:515:void <init>(org.geometerplus.android.fbreader.preferences.PreferenceActivity,android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLStringOption,java.util.List,org.geometerplus.android.fbreader.preferences.LanguagePreference) -> <init>
    518:522:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.UrlPreference -> org.geometerplus.android.fbreader.preferences.x:
    java.lang.String myUrl -> a
    33:39:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    43:47:boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
org.geometerplus.android.fbreader.preferences.WallpaperPreference -> org.geometerplus.android.fbreader.preferences.y:
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption myOption -> a
    37:67:void <init>(android.content.Context,org.geometerplus.fbreader.fbreader.ColorProfile,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    71:73:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.ZLBoolean3Preference -> org.geometerplus.android.fbreader.preferences.z:
    org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option myOption -> a
    36:52:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option) -> <init>
    56:65:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.ZLBoolean3Preference$1 -> org.geometerplus.android.fbreader.preferences.aa:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$util$ZLBoolean3 -> a
    41:41:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.preferences.ZLBooleanPreference -> org.geometerplus.android.fbreader.preferences.ab:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption myOption -> a
    31:34:void <init>(android.content.Context,org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    38:40:void onClick() -> onClick
org.geometerplus.android.fbreader.preferences.ZLCheckBoxPreference -> org.geometerplus.android.fbreader.preferences.ZLCheckBoxPreference:
    29:35:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
org.geometerplus.android.fbreader.preferences.ZLChoicePreference -> org.geometerplus.android.fbreader.preferences.ac:
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption myOption -> a
    boolean $assertionsDisabled -> c
    31:39:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption,java.lang.String[]) -> <init>
    43:45:void onDialogClosed(boolean) -> onDialogClosed
    27:27:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.preferences.ZLColorPreference -> org.geometerplus.android.fbreader.preferences.ad:
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption myOption -> a
    java.lang.String myTitle -> b
    35:40:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLColorOption) -> <init>
    43:43:java.lang.String getTitle() -> a
    47:47:org.geometerplus.zlibrary.core.util.ZLColor getSavedColor() -> b
    51:52:void saveColor(org.geometerplus.zlibrary.core.util.ZLColor) -> a
    30:30:java.lang.CharSequence getTitle() -> getTitle
org.geometerplus.android.fbreader.preferences.ZLEnumPreference -> org.geometerplus.android.fbreader.preferences.ae:
    org.geometerplus.zlibrary.ui.android.options.ZLEnumOption myOption -> a
    31:42:void <init>(android.content.Context,org.geometerplus.zlibrary.ui.android.options.ZLEnumOption,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    46:48:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.ZLIntegerChoicePreference -> org.geometerplus.android.fbreader.preferences.af:
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerOption myOption -> b
    int[] myValues -> c
    boolean $assertionsDisabled -> a
    32:50:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLIntegerOption,int[],java.lang.String[]) -> <init>
    54:56:void onDialogClosed(boolean) -> onDialogClosed
    27:27:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.preferences.ZLIntegerRangePreference -> org.geometerplus.android.fbreader.preferences.ag:
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption myOption -> a
    32:43:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption) -> <init>
    47:53:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity -> org.geometerplus.android.fbreader.preferences.ah:
    java.lang.String SCREEN_KEY -> a
    java.util.HashMap myScreenMap -> c
    android.preference.PreferenceScreen myScreen -> d
    org.geometerplus.zlibrary.core.resources.ZLResource Resource -> b
    39:97:void <init>(java.lang.String) -> <init>
    100:103:org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity$Screen createPreferenceScreen(java.lang.String) -> a
    107:108:android.preference.Preference addPreference(android.preference.Preference) -> a
    void init(android.content.Intent) -> a
    128:138:void onCreate(android.os.Bundle) -> onCreate
    142:144:void onStart() -> onStart
    148:149:void onNewIntent(android.content.Intent) -> onNewIntent
    37:37:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity$1 -> org.geometerplus.android.fbreader.preferences.ai:
org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity$Screen -> org.geometerplus.android.fbreader.preferences.ah$a:
    org.geometerplus.zlibrary.core.resources.ZLResource Resource -> a
    android.preference.PreferenceScreen myScreen -> c
    org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity this$0 -> b
    45:50:void <init>(org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    57:59:org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity$Screen createPreferenceScreen(java.lang.String) -> a
    63:64:android.preference.Preference addPreference(android.preference.Preference) -> a
    68:68:android.preference.Preference addOption(org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption,java.lang.String) -> a
    80:80:android.preference.Preference addOption(org.geometerplus.zlibrary.ui.android.options.ZLColorOption,java.lang.String) -> a
    86:86:android.preference.Preference addOption(org.geometerplus.zlibrary.ui.android.options.ZLEnumOption,java.lang.String) -> a
    41:41:void <init>(org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity$1) -> <init>
    41:41:android.preference.PreferenceScreen access$100(org.geometerplus.android.fbreader.preferences.ZLPreferenceActivity$Screen) -> a
org.geometerplus.android.fbreader.preferences.ZLPreferenceSet -> org.geometerplus.android.fbreader.preferences.aj:
    java.util.LinkedList myPreferences -> a
    26:27:void <init>() -> <init>
    30:31:void add(android.preference.Preference) -> a
    34:37:void setEnabled(boolean) -> a
org.geometerplus.android.fbreader.preferences.ZLStringChoicePreference -> org.geometerplus.android.fbreader.preferences.ak:
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption myOption -> a
    31:35:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String,org.geometerplus.zlibrary.ui.android.options.ZLStringOption,java.lang.String[]) -> <init>
    39:41:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.preferences.ZLStringListOptionPreference -> org.geometerplus.android.fbreader.preferences.al:
    org.geometerplus.zlibrary.ui.android.options.ZLStringListOption myOption -> a
    34:38:void <init>(android.content.Context,org.geometerplus.zlibrary.ui.android.options.ZLStringListOption,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    42:50:void setValue(java.lang.String) -> a
org.geometerplus.android.fbreader.preferences.ZLStringListPreference -> org.geometerplus.android.fbreader.preferences.am:
    org.geometerplus.zlibrary.core.resources.ZLResource myResource -> a
    boolean $assertionsDisabled -> d
    31:35:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    38:44:void setList(java.lang.String[]) -> a
    47:50:void setLists(java.lang.String[],java.lang.String[]) -> a
    53:67:boolean setInitialValue(java.lang.String) -> b
    72:76:void onDialogClosed(boolean) -> onDialogClosed
    27:27:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.preferences.ZLStringPreference -> org.geometerplus.android.fbreader.preferences.ZLStringPreference:
    java.lang.String myValue -> a
    31:35:void <init>(android.content.Context,org.geometerplus.zlibrary.core.resources.ZLResource,java.lang.String) -> <init>
    38:41:void setValue(java.lang.String) -> a
    49:53:void onDialogClosed(boolean) -> onDialogClosed
org.geometerplus.android.fbreader.style.EditStyleActivity -> org.geometerplus.android.fbreader.style.EditStyleActivity:
    org.geometerplus.zlibrary.core.resources.ZLResource myRootResource -> a
    org.geometerplus.android.fbreader.libraryService.BookCollectionShadow myCollection -> b
    org.geometerplus.fbreader.book.HighlightingStyle myStyle -> c
    org.geometerplus.android.fbreader.style.EditStyleActivity$BgColorPreference myBgColorPreference -> d
    36:40:void <init>() -> <init>
    46:67:void onCreate(android.os.Bundle) -> onCreate
    71:74:void onDestroy() -> onDestroy
    36:36:org.geometerplus.fbreader.book.HighlightingStyle access$002(org.geometerplus.android.fbreader.style.EditStyleActivity,org.geometerplus.fbreader.book.HighlightingStyle) -> a
    36:36:org.geometerplus.android.fbreader.libraryService.BookCollectionShadow access$100(org.geometerplus.android.fbreader.style.EditStyleActivity) -> a
    36:36:org.geometerplus.fbreader.book.HighlightingStyle access$000(org.geometerplus.android.fbreader.style.EditStyleActivity) -> b
    36:36:org.geometerplus.android.fbreader.style.EditStyleActivity$BgColorPreference access$202(org.geometerplus.android.fbreader.style.EditStyleActivity,org.geometerplus.android.fbreader.style.EditStyleActivity$BgColorPreference) -> a
    36:36:org.geometerplus.android.fbreader.style.EditStyleActivity$BgColorPreference access$200(org.geometerplus.android.fbreader.style.EditStyleActivity) -> c
    36:36:org.geometerplus.zlibrary.core.resources.ZLResource access$300(org.geometerplus.android.fbreader.style.EditStyleActivity) -> d
org.geometerplus.android.fbreader.style.EditStyleActivity$1 -> org.geometerplus.android.fbreader.style.a:
    android.preference.PreferenceScreen val$screen -> a
    org.geometerplus.android.fbreader.style.EditStyleActivity this$0 -> b
    54:54:void <init>(org.geometerplus.android.fbreader.style.EditStyleActivity,android.preference.PreferenceScreen) -> <init>
    56:65:void run() -> run
org.geometerplus.android.fbreader.style.EditStyleActivity$BgColorPreference -> org.geometerplus.android.fbreader.style.EditStyleActivity$a:
    org.geometerplus.android.fbreader.style.EditStyleActivity this$0 -> a
    116:119:void <init>(org.geometerplus.android.fbreader.style.EditStyleActivity) -> <init>
    123:123:java.lang.String getTitle() -> a
    128:128:org.geometerplus.zlibrary.core.util.ZLColor getSavedColor() -> b
    133:135:void saveColor(org.geometerplus.zlibrary.core.util.ZLColor) -> a
    115:115:java.lang.CharSequence getTitle() -> getTitle
org.geometerplus.android.fbreader.style.EditStyleActivity$InvisiblePreference -> org.geometerplus.android.fbreader.style.EditStyleActivity$b:
    org.geometerplus.zlibrary.core.util.ZLColor mySavedBgColor -> b
    org.geometerplus.android.fbreader.style.EditStyleActivity this$0 -> a
    93:96:void <init>(org.geometerplus.android.fbreader.style.EditStyleActivity) -> <init>
    100:112:void onClick() -> onClick
org.geometerplus.android.fbreader.style.EditStyleActivity$NamePreference -> org.geometerplus.android.fbreader.style.EditStyleActivity$c:
    org.geometerplus.android.fbreader.style.EditStyleActivity this$0 -> a
    77:80:void <init>(org.geometerplus.android.fbreader.style.EditStyleActivity) -> <init>
    84:87:void setValue(java.lang.String) -> a
org.geometerplus.android.fbreader.style.StyleListActivity -> org.geometerplus.android.fbreader.style.StyleListActivity:
    org.geometerplus.android.fbreader.libraryService.BookCollectionShadow myCollection -> a
    boolean myExistingBookmark -> b
    org.geometerplus.fbreader.book.Bookmark myBookmark -> c
    45:48:void <init>() -> <init>
    54:56:void onCreate(android.os.Bundle) -> onCreate
    60:82:void onStart() -> onStart
    86:88:void onDestroy() -> onDestroy
    92:95:void onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> onBookEvent
    99:99:void onBuildEvent(org.geometerplus.fbreader.book.IBookCollection$Status) -> onBuildEvent
    45:45:boolean access$002(org.geometerplus.android.fbreader.style.StyleListActivity,boolean) -> a
    45:45:org.geometerplus.fbreader.book.Bookmark access$102(org.geometerplus.android.fbreader.style.StyleListActivity,org.geometerplus.fbreader.book.Bookmark) -> a
    45:45:org.geometerplus.fbreader.book.Bookmark access$100(org.geometerplus.android.fbreader.style.StyleListActivity) -> a
    45:45:org.geometerplus.android.fbreader.libraryService.BookCollectionShadow access$200(org.geometerplus.android.fbreader.style.StyleListActivity) -> b
    45:45:boolean access$000(org.geometerplus.android.fbreader.style.StyleListActivity) -> c
org.geometerplus.android.fbreader.style.StyleListActivity$1 -> org.geometerplus.android.fbreader.style.b:
    org.geometerplus.android.fbreader.style.StyleListActivity this$0 -> a
    61:61:void <init>(org.geometerplus.android.fbreader.style.StyleListActivity) -> <init>
    63:80:void run() -> run
org.geometerplus.android.fbreader.style.StyleListActivity$ActionListAdapter -> org.geometerplus.android.fbreader.style.StyleListActivity$a:
    java.util.List myStyles -> b
    org.geometerplus.android.fbreader.style.StyleListActivity this$0 -> a
    104:106:void <init>(org.geometerplus.android.fbreader.style.StyleListActivity,java.util.List) -> <init>
    109:112:void setStyleList(java.util.List) -> a
    115:115:int getCount() -> getCount
    119:119:org.geometerplus.fbreader.book.HighlightingStyle getItem(int) -> a
    123:123:long getItemId(int) -> getItemId
    127:179:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    183:195:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    101:101:java.lang.Object getItem(int) -> getItem
org.geometerplus.android.fbreader.style.StyleListActivity$ActionListAdapter$1 -> org.geometerplus.android.fbreader.style.c:
    org.geometerplus.fbreader.book.HighlightingStyle val$style -> a
    org.geometerplus.android.fbreader.style.StyleListActivity$ActionListAdapter this$1 -> b
    161:161:void <init>(org.geometerplus.android.fbreader.style.StyleListActivity$ActionListAdapter,org.geometerplus.fbreader.book.HighlightingStyle) -> <init>
    164:168:void onClick(android.view.View) -> onClick
org.geometerplus.android.fbreader.style.StyleListActivity$ActionListAdapter$2 -> org.geometerplus.android.fbreader.style.d:
    org.geometerplus.fbreader.book.HighlightingStyle val$style -> a
    org.geometerplus.android.fbreader.style.StyleListActivity$ActionListAdapter this$1 -> b
    184:184:void <init>(org.geometerplus.android.fbreader.style.StyleListActivity$ActionListAdapter,org.geometerplus.fbreader.book.HighlightingStyle) -> <init>
    186:193:void run() -> run
org.geometerplus.android.fbreader.tree.TreeActivity -> org.geometerplus.android.fbreader.tree.TreeActivity:
    org.geometerplus.fbreader.tree.FBTree myCurrentTree -> a
    org.geometerplus.fbreader.tree.FBTree$Key myCurrentKey -> b
    java.util.ArrayList myHistory -> c
    35:35:void <init>() -> <init>
    50:54:void onCreate(android.os.Bundle) -> onCreate
    58:60:void onStart() -> onStart
    64:64:org.geometerplus.android.fbreader.tree.TreeAdapter getListAdapter() -> a
    68:68:org.geometerplus.fbreader.tree.FBTree getCurrentTree() -> b
    73:83:void onNewIntent(android.content.Intent) -> onNewIntent
    org.geometerplus.fbreader.tree.FBTree getTreeByKey(org.geometerplus.fbreader.tree.FBTree$Key) -> b
    boolean isTreeSelected(org.geometerplus.fbreader.tree.FBTree) -> a
    89:89:boolean isTreeInvisible(org.geometerplus.fbreader.tree.FBTree) -> b
    94:108:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    113:114:void openTree(org.geometerplus.fbreader.tree.FBTree) -> c
    125:125:void onCurrentTreeChanged() -> c
    128:156:void openTree(org.geometerplus.fbreader.tree.FBTree,org.geometerplus.fbreader.tree.FBTree,boolean) -> a
    159:185:void init(android.content.Intent) -> a
    188:208:void openTreeInternal(org.geometerplus.fbreader.tree.FBTree,org.geometerplus.fbreader.tree.FBTree,boolean) -> b
    35:35:android.widget.ListAdapter getListAdapter() -> getListAdapter
    35:35:void access$100(org.geometerplus.android.fbreader.tree.TreeActivity,org.geometerplus.fbreader.tree.FBTree,org.geometerplus.fbreader.tree.FBTree,boolean) -> a
org.geometerplus.android.fbreader.tree.TreeActivity$1 -> org.geometerplus.android.fbreader.tree.a:
    android.content.Intent val$intent -> a
    org.geometerplus.android.fbreader.tree.TreeActivity this$0 -> b
    75:75:void <init>(org.geometerplus.android.fbreader.tree.TreeActivity,android.content.Intent) -> <init>
    77:78:void run() -> run
org.geometerplus.android.fbreader.tree.TreeActivity$3 -> org.geometerplus.android.fbreader.tree.b:
    org.geometerplus.fbreader.tree.FBTree val$tree -> a
    org.geometerplus.android.fbreader.tree.TreeActivity this$0 -> b
    135:135:void <init>(org.geometerplus.android.fbreader.tree.TreeActivity,org.geometerplus.fbreader.tree.FBTree) -> <init>
    137:138:void run() -> run
org.geometerplus.android.fbreader.tree.TreeActivity$4 -> org.geometerplus.android.fbreader.tree.c:
    org.geometerplus.fbreader.tree.FBTree val$tree -> a
    org.geometerplus.fbreader.tree.FBTree val$treeToSelect -> b
    boolean val$storeInHistory -> c
    org.geometerplus.android.fbreader.tree.TreeActivity this$0 -> d
    140:140:void <init>(org.geometerplus.android.fbreader.tree.TreeActivity,org.geometerplus.fbreader.tree.FBTree,org.geometerplus.fbreader.tree.FBTree,boolean) -> <init>
    142:143:void run() -> run
org.geometerplus.android.fbreader.tree.TreeActivity$5 -> org.geometerplus.android.fbreader.tree.d:
    int val$index -> a
    org.geometerplus.android.fbreader.tree.TreeActivity this$0 -> b
    173:173:void <init>(org.geometerplus.android.fbreader.tree.TreeActivity,int) -> <init>
    175:176:void run() -> run
org.geometerplus.android.fbreader.tree.TreeActivity$6 -> org.geometerplus.android.fbreader.tree.e:
    int[] $SwitchMap$org$geometerplus$fbreader$tree$FBTree$Status -> a
    128:128:void <clinit>() -> <clinit>
org.geometerplus.android.fbreader.tree.TreeAdapter -> org.geometerplus.android.fbreader.tree.f:
    org.geometerplus.android.fbreader.tree.TreeActivity myActivity -> a
    java.util.List myItems -> b
    32:36:void <init>(org.geometerplus.android.fbreader.tree.TreeActivity) -> <init>
    39:39:org.geometerplus.android.fbreader.tree.TreeActivity getActivity() -> a
    43:49:void remove(org.geometerplus.fbreader.tree.FBTree) -> a
    70:82:void replaceAll(java.util.Collection,boolean) -> a
    85:85:int getCount() -> getCount
    89:89:org.geometerplus.fbreader.tree.FBTree getItem(int) -> a
    93:93:long getItemId(int) -> getItemId
    97:97:int getIndex(org.geometerplus.fbreader.tree.FBTree) -> b
    101:108:org.geometerplus.fbreader.tree.FBTree getFirstSelectedItem() -> b
    28:28:java.lang.Object getItem(int) -> getItem
    28:28:java.util.List access$000(org.geometerplus.android.fbreader.tree.TreeAdapter) -> a
    28:28:org.geometerplus.android.fbreader.tree.TreeActivity access$100(org.geometerplus.android.fbreader.tree.TreeAdapter) -> b
org.geometerplus.android.fbreader.tree.TreeAdapter$1 -> org.geometerplus.android.fbreader.tree.g:
    org.geometerplus.fbreader.tree.FBTree val$item -> a
    org.geometerplus.android.fbreader.tree.TreeAdapter this$0 -> b
    43:43:void <init>(org.geometerplus.android.fbreader.tree.TreeAdapter,org.geometerplus.fbreader.tree.FBTree) -> <init>
    45:47:void run() -> run
org.geometerplus.android.fbreader.tree.TreeAdapter$4 -> org.geometerplus.android.fbreader.tree.h:
    java.util.Collection val$items -> a
    boolean val$invalidateViews -> b
    org.geometerplus.android.fbreader.tree.TreeAdapter this$0 -> c
    70:70:void <init>(org.geometerplus.android.fbreader.tree.TreeAdapter,java.util.Collection,boolean) -> <init>
    72:80:void run() -> run
org.geometerplus.android.util.PackageUtil -> org.geometerplus.android.util.a:
    44:44:android.net.Uri marketUri(java.lang.String) -> a
    80:95:boolean canBeStarted(android.content.Context,android.content.Intent,boolean) -> a
    100:105:boolean installFromMarket(android.app.Activity,java.lang.String) -> a
org.geometerplus.android.util.SQLiteUtil -> org.geometerplus.android.util.b:
    29:34:void bindString(android.database.sqlite.SQLiteStatement,int,java.lang.String) -> a
    37:42:void bindDate(android.database.sqlite.SQLiteStatement,int,java.util.Date) -> a
    45:48:java.util.Date getDate(android.database.Cursor,int) -> a
org.geometerplus.android.util.UIUtil -> org.geometerplus.android.util.c:
    java.lang.Object ourMonitor -> a
    android.app.ProgressDialog ourProgress -> b
    java.util.Queue ourTaskQueue -> c
    android.os.Handler ourProgressHandler -> d
    50:73:boolean init() -> e
    78:109:void wait(java.lang.String,java.lang.Runnable,android.content.Context) -> a
    112:141:void runWithMessage(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,boolean) -> a
    144:145:void showMessageText(android.content.Context,java.lang.String) -> a
    148:152:void showErrorMessage(android.content.Context,java.lang.String) -> b
    155:159:void showErrorMessage(android.content.Context,java.lang.String,java.lang.String) -> a
    34:34:java.lang.Object access$000() -> a
    34:34:java.util.Queue access$100() -> b
    34:34:android.app.ProgressDialog access$200() -> c
    34:34:android.app.ProgressDialog access$202(android.app.ProgressDialog) -> a
    34:34:android.os.Handler access$300() -> d
    35:46:void <clinit>() -> <clinit>
org.geometerplus.android.util.UIUtil$1 -> org.geometerplus.android.util.d:
    54:54:void <init>() -> <init>
    57:68:void handleMessage(android.os.Message) -> handleMessage
org.geometerplus.android.util.UIUtil$2 -> org.geometerplus.android.util.e:
    android.app.ProgressDialog val$currentProgress -> a
    94:94:void <init>(android.app.ProgressDialog) -> <init>
    96:107:void run() -> run
org.geometerplus.android.util.UIUtil$3 -> org.geometerplus.android.util.f:
    android.app.Activity val$activity -> a
    java.lang.String val$message -> b
    java.lang.Runnable val$action -> c
    java.lang.Runnable val$postAction -> d
    boolean val$minPriority -> e
    114:114:void <init>(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,boolean) -> <init>
    116:139:void run() -> run
org.geometerplus.android.util.UIUtil$3$1 -> org.geometerplus.android.util.g:
    android.app.ProgressDialog val$progress -> a
    org.geometerplus.android.util.UIUtil$3 this$0 -> b
    118:118:void <init>(org.geometerplus.android.util.UIUtil$3,android.app.ProgressDialog) -> <init>
    120:133:void run() -> run
org.geometerplus.android.util.UIUtil$3$1$1 -> org.geometerplus.android.util.h:
    org.geometerplus.android.util.UIUtil$3$1 this$1 -> a
    121:121:void <init>(org.geometerplus.android.util.UIUtil$3$1) -> <init>
    124:131:void run() -> run
org.geometerplus.android.util.UIUtil$Pair -> org.geometerplus.android.util.c$a:
    java.lang.Runnable Action -> a
    java.lang.String Message -> b
    41:44:void <init>(java.lang.Runnable,java.lang.String) -> <init>
org.geometerplus.android.util.ViewUtil -> org.geometerplus.android.util.i:
    28:33:android.view.View findView(android.view.View,int) -> a
    37:37:android.widget.TextView findTextView(android.view.View,int) -> b
    41:41:android.widget.ImageView findImageView(android.view.View,int) -> c
org.geometerplus.fbreader.Paths -> org.geometerplus.fbreader.a:
    30:30:java.lang.String cardDirectory() -> a
    34:34:java.lang.String defaultBookDirectory() -> h
    38:38:org.geometerplus.zlibrary.ui.android.options.ZLStringListOption BookPathOption() -> b
    42:42:org.geometerplus.zlibrary.ui.android.options.ZLStringListOption FontPathOption() -> c
    46:46:org.geometerplus.zlibrary.ui.android.options.ZLStringListOption WallpaperPathOption() -> d
    50:51:java.lang.String mainBookDirectory() -> e
    55:55:java.lang.String cacheDirectory() -> f
    63:63:java.lang.String systemShareDirectory() -> g
org.geometerplus.fbreader.book.AbstractBookCollection -> org.geometerplus.fbreader.book.AbstractBookCollection:
    java.util.List myListeners -> myListeners
    24:25:void <init>() -> <init>
    28:31:void addListener(org.geometerplus.fbreader.book.IBookCollection$Listener) -> addListener
    34:35:void removeListener(org.geometerplus.fbreader.book.IBookCollection$Listener) -> removeListener
    38:38:boolean hasListeners() -> hasListeners
    42:47:void fireBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> fireBookEvent
    50:55:void fireBuildEvent(org.geometerplus.fbreader.book.IBookCollection$Status) -> fireBuildEvent
org.geometerplus.fbreader.book.AbstractSerializer -> org.geometerplus.fbreader.book.AbstractSerializer:
    22:22:void <init>() -> <init>
    java.lang.String serialize(org.geometerplus.fbreader.book.BookQuery) -> serialize
    org.geometerplus.fbreader.book.BookQuery deserializeBookQuery(java.lang.String) -> deserializeBookQuery
    java.lang.String serialize(org.geometerplus.fbreader.book.BookmarkQuery) -> serialize
    org.geometerplus.fbreader.book.BookmarkQuery deserializeBookmarkQuery(java.lang.String) -> deserializeBookmarkQuery
    java.lang.String serialize(org.geometerplus.fbreader.book.Book) -> serialize
    org.geometerplus.fbreader.book.Book deserializeBook(java.lang.String) -> deserializeBook
    java.lang.String serialize(org.geometerplus.fbreader.book.Bookmark) -> serialize
    org.geometerplus.fbreader.book.Bookmark deserializeBookmark(java.lang.String) -> deserializeBookmark
    java.lang.String serialize(org.geometerplus.fbreader.book.HighlightingStyle) -> serialize
    org.geometerplus.fbreader.book.HighlightingStyle deserializeStyle(java.lang.String) -> deserializeStyle
org.geometerplus.fbreader.book.Author -> org.geometerplus.fbreader.book.Author:
    org.geometerplus.fbreader.book.Author NULL -> NULL
    java.lang.String DisplayName -> DisplayName
    java.lang.String SortKey -> SortKey
    28:31:void <init>(java.lang.String,java.lang.String) -> <init>
    34:34:int hashCode(org.geometerplus.fbreader.book.Author) -> hashCode
    39:46:boolean equals(java.lang.Object) -> equals
    51:51:int hashCode() -> hashCode
    56:57:int compareTo(org.geometerplus.fbreader.book.Author) -> compareTo
    22:22:int compareTo(java.lang.Object) -> compareTo
    23:23:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.Book -> org.geometerplus.fbreader.book.Book:
    java.lang.String FAVORITE_LABEL -> FAVORITE_LABEL
    java.lang.String READ_LABEL -> READ_LABEL
    org.geometerplus.zlibrary.core.filesystem.ZLFile File -> File
    long myId -> myId
    java.lang.String myEncoding -> myEncoding
    java.lang.String myLanguage -> myLanguage
    java.util.List myAuthors -> myAuthors
    java.util.List myTags -> myTags
    java.util.List myLabels -> myLabels
    org.geometerplus.fbreader.book.SeriesInfo mySeriesInfo -> mySeriesInfo
    java.util.List myUids -> myUids
    org.geometerplus.zlibrary.core.util.RationalNumber myProgress -> myProgress
    boolean HasBookmark -> HasBookmark
    boolean myIsSaved -> myIsSaved
    java.lang.ref.WeakReference NULL_IMAGE -> NULL_IMAGE
    java.lang.ref.WeakReference myCover -> myCover
    java.lang.String aesKey -> aesKey
    java.lang.String stylesheetPath -> stylesheetPath
    java.util.Set myVisitedHyperlinks -> myVisitedHyperlinks
    68:77:void <init>(long,org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String,java.lang.String) -> <init>
    80:89:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    92:119:void updateFrom(org.geometerplus.fbreader.book.Book) -> updateFrom
    123:127:void reloadInfoFromFile() -> reloadInfoFromFile
    130:134:org.geometerplus.fbreader.formats.FormatPlugin getPlugin(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> getPlugin
    138:138:org.geometerplus.fbreader.formats.FormatPlugin getPlugin() -> getPlugin
    142:143:void readMetaInfo() -> readMetaInfo
    146:172:void readMetaInfo(org.geometerplus.fbreader.formats.FormatPlugin) -> readMetaInfo
    175:193:void loadLists(org.geometerplus.fbreader.book.BooksDatabase) -> loadLists
    196:196:java.util.List authors() -> authors
    200:204:void addAuthorWithNoCheck(org.geometerplus.fbreader.book.Author) -> addAuthorWithNoCheck
    207:211:void removeAllAuthors() -> removeAllAuthors
    214:225:void addAuthor(org.geometerplus.fbreader.book.Author) -> addAuthor
    228:229:void addAuthor(java.lang.String) -> addAuthor
    232:254:void addAuthor(java.lang.String,java.lang.String) -> addAuthor
    257:257:long getId() -> getId
    262:266:void setTitle(java.lang.String) -> setTitle
    269:269:org.geometerplus.fbreader.book.SeriesInfo getSeriesInfo() -> getSeriesInfo
    273:274:void setSeriesInfoWithNoCheck(java.lang.String,java.lang.String) -> setSeriesInfoWithNoCheck
    277:278:void setSeriesInfo(java.lang.String,java.lang.String) -> setSeriesInfo
    281:293:void setSeriesInfo(java.lang.String,java.math.BigDecimal) -> setSeriesInfo
    297:297:java.lang.String getLanguage() -> getLanguage
    301:306:void setLanguage(java.lang.String) -> setLanguage
    309:318:java.lang.String getEncoding() -> getEncoding
    322:322:java.lang.String getEncodingNoDetection() -> getEncodingNoDetection
    326:330:void setEncoding(java.lang.String) -> setEncoding
    333:333:java.util.List tags() -> tags
    337:341:void addTagWithNoCheck(org.geometerplus.fbreader.book.Tag) -> addTagWithNoCheck
    344:348:void removeAllTags() -> removeAllTags
    351:360:void addTag(org.geometerplus.fbreader.book.Tag) -> addTag
    363:364:void addTag(java.lang.String) -> addTag
    367:367:java.util.List labels() -> labels
    371:375:void addLabelWithNoCheck(java.lang.String) -> addLabelWithNoCheck
    378:385:void addLabel(java.lang.String) -> addLabel
    388:391:void removeLabel(java.lang.String) -> removeLabel
    394:394:java.util.List uids() -> uids
    398:399:void addUid(java.lang.String,java.lang.String) -> addUid
    402:409:void addUidWithNoCheck(org.geometerplus.fbreader.book.UID) -> addUidWithNoCheck
    412:422:void addUid(org.geometerplus.fbreader.book.UID) -> addUid
    425:425:boolean matchesUid(org.geometerplus.fbreader.book.UID) -> matchesUid
    429:429:org.geometerplus.zlibrary.core.util.RationalNumber getProgress() -> getProgress
    433:437:void setProgress(org.geometerplus.zlibrary.core.util.RationalNumber) -> setProgress
    440:441:void setProgressWithNoCheck(org.geometerplus.zlibrary.core.util.RationalNumber) -> setProgressWithNoCheck
    444:467:boolean matches(java.lang.String) -> matches
    471:521:boolean save(org.geometerplus.fbreader.book.BooksDatabase,boolean) -> save
    526:532:void initHyperlinkSet(org.geometerplus.fbreader.book.BooksDatabase) -> initHyperlinkSet
    535:536:boolean isHyperlinkVisited(org.geometerplus.fbreader.book.BooksDatabase,java.lang.String) -> isHyperlinkVisited
    540:547:void markHyperlinkAsVisited(org.geometerplus.fbreader.book.BooksDatabase,java.lang.String) -> markHyperlinkAsVisited
    550:565:org.geometerplus.zlibrary.core.image.ZLImage getCover() -> getCover
    570:570:int hashCode() -> hashCode
    575:597:boolean equals(java.lang.Object) -> equals
    602:609:java.lang.String toString() -> toString
    613:613:java.lang.String getAesKey() -> getAesKey
    617:618:void setAesKey(java.lang.String) -> setAesKey
    621:621:java.lang.String getStylesheetPath() -> getStylesheetPath
    625:626:void setStylesheetPath(java.lang.String) -> setStylesheetPath
    37:37:long access$000(org.geometerplus.fbreader.book.Book) -> access$000
    37:37:java.lang.String access$100(org.geometerplus.fbreader.book.Book) -> access$100
    37:37:java.lang.String access$200(org.geometerplus.fbreader.book.Book) -> access$200
    37:37:long access$002(org.geometerplus.fbreader.book.Book,long) -> access$002
    37:37:java.util.Set access$300(org.geometerplus.fbreader.book.Book) -> access$300
    37:37:java.util.List access$400(org.geometerplus.fbreader.book.Book) -> access$400
    37:37:org.geometerplus.fbreader.book.SeriesInfo access$500(org.geometerplus.fbreader.book.Book) -> access$500
    37:37:org.geometerplus.zlibrary.core.util.RationalNumber access$600(org.geometerplus.fbreader.book.Book) -> access$600
    58:58:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.Book$1 -> org.geometerplus.fbreader.book.Book$1:
    org.geometerplus.fbreader.book.BooksDatabase val$database -> val$database
    org.geometerplus.fbreader.book.Book this$0 -> this$0
    475:475:void <init>(org.geometerplus.fbreader.book.Book,org.geometerplus.fbreader.book.BooksDatabase) -> <init>
    477:517:void run() -> run
org.geometerplus.fbreader.book.BookCollection -> org.geometerplus.fbreader.book.BookCollection:
    org.geometerplus.fbreader.book.BooksDatabase myDatabase -> myDatabase
    java.util.List BookDirectories -> BookDirectories
    java.util.Map myBooksByFile -> myBooksByFile
    java.util.Map myBooksById -> myBooksById
    java.util.List myFilesToRescan -> myFilesToRescan
    org.geometerplus.fbreader.book.IBookCollection$Status myStatus -> myStatus
    java.util.Map myStyles -> myStyles
    50:65:void <init>(org.geometerplus.fbreader.book.BooksDatabase,java.util.List) -> <init>
    68:68:int size() -> size
    72:122:org.geometerplus.fbreader.book.Book getBookByFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> getBookByFile
    126:162:org.geometerplus.fbreader.book.Book getBookById(long) -> getBookById
    167:173:org.geometerplus.fbreader.book.Book getBookByUid(org.geometerplus.fbreader.book.UID) -> getBookByUid
    177:200:boolean addBook(org.geometerplus.fbreader.book.Book,boolean) -> addBook
    204:204:boolean saveBook(org.geometerplus.fbreader.book.Book) -> saveBook
    208:221:void removeBook(org.geometerplus.fbreader.book.Book,boolean) -> removeBook
    224:224:org.geometerplus.fbreader.book.IBookCollection$Status status() -> status
    229:253:java.util.List books(org.geometerplus.fbreader.book.BookQuery) -> books
    259:267:boolean hasBooks(org.geometerplus.fbreader.book.Filter) -> hasBooks
    271:276:java.util.List titles(org.geometerplus.fbreader.book.BookQuery) -> titles
    280:280:java.util.List recentBooks() -> recentBooks
    284:291:java.util.List books(java.util.List) -> books
    295:306:java.util.List authors() -> authors
    310:325:java.util.List tags() -> tags
    329:335:java.util.List labels() -> labels
    339:346:boolean hasSeries() -> hasSeries
    350:359:java.util.List series() -> series
    363:372:java.util.List firstTitleLetters() -> firstTitleLetters
    376:377:org.geometerplus.fbreader.book.Book getRecentBook(int) -> getRecentBook
    381:389:void addBookToRecentList(org.geometerplus.fbreader.book.Book) -> addBookToRecentList
    392:394:void setStatus(org.geometerplus.fbreader.book.IBookCollection$Status) -> setStatus
    397:418:void startBuild() -> startBuild
    421:425:void rescan(java.lang.String) -> rescan
    428:468:void processFilesQueue() -> processFilesQueue
    472:556:void build() -> build
    559:586:java.util.List collectPhysicalFiles(java.util.List) -> collectPhysicalFiles
    595:626:void collectBooks(org.geometerplus.zlibrary.core.filesystem.ZLFile,org.geometerplus.fbreader.book.FileInfoSet,java.util.Map,java.util.Map,java.util.Set,boolean) -> collectBooks
    630:639:boolean saveCover(org.geometerplus.fbreader.book.Book,java.lang.String) -> saveCover
    643:643:java.util.List bookmarks(org.geometerplus.fbreader.book.BookmarkQuery) -> bookmarks
    647:657:void saveBookmark(org.geometerplus.fbreader.book.Bookmark) -> saveBookmark
    660:670:void deleteBookmark(org.geometerplus.fbreader.book.Bookmark) -> deleteBookmark
    673:673:org.geometerplus.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    677:680:void storePosition(long,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> storePosition
    683:683:boolean isHyperlinkVisited(org.geometerplus.fbreader.book.Book,java.lang.String) -> isHyperlinkVisited
    687:688:void markHyperlinkAsVisited(org.geometerplus.fbreader.book.Book,java.lang.String) -> markHyperlinkAsVisited
    691:696:void initStylesTable() -> initStylesTable
    699:700:org.geometerplus.fbreader.book.HighlightingStyle getHighlightingStyle(int) -> getHighlightingStyle
    704:705:java.util.List highlightingStyles() -> highlightingStyles
    709:712:void saveHighlightingStyle(org.geometerplus.fbreader.book.HighlightingStyle) -> saveHighlightingStyle
    46:46:void access$000(org.geometerplus.fbreader.book.BookCollection) -> access$000
    46:46:void access$100(org.geometerplus.fbreader.book.BookCollection,org.geometerplus.fbreader.book.IBookCollection$Status) -> access$100
    46:46:java.util.List access$200(org.geometerplus.fbreader.book.BookCollection) -> access$200
    46:46:void access$300(org.geometerplus.fbreader.book.BookCollection) -> access$300
org.geometerplus.fbreader.book.BookCollection$1 -> org.geometerplus.fbreader.book.BookCollection$1:
    org.geometerplus.fbreader.book.BookCollection this$0 -> this$0
    402:402:void <init>(org.geometerplus.fbreader.book.BookCollection,java.lang.String) -> <init>
    405:414:void run() -> run
org.geometerplus.fbreader.book.BookCollection$2 -> org.geometerplus.fbreader.book.BookCollection$2:
    java.util.Set val$newBooks -> val$newBooks
    org.geometerplus.fbreader.book.BookCollection this$0 -> this$0
    548:548:void <init>(org.geometerplus.fbreader.book.BookCollection,java.util.Set) -> <init>
    550:553:void run() -> run
org.geometerplus.fbreader.book.BookEvent -> org.geometerplus.fbreader.book.BookEvent:
    org.geometerplus.fbreader.book.BookEvent Added -> Added
    org.geometerplus.fbreader.book.BookEvent Updated -> Updated
    org.geometerplus.fbreader.book.BookEvent Removed -> Removed
    org.geometerplus.fbreader.book.BookEvent BookmarksUpdated -> BookmarksUpdated
    org.geometerplus.fbreader.book.BookEvent BookmarkStyleChanged -> BookmarkStyleChanged
    org.geometerplus.fbreader.book.BookEvent[] $VALUES -> $VALUES
    22:22:org.geometerplus.fbreader.book.BookEvent[] values() -> values
    22:22:org.geometerplus.fbreader.book.BookEvent valueOf(java.lang.String) -> valueOf
    22:22:void <init>(java.lang.String,int) -> <init>
    22:27:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.BookQuery -> org.geometerplus.fbreader.book.BookQuery:
    org.geometerplus.fbreader.book.Filter Filter -> Filter
    int Limit -> Limit
    int Page -> Page
    28:29:void <init>(org.geometerplus.fbreader.book.Filter,int) -> <init>
    31:35:void <init>(org.geometerplus.fbreader.book.Filter,int,int) -> <init>
    38:38:org.geometerplus.fbreader.book.BookQuery next() -> next
org.geometerplus.fbreader.book.BookUtil -> org.geometerplus.fbreader.book.BookUtil:
    34:34:void <init>() -> <init>
    36:36:org.geometerplus.zlibrary.core.image.ZLImage getCover(org.geometerplus.fbreader.book.Book) -> getCover
    41:43:java.lang.String getAnnotation(org.geometerplus.fbreader.book.Book) -> getAnnotation
    49:52:org.geometerplus.zlibrary.core.filesystem.ZLResourceFile getHelpFile() -> getHelpFile
    56:66:boolean canRemoveBookFile(org.geometerplus.fbreader.book.Book) -> canRemoveBookFile
    70:101:org.geometerplus.fbreader.book.UID createSHA256Uid(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> createSHA256Uid
org.geometerplus.fbreader.book.Bookmark -> org.geometerplus.fbreader.book.Bookmark:
    long myId -> myId
    long myBookId -> myBookId
    java.lang.String myBookTitle -> myBookTitle
    java.lang.String myText -> myText
    java.util.Date myCreationDate -> myCreationDate
    java.util.Date myModificationDate -> myModificationDate
    java.util.Date myAccessDate -> myAccessDate
    int myAccessCount -> myAccessCount
    java.util.Date myLatestDate -> myLatestDate
    org.geometerplus.zlibrary.text.view.ZLTextFixedPosition myEnd -> myEnd
    int myLength -> myLength
    int myStyleId -> myStyleId
    java.lang.String ModelId -> ModelId
    boolean IsVisible -> IsVisible
    59:85:void <init>(long,long,java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.util.Date,int,java.lang.String,int,int,int,int,int,int,boolean,int) -> <init>
    111:190:org.geometerplus.fbreader.book.Bookmark createBookmark(org.geometerplus.fbreader.book.Book,java.lang.String,org.geometerplus.zlibrary.text.view.ZLTextWordCursor,int,boolean) -> createBookmark
    194:231:void findEnd(org.geometerplus.zlibrary.text.view.ZLTextView) -> findEnd
    234:245:void <init>(org.geometerplus.fbreader.book.Book,java.lang.String,org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextPosition,java.lang.String,boolean) -> <init>
    248:248:long getId() -> getId
    252:252:long getBookId() -> getBookId
    256:256:int getStyleId() -> getStyleId
    260:261:void setStyleId(int) -> setStyleId
    264:264:java.lang.String getText() -> getText
    268:268:java.lang.String getBookTitle() -> getBookTitle
    272:281:java.util.Date getDate(org.geometerplus.fbreader.book.Bookmark$DateType) -> getDate
    286:286:int getAccessCount() -> getAccessCount
    290:290:org.geometerplus.zlibrary.text.view.ZLTextPosition getEnd() -> getEnd
    294:294:int getLength() -> getLength
    298:303:void setText(java.lang.String) -> setText
    306:309:void markAsAccessed() -> markAsAccessed
    323:324:void setId(long) -> setId
    328:331:void update(org.geometerplus.fbreader.book.Bookmark) -> update
org.geometerplus.fbreader.book.Bookmark$1 -> org.geometerplus.fbreader.book.Bookmark$1:
    int[] $SwitchMap$org$geometerplus$fbreader$book$Bookmark$DateType -> $SwitchMap$org$geometerplus$fbreader$book$Bookmark$DateType
    272:272:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.Bookmark$Buffer -> org.geometerplus.fbreader.book.Bookmark$Buffer:
    java.lang.StringBuilder Builder -> Builder
    org.geometerplus.zlibrary.text.view.ZLTextWordCursor Cursor -> Cursor
    88:93:void <init>(org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> <init>
    96:96:boolean isEmpty() -> isEmpty
    100:103:void append(org.geometerplus.fbreader.book.Bookmark$Buffer) -> append
    106:107:void append(java.lang.CharSequence) -> append
org.geometerplus.fbreader.book.Bookmark$ByTimeComparator -> org.geometerplus.fbreader.book.Bookmark$ByTimeComparator:
    311:311:void <init>() -> <init>
    313:318:int compare(org.geometerplus.fbreader.book.Bookmark,org.geometerplus.fbreader.book.Bookmark) -> compare
    311:311:int compare(java.lang.Object,java.lang.Object) -> compare
org.geometerplus.fbreader.book.Bookmark$DateType -> org.geometerplus.fbreader.book.Bookmark$DateType:
    org.geometerplus.fbreader.book.Bookmark$DateType Creation -> Creation
    org.geometerplus.fbreader.book.Bookmark$DateType Modification -> Modification
    org.geometerplus.fbreader.book.Bookmark$DateType Access -> Access
    org.geometerplus.fbreader.book.Bookmark$DateType Latest -> Latest
    org.geometerplus.fbreader.book.Bookmark$DateType[] $VALUES -> $VALUES
    27:27:org.geometerplus.fbreader.book.Bookmark$DateType[] values() -> values
    27:27:org.geometerplus.fbreader.book.Bookmark$DateType valueOf(java.lang.String) -> valueOf
    27:27:void <init>(java.lang.String,int) -> <init>
    27:31:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.BookmarkQuery -> org.geometerplus.fbreader.book.BookmarkQuery:
    org.geometerplus.fbreader.book.Book Book -> Book
    boolean Visible -> Visible
    int Limit -> Limit
    int Page -> Page
    29:30:void <init>(int) -> <init>
    33:34:void <init>(org.geometerplus.fbreader.book.Book,int) -> <init>
    37:38:void <init>(org.geometerplus.fbreader.book.Book,boolean,int) -> <init>
    40:45:void <init>(org.geometerplus.fbreader.book.Book,boolean,int,int) -> <init>
    48:48:org.geometerplus.fbreader.book.BookmarkQuery next() -> next
org.geometerplus.fbreader.book.BooksDatabase -> org.geometerplus.fbreader.book.BooksDatabase:
    30:30:void <init>() -> <init>
    32:33:org.geometerplus.fbreader.book.Book createBook(long,long,java.lang.String,java.lang.String,java.lang.String) -> createBook
    36:36:org.geometerplus.fbreader.book.Book createBook(long,org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String,java.lang.String) -> createBook
    39:40:void addAuthor(org.geometerplus.fbreader.book.Book,org.geometerplus.fbreader.book.Author) -> addAuthor
    42:43:void addTag(org.geometerplus.fbreader.book.Book,org.geometerplus.fbreader.book.Tag) -> addTag
    45:46:void setSeriesInfo(org.geometerplus.fbreader.book.Book,java.lang.String,java.lang.String) -> setSeriesInfo
    void executeAsTransaction(java.lang.Runnable) -> executeAsTransaction
    java.util.Map loadBooks(org.geometerplus.fbreader.book.FileInfoSet,boolean) -> loadBooks
    void setExistingFlag(java.util.Collection,boolean) -> setExistingFlag
    org.geometerplus.fbreader.book.Book loadBook(long) -> loadBook
    org.geometerplus.fbreader.book.Book loadBookByFile(long,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> loadBookByFile
    java.util.List listAuthors(long) -> listAuthors
    java.util.List listTags(long) -> listTags
    java.util.List listLabels(long) -> listLabels
    org.geometerplus.fbreader.book.SeriesInfo getSeriesInfo(long) -> getSeriesInfo
    java.util.List listUids(long) -> listUids
    boolean hasVisibleBookmark(long) -> hasVisibleBookmark
    org.geometerplus.zlibrary.core.util.RationalNumber getProgress(long) -> getProgress
    java.lang.Long bookIdByUid(org.geometerplus.fbreader.book.UID) -> bookIdByUid
    void updateBookInfo(long,long,java.lang.String,java.lang.String,java.lang.String) -> updateBookInfo
    long insertBookInfo(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String,java.lang.String) -> insertBookInfo
    void deleteAllBookAuthors(long) -> deleteAllBookAuthors
    void saveBookAuthorInfo(long,long,org.geometerplus.fbreader.book.Author) -> saveBookAuthorInfo
    void deleteAllBookTags(long) -> deleteAllBookTags
    void saveBookTagInfo(long,org.geometerplus.fbreader.book.Tag) -> saveBookTagInfo
    void saveBookSeriesInfo(long,org.geometerplus.fbreader.book.SeriesInfo) -> saveBookSeriesInfo
    void deleteAllBookUids(long) -> deleteAllBookUids
    void saveBookUid(long,org.geometerplus.fbreader.book.UID) -> saveBookUid
    void saveBookProgress(long,org.geometerplus.zlibrary.core.util.RationalNumber) -> saveBookProgress
    78:78:org.geometerplus.fbreader.book.FileInfo createFileInfo(long,java.lang.String,org.geometerplus.fbreader.book.FileInfo) -> createFileInfo
    java.util.Collection loadFileInfos() -> loadFileInfos
    java.util.Collection loadFileInfos(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> loadFileInfos
    java.util.Collection loadFileInfos(long) -> loadFileInfos
    void removeFileInfo(long) -> removeFileInfo
    void saveFileInfo(org.geometerplus.fbreader.book.FileInfo) -> saveFileInfo
    java.util.List loadRecentBookIds() -> loadRecentBookIds
    void saveRecentBookIds(java.util.List) -> saveRecentBookIds
    void setLabel(long,java.lang.String) -> setLabel
    void removeLabel(long,java.lang.String) -> removeLabel
    102:102:org.geometerplus.fbreader.book.Bookmark createBookmark(long,long,java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.util.Date,int,java.lang.String,int,int,int,int,int,int,boolean,int) -> createBookmark
    java.util.List loadBookmarks(org.geometerplus.fbreader.book.BookmarkQuery) -> loadBookmarks
    long saveBookmark(org.geometerplus.fbreader.book.Bookmark) -> saveBookmark
    void deleteBookmark(org.geometerplus.fbreader.book.Bookmark) -> deleteBookmark
    118:118:org.geometerplus.fbreader.book.HighlightingStyle createStyle(int,java.lang.String,int) -> createStyle
    java.util.List loadStyles() -> loadStyles
    void saveStyle(org.geometerplus.fbreader.book.HighlightingStyle) -> saveStyle
    org.geometerplus.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    void storePosition(long,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> storePosition
    java.util.Collection loadVisitedHyperlinks(long) -> loadVisitedHyperlinks
    void addVisitedHyperlink(long,java.lang.String) -> addVisitedHyperlink
org.geometerplus.fbreader.book.FileInfo -> org.geometerplus.fbreader.book.FileInfo:
    java.lang.String Name -> Name
    long Id -> Id
    long FileSize -> FileSize
    30:31:void <init>(java.lang.String,org.geometerplus.fbreader.book.FileInfo) -> <init>
    27:37:void <init>(java.lang.String,org.geometerplus.fbreader.book.FileInfo,long) -> <init>
org.geometerplus.fbreader.book.FileInfoSet -> org.geometerplus.fbreader.book.FileInfoSet:
    java.util.HashMap myInfosByFile -> myInfosByFile
    java.util.HashMap myFilesByInfo -> myFilesByInfo
    java.util.HashMap myInfosByPair -> myInfosByPair
    java.util.HashMap myInfosById -> myInfosById
    java.util.LinkedHashSet myInfosToSave -> myInfosToSave
    java.util.LinkedHashSet myInfosToRemove -> myInfosToRemove
    org.geometerplus.fbreader.book.BooksDatabase myDatabase -> myDatabase
    55:68:void <init>(org.geometerplus.fbreader.book.BooksDatabase) -> <init>
    55:73:void <init>(org.geometerplus.fbreader.book.BooksDatabase,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    55:78:void <init>(org.geometerplus.fbreader.book.BooksDatabase,long) -> <init>
    81:85:void load(java.util.Collection) -> load
    88:101:void save() -> save
    104:120:boolean check(org.geometerplus.zlibrary.core.filesystem.ZLPhysicalFile,boolean) -> check
    125:135:java.util.List archiveEntries(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> archiveEntries
    139:146:org.geometerplus.fbreader.book.FileInfo get(java.lang.String,org.geometerplus.fbreader.book.FileInfo) -> get
    151:159:org.geometerplus.fbreader.book.FileInfo get(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> get
    163:170:long getId(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> getId
    174:182:org.geometerplus.zlibrary.core.filesystem.ZLFile getFile(org.geometerplus.fbreader.book.FileInfo) -> getFile
    186:186:org.geometerplus.zlibrary.core.filesystem.ZLFile getFile(long) -> getFile
    190:198:void removeChildren(org.geometerplus.fbreader.book.FileInfo) -> removeChildren
    201:210:void addChildren(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> addChildren
    27:27:java.util.LinkedHashSet access$000(org.geometerplus.fbreader.book.FileInfoSet) -> access$000
    27:27:org.geometerplus.fbreader.book.BooksDatabase access$100(org.geometerplus.fbreader.book.FileInfoSet) -> access$100
    27:27:java.util.HashMap access$200(org.geometerplus.fbreader.book.FileInfoSet) -> access$200
    27:27:java.util.LinkedHashSet access$300(org.geometerplus.fbreader.book.FileInfoSet) -> access$300
org.geometerplus.fbreader.book.FileInfoSet$1 -> org.geometerplus.fbreader.book.FileInfoSet$1:
    org.geometerplus.fbreader.book.FileInfoSet this$0 -> this$0
    88:88:void <init>(org.geometerplus.fbreader.book.FileInfoSet) -> <init>
    90:99:void run() -> run
org.geometerplus.fbreader.book.FileInfoSet$Pair -> org.geometerplus.fbreader.book.FileInfoSet$Pair:
    java.lang.String myName -> myName
    org.geometerplus.fbreader.book.FileInfo myParent -> myParent
    32:35:void <init>(java.lang.String,org.geometerplus.fbreader.book.FileInfo) -> <init>
    39:39:int hashCode() -> hashCode
    44:51:boolean equals(java.lang.Object) -> equals
org.geometerplus.fbreader.book.Filter -> org.geometerplus.fbreader.book.Filter:
    24:24:void <init>() -> <init>
    boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$And -> org.geometerplus.fbreader.book.Filter$And:
    org.geometerplus.fbreader.book.Filter First -> First
    org.geometerplus.fbreader.book.Filter Second -> Second
    120:123:void <init>(org.geometerplus.fbreader.book.Filter,org.geometerplus.fbreader.book.Filter) -> <init>
    126:126:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$ByAuthor -> org.geometerplus.fbreader.book.Filter$ByAuthor:
    org.geometerplus.fbreader.book.Author Author -> Author
    36:38:void <init>(org.geometerplus.fbreader.book.Author) -> <init>
    41:43:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$ByLabel -> org.geometerplus.fbreader.book.Filter$ByLabel:
    java.lang.String Label -> Label
    64:66:void <init>(java.lang.String) -> <init>
    69:69:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$ByPattern -> org.geometerplus.fbreader.book.Filter$ByPattern:
    java.lang.String Pattern -> Pattern
    76:78:void <init>(java.lang.String) -> <init>
    81:81:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$BySeries -> org.geometerplus.fbreader.book.Filter$BySeries:
    org.geometerplus.fbreader.book.Series Series -> Series
    100:102:void <init>(org.geometerplus.fbreader.book.Series) -> <init>
    105:106:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$ByTag -> org.geometerplus.fbreader.book.Filter$ByTag:
    org.geometerplus.fbreader.book.Tag Tag -> Tag
    50:52:void <init>(org.geometerplus.fbreader.book.Tag) -> <init>
    55:57:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$ByTitlePrefix -> org.geometerplus.fbreader.book.Filter$ByTitlePrefix:
    java.lang.String Prefix -> Prefix
    88:90:void <init>(java.lang.String) -> <init>
    93:93:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$Empty -> org.geometerplus.fbreader.book.Filter$Empty:
    27:27:void <init>() -> <init>
    29:29:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$HasBookmark -> org.geometerplus.fbreader.book.Filter$HasBookmark:
    110:110:void <init>() -> <init>
    112:112:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.Filter$Or -> org.geometerplus.fbreader.book.Filter$Or:
    org.geometerplus.fbreader.book.Filter First -> First
    org.geometerplus.fbreader.book.Filter Second -> Second
    134:137:void <init>(org.geometerplus.fbreader.book.Filter,org.geometerplus.fbreader.book.Filter) -> <init>
    140:140:boolean matches(org.geometerplus.fbreader.book.Book) -> matches
org.geometerplus.fbreader.book.HighlightingStyle -> org.geometerplus.fbreader.book.HighlightingStyle:
    int Id -> Id
    java.lang.String myName -> myName
    org.geometerplus.zlibrary.core.util.ZLColor myBackgroundColor -> myBackgroundColor
    31:35:void <init>(int,java.lang.String,org.geometerplus.zlibrary.core.util.ZLColor) -> <init>
    38:38:java.lang.String defaultName() -> defaultName
    42:45:java.lang.String getName() -> getName
    49:50:void setName(java.lang.String) -> setName
    53:53:org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> getBackgroundColor
    57:58:void setBackgroundColor(org.geometerplus.zlibrary.core.util.ZLColor) -> setBackgroundColor
org.geometerplus.fbreader.book.IBookCollection -> org.geometerplus.fbreader.book.IBookCollection:
    void addListener(org.geometerplus.fbreader.book.IBookCollection$Listener) -> addListener
    void removeListener(org.geometerplus.fbreader.book.IBookCollection$Listener) -> removeListener
    org.geometerplus.fbreader.book.IBookCollection$Status status() -> status
    int size() -> size
    java.util.List books(org.geometerplus.fbreader.book.BookQuery) -> books
    boolean hasBooks(org.geometerplus.fbreader.book.Filter) -> hasBooks
    java.util.List titles(org.geometerplus.fbreader.book.BookQuery) -> titles
    java.util.List recentBooks() -> recentBooks
    org.geometerplus.fbreader.book.Book getRecentBook(int) -> getRecentBook
    void addBookToRecentList(org.geometerplus.fbreader.book.Book) -> addBookToRecentList
    org.geometerplus.fbreader.book.Book getBookByFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> getBookByFile
    org.geometerplus.fbreader.book.Book getBookById(long) -> getBookById
    org.geometerplus.fbreader.book.Book getBookByUid(org.geometerplus.fbreader.book.UID) -> getBookByUid
    java.util.List labels() -> labels
    java.util.List authors() -> authors
    boolean hasSeries() -> hasSeries
    java.util.List series() -> series
    java.util.List tags() -> tags
    java.util.List firstTitleLetters() -> firstTitleLetters
    boolean saveBook(org.geometerplus.fbreader.book.Book) -> saveBook
    void removeBook(org.geometerplus.fbreader.book.Book,boolean) -> removeBook
    org.geometerplus.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    void storePosition(long,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> storePosition
    boolean isHyperlinkVisited(org.geometerplus.fbreader.book.Book,java.lang.String) -> isHyperlinkVisited
    void markHyperlinkAsVisited(org.geometerplus.fbreader.book.Book,java.lang.String) -> markHyperlinkAsVisited
    boolean saveCover(org.geometerplus.fbreader.book.Book,java.lang.String) -> saveCover
    java.util.List bookmarks(org.geometerplus.fbreader.book.BookmarkQuery) -> bookmarks
    void saveBookmark(org.geometerplus.fbreader.book.Bookmark) -> saveBookmark
    void deleteBookmark(org.geometerplus.fbreader.book.Bookmark) -> deleteBookmark
    org.geometerplus.fbreader.book.HighlightingStyle getHighlightingStyle(int) -> getHighlightingStyle
    java.util.List highlightingStyles() -> highlightingStyles
    void saveHighlightingStyle(org.geometerplus.fbreader.book.HighlightingStyle) -> saveHighlightingStyle
    void rescan(java.lang.String) -> rescan
org.geometerplus.fbreader.book.IBookCollection$Listener -> org.geometerplus.fbreader.book.IBookCollection$Listener:
    void onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> onBookEvent
    void onBuildEvent(org.geometerplus.fbreader.book.IBookCollection$Status) -> onBuildEvent
org.geometerplus.fbreader.book.IBookCollection$Status -> org.geometerplus.fbreader.book.IBookCollection$Status:
    org.geometerplus.fbreader.book.IBookCollection$Status NotStarted -> NotStarted
    org.geometerplus.fbreader.book.IBookCollection$Status Started -> Started
    org.geometerplus.fbreader.book.IBookCollection$Status Succeeded -> Succeeded
    org.geometerplus.fbreader.book.IBookCollection$Status Failed -> Failed
    java.lang.Boolean IsCompleted -> IsCompleted
    org.geometerplus.fbreader.book.IBookCollection$Status[] $VALUES -> $VALUES
    29:29:org.geometerplus.fbreader.book.IBookCollection$Status[] values() -> values
    29:29:org.geometerplus.fbreader.book.IBookCollection$Status valueOf(java.lang.String) -> valueOf
    37:39:void <init>(java.lang.String,int,boolean) -> <init>
    29:33:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.SerializerUtil -> org.geometerplus.fbreader.book.SerializerUtil:
    org.geometerplus.fbreader.book.AbstractSerializer defaultSerializer -> defaultSerializer
    25:26:void <init>() -> <init>
    31:31:java.lang.String serialize(org.geometerplus.fbreader.book.BookQuery) -> serialize
    35:35:org.geometerplus.fbreader.book.BookQuery deserializeBookQuery(java.lang.String) -> deserializeBookQuery
    39:39:java.lang.String serialize(org.geometerplus.fbreader.book.BookmarkQuery) -> serialize
    43:43:org.geometerplus.fbreader.book.BookmarkQuery deserializeBookmarkQuery(java.lang.String) -> deserializeBookmarkQuery
    47:47:java.lang.String serialize(org.geometerplus.fbreader.book.Book) -> serialize
    51:51:org.geometerplus.fbreader.book.Book deserializeBook(java.lang.String) -> deserializeBook
    55:59:java.util.List serializeBookList(java.util.List) -> serializeBookList
    63:70:java.util.List deserializeBookList(java.util.List) -> deserializeBookList
    74:74:java.lang.String serialize(org.geometerplus.fbreader.book.Bookmark) -> serialize
    78:78:org.geometerplus.fbreader.book.Bookmark deserializeBookmark(java.lang.String) -> deserializeBookmark
    82:86:java.util.List serializeBookmarkList(java.util.List) -> serializeBookmarkList
    90:97:java.util.List deserializeBookmarkList(java.util.List) -> deserializeBookmarkList
    101:101:java.lang.String serialize(org.geometerplus.fbreader.book.HighlightingStyle) -> serialize
    105:105:org.geometerplus.fbreader.book.HighlightingStyle deserializeStyle(java.lang.String) -> deserializeStyle
    109:113:java.util.List serializeStyleList(java.util.List) -> serializeStyleList
    117:124:java.util.List deserializeStyleList(java.util.List) -> deserializeStyleList
    28:28:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.Series -> org.geometerplus.fbreader.book.Series:
    26:27:void <init>(java.lang.String) -> <init>
    31:31:java.lang.String getLanguage() -> getLanguage
    36:42:boolean equals(java.lang.Object) -> equals
    47:47:int hashCode() -> hashCode
org.geometerplus.fbreader.book.SeriesInfo -> org.geometerplus.fbreader.book.SeriesInfo:
    org.geometerplus.fbreader.book.Series Series -> Series
    java.math.BigDecimal Index -> Index
    26:29:org.geometerplus.fbreader.book.SeriesInfo createSeriesInfo(java.lang.String,java.lang.String) -> createSeriesInfo
    34:36:java.math.BigDecimal createIndex(java.lang.String) -> createIndex
    43:46:void <init>(java.lang.String,java.math.BigDecimal) -> <init>
org.geometerplus.fbreader.book.Tag -> org.geometerplus.fbreader.book.Tag:
    org.geometerplus.fbreader.book.Tag NULL -> NULL
    java.util.HashMap ourTagSet -> ourTagSet
    org.geometerplus.fbreader.book.Tag Parent -> Parent
    java.lang.String Name -> Name
    30:43:org.geometerplus.fbreader.book.Tag getTag(org.geometerplus.fbreader.book.Tag,java.lang.String) -> getTag
    47:47:org.geometerplus.fbreader.book.Tag getTag(java.lang.String[]) -> getTag
    51:51:org.geometerplus.fbreader.book.Tag getTag(java.lang.String[],int) -> getTag
    57:60:void <init>(org.geometerplus.fbreader.book.Tag,java.lang.String) -> <init>
    63:63:java.lang.String toString(java.lang.String) -> toString
    67:69:java.lang.StringBuilder toStringBuilder(java.lang.String) -> toStringBuilder
    74:81:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    25:27:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.UID -> org.geometerplus.fbreader.book.UID:
    java.lang.String Type -> Type
    java.lang.String Id -> Id
    26:29:void <init>(java.lang.String,java.lang.String) -> <init>
    33:40:boolean equals(java.lang.Object) -> equals
    45:45:int hashCode() -> hashCode
org.geometerplus.fbreader.book.XMLSerializer -> org.geometerplus.fbreader.book.XMLSerializer:
    java.text.DateFormat ourDateFormatter -> ourDateFormatter
    38:38:void <init>() -> <init>
    41:48:java.lang.String serialize(org.geometerplus.fbreader.book.BookQuery) -> serialize
    52:115:void serialize(java.lang.StringBuilder,org.geometerplus.fbreader.book.Filter) -> serialize
    120:126:org.geometerplus.fbreader.book.BookQuery deserializeBookQuery(java.lang.String) -> deserializeBookQuery
    132:142:java.lang.String serialize(org.geometerplus.fbreader.book.BookmarkQuery) -> serialize
    148:154:org.geometerplus.fbreader.book.BookmarkQuery deserializeBookmarkQuery(java.lang.String) -> deserializeBookmarkQuery
    160:162:java.lang.String serialize(org.geometerplus.fbreader.book.Book) -> serialize
    166:241:void serialize(java.lang.StringBuilder,org.geometerplus.fbreader.book.Book) -> serialize
    246:252:org.geometerplus.fbreader.book.Book deserializeBook(java.lang.String) -> deserializeBook
    258:303:java.lang.String serialize(org.geometerplus.fbreader.book.Bookmark) -> serialize
    309:315:org.geometerplus.fbreader.book.Bookmark deserializeBookmark(java.lang.String) -> deserializeBookmark
    321:328:java.lang.String serialize(org.geometerplus.fbreader.book.HighlightingStyle) -> serialize
    334:340:org.geometerplus.fbreader.book.HighlightingStyle deserializeStyle(java.lang.String) -> deserializeStyle
    346:346:java.lang.String formatDate(java.util.Date) -> formatDate
    349:349:java.util.Date parseDate(java.lang.String) -> parseDate
    353:365:void appendTag(java.lang.StringBuilder,java.lang.String,boolean,java.lang.String[]) -> appendTag
    368:369:void closeTag(java.lang.StringBuilder,java.lang.String) -> closeTag
    372:378:void appendTagWithContent(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTagWithContent
    381:384:void appendTagWithContent(java.lang.StringBuilder,java.lang.String,java.lang.Object) -> appendTagWithContent
    387:402:java.lang.String escapeForXml(java.lang.String) -> escapeForXml
    406:407:void clear(java.lang.StringBuilder) -> clear
    410:410:java.lang.String string(java.lang.StringBuilder) -> string
    38:38:void access$500(java.lang.StringBuilder) -> access$500
    38:38:java.lang.String access$600(java.lang.StringBuilder) -> access$600
    38:38:java.util.Date access$700(java.lang.String) -> access$700
    344:344:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.XMLSerializer$1 -> org.geometerplus.fbreader.book.XMLSerializer$1:
    int[] $SwitchMap$org$geometerplus$fbreader$book$XMLSerializer$BookDeserializer$State -> $SwitchMap$org$geometerplus$fbreader$book$XMLSerializer$BookDeserializer$State
    int[] $SwitchMap$org$geometerplus$fbreader$book$XMLSerializer$BookQueryDeserializer$State -> $SwitchMap$org$geometerplus$fbreader$book$XMLSerializer$BookQueryDeserializer$State
    int[] $SwitchMap$org$geometerplus$fbreader$book$XMLSerializer$BookmarkDeserializer$State -> $SwitchMap$org$geometerplus$fbreader$book$XMLSerializer$BookmarkDeserializer$State
    508:887:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer -> org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer:
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State myState -> myState
    long myId -> myId
    java.lang.String myUrl -> myUrl
    java.lang.StringBuilder myTitle -> myTitle
    java.lang.StringBuilder myLanguage -> myLanguage
    java.lang.StringBuilder myEncoding -> myEncoding
    java.lang.String myScheme -> myScheme
    java.lang.StringBuilder myUid -> myUid
    java.util.ArrayList myUidList -> myUidList
    java.util.ArrayList myAuthors -> myAuthors
    java.util.ArrayList myTags -> myTags
    java.util.ArrayList myLabels -> myLabels
    java.lang.StringBuilder myAuthorSortKey -> myAuthorSortKey
    java.lang.StringBuilder myAuthorName -> myAuthorName
    java.lang.StringBuilder mySeriesTitle -> mySeriesTitle
    java.lang.StringBuilder mySeriesIndex -> mySeriesIndex
    boolean myHasBookmark -> myHasBookmark
    org.geometerplus.zlibrary.core.util.RationalNumber myProgress -> myProgress
    org.geometerplus.fbreader.book.Book myBook -> myBook
    413:445:void <init>() -> <init>
    452:452:org.geometerplus.fbreader.book.Book getBook() -> getBook
    457:475:void startDocument() -> startDocument
    479:504:void endDocument() -> endDocument
    508:572:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    576:605:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    609:641:void characters(char[],int,int) -> characters
    413:413:void <init>(org.geometerplus.fbreader.book.XMLSerializer$1) -> <init>
org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State -> org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State:
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_NOTHING -> READ_NOTHING
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_ENTRY -> READ_ENTRY
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_ID -> READ_ID
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_UID -> READ_UID
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_TITLE -> READ_TITLE
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_LANGUAGE -> READ_LANGUAGE
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_ENCODING -> READ_ENCODING
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_AUTHOR -> READ_AUTHOR
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_AUTHOR_URI -> READ_AUTHOR_URI
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_AUTHOR_NAME -> READ_AUTHOR_NAME
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_SERIES_TITLE -> READ_SERIES_TITLE
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State READ_SERIES_INDEX -> READ_SERIES_INDEX
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State[] $VALUES -> $VALUES
    414:414:org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State[] values() -> values
    414:414:org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer$State valueOf(java.lang.String) -> valueOf
    414:414:void <init>(java.lang.String,int) -> <init>
    414:426:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer -> org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer:
    java.util.LinkedList myStateStack -> myStateStack
    java.util.LinkedList myFilterStack -> myFilterStack
    org.geometerplus.fbreader.book.Filter myFilter -> myFilter
    int myLimit -> myLimit
    int myPage -> myPage
    org.geometerplus.fbreader.book.BookQuery myQuery -> myQuery
    644:656:void <init>() -> <init>
    660:660:org.geometerplus.fbreader.book.BookQuery getQuery() -> getQuery
    665:666:void startDocument() -> startDocument
    670:673:void endDocument() -> endDocument
    677:738:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    742:758:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    644:644:void <init>(org.geometerplus.fbreader.book.XMLSerializer$1) -> <init>
org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State -> org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State:
    org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State READ_QUERY -> READ_QUERY
    org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State READ_FILTER_AND -> READ_FILTER_AND
    org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State READ_FILTER_OR -> READ_FILTER_OR
    org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State READ_FILTER_SIMPLE -> READ_FILTER_SIMPLE
    org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State[] $VALUES -> $VALUES
    645:645:org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State[] values() -> values
    645:645:org.geometerplus.fbreader.book.XMLSerializer$BookQueryDeserializer$State valueOf(java.lang.String) -> valueOf
    645:645:void <init>(java.lang.String,int) -> <init>
    645:649:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer -> org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer:
    org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State myState -> myState
    org.geometerplus.fbreader.book.Bookmark myBookmark -> myBookmark
    long myId -> myId
    long myBookId -> myBookId
    java.lang.String myBookTitle -> myBookTitle
    java.lang.StringBuilder myText -> myText
    java.util.Date myCreationDate -> myCreationDate
    java.util.Date myModificationDate -> myModificationDate
    java.util.Date myAccessDate -> myAccessDate
    int myAccessCount -> myAccessCount
    java.lang.String myModelId -> myModelId
    int myStartParagraphIndex -> myStartParagraphIndex
    int myStartElementIndex -> myStartElementIndex
    int myStartCharIndex -> myStartCharIndex
    int myEndParagraphIndex -> myEndParagraphIndex
    int myEndElementIndex -> myEndElementIndex
    int myEndCharIndex -> myEndCharIndex
    boolean myIsVisible -> myIsVisible
    int myStyle -> myStyle
    812:825:void <init>() -> <init>
    841:841:org.geometerplus.fbreader.book.Bookmark getBookmark() -> getBookmark
    846:867:void startDocument() -> startDocument
    871:883:void endDocument() -> endDocument
    887:956:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    960:971:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    975:978:void characters(char[],int,int) -> characters
    812:812:void <init>(org.geometerplus.fbreader.book.XMLSerializer$1) -> <init>
org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State -> org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State:
    org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State READ_NOTHING -> READ_NOTHING
    org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State READ_BOOKMARK -> READ_BOOKMARK
    org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State READ_TEXT -> READ_TEXT
    org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State[] $VALUES -> $VALUES
    813:813:org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State[] values() -> values
    813:813:org.geometerplus.fbreader.book.XMLSerializer$BookmarkDeserializer$State valueOf(java.lang.String) -> valueOf
    813:813:void <init>(java.lang.String,int) -> <init>
    813:816:void <clinit>() -> <clinit>
org.geometerplus.fbreader.book.XMLSerializer$BookmarkQueryDeserializer -> org.geometerplus.fbreader.book.XMLSerializer$BookmarkQueryDeserializer:
    boolean myVisible -> myVisible
    int myLimit -> myLimit
    int myPage -> myPage
    org.geometerplus.fbreader.book.XMLSerializer$BookDeserializer myBookDeserializer -> myBookDeserializer
    org.geometerplus.fbreader.book.BookmarkQuery myQuery -> myQuery
    761:765:void <init>() -> <init>
    769:769:org.geometerplus.fbreader.book.BookmarkQuery getQuery() -> getQuery
    774:776:void startDocument() -> startDocument
    780:782:void endDocument() -> endDocument
    786:797:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    801:804:void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    808:809:void characters(char[],int,int) -> characters
    761:761:void <init>(org.geometerplus.fbreader.book.XMLSerializer$1) -> <init>
org.geometerplus.fbreader.book.XMLSerializer$StyleDeserializer -> org.geometerplus.fbreader.book.XMLSerializer$StyleDeserializer:
    org.geometerplus.fbreader.book.HighlightingStyle myStyle -> myStyle
    981:981:void <init>() -> <init>
    985:985:org.geometerplus.fbreader.book.HighlightingStyle getStyle() -> getStyle
    990:991:void startDocument() -> startDocument
    995:1009:void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    981:981:void <init>(org.geometerplus.fbreader.book.XMLSerializer$1) -> <init>
org.geometerplus.fbreader.bookmodel.BookModel -> org.geometerplus.fbreader.bookmodel.a:
    org.geometerplus.fbreader.book.Book Book -> a
    org.geometerplus.fbreader.bookmodel.TOCTree TOCTree -> b
    org.geometerplus.fbreader.bookmodel.BookModel$LabelResolver myResolver -> c
    32:51:org.geometerplus.fbreader.bookmodel.BookModel createModel(org.geometerplus.fbreader.book.Book) -> a
    55:69:void <init>(org.geometerplus.fbreader.book.Book) -> <init>
    org.geometerplus.zlibrary.text.model.ZLTextModel getTextModel() -> a
    org.geometerplus.zlibrary.text.model.ZLTextModel getFootnoteModel(java.lang.String) -> a
    org.geometerplus.fbreader.bookmodel.BookModel$Label getLabelInternal(java.lang.String) -> b
    82:83:void setLabelResolver(org.geometerplus.fbreader.bookmodel.BookModel$LabelResolver) -> a
    86:95:org.geometerplus.fbreader.bookmodel.BookModel$Label getLabel(java.lang.String) -> c
org.geometerplus.fbreader.bookmodel.BookModel$1 -> org.geometerplus.fbreader.bookmodel.b:
    int[] $SwitchMap$org$geometerplus$fbreader$formats$FormatPlugin$Type -> a
    38:38:void <clinit>() -> <clinit>
org.geometerplus.fbreader.bookmodel.BookModel$Label -> org.geometerplus.fbreader.bookmodel.a$a:
    java.lang.String ModelId -> a
    int ParagraphIndex -> b
    61:64:void <init>(java.lang.String,int) -> <init>
org.geometerplus.fbreader.bookmodel.BookModel$LabelResolver -> org.geometerplus.fbreader.bookmodel.a$b:
    java.util.List getCandidates(java.lang.String) -> a
org.geometerplus.fbreader.bookmodel.BookModelImpl -> org.geometerplus.fbreader.bookmodel.c:
    org.geometerplus.zlibrary.text.model.CharStorage myInternalHyperlinks -> c
    java.util.HashMap myImageMap -> d
    java.util.HashMap myFootnotes -> e
    32:37:void <init>(org.geometerplus.fbreader.book.Book) -> <init>
    41:63:org.geometerplus.fbreader.bookmodel.BookModel$Label getLabelInternal(java.lang.String) -> b
    67:68:void addImage(java.lang.String,org.geometerplus.zlibrary.core.image.ZLImage) -> a
org.geometerplus.fbreader.bookmodel.BookReader -> org.geometerplus.fbreader.bookmodel.d:
    org.geometerplus.fbreader.bookmodel.JavaBookModel Model -> a
    org.geometerplus.zlibrary.text.model.ZLTextWritableModel myCurrentTextModel -> b
    boolean myTextParagraphExists -> c
    boolean myTextParagraphIsNonEmpty -> d
    char[] myTextBuffer -> e
    int myTextBufferLength -> f
    java.lang.StringBuilder myContentsBuffer -> g
    byte[] myKindStack -> h
    int myKindStackSize -> i
    byte myHyperlinkKind -> j
    java.lang.String myHyperlinkReference -> k
    boolean myInsideTitle -> l
    boolean mySectionContainsRegularContents -> m
    org.geometerplus.fbreader.bookmodel.TOCTree myCurrentContentsTree -> n
    java.nio.charset.CharsetDecoder myByteDecoder -> o
    byte[] myUnderflowByteBuffer -> p
    int myUnderflowLength -> q
    37:234:void <init>(org.geometerplus.fbreader.bookmodel.BookModel) -> <init>
    65:66:void setByteDecoder(java.nio.charset.CharsetDecoder) -> a
    69:76:void flushTextBufferToParagraph() -> n
    79:86:void addControl(byte,boolean) -> a
    98:104:void pushKind(byte) -> a
    107:111:boolean popKind() -> a
    115:116:void beginParagraph() -> b
    119:133:void beginParagraph(byte) -> b
    136:141:void endParagraph() -> c
    144:152:void insertEndParagraph(byte) -> c
    155:156:void insertEndOfSectionParagraph() -> d
    165:169:void unsetCurrentTextModel() -> e
    172:173:void enterTitle() -> f
    176:177:void exitTitle() -> g
    180:184:void setMainTextModel() -> h
    187:191:void setFootnoteTextModel(java.lang.String) -> a
    194:195:void addData(char[]) -> a
    198:232:void addData(char[],int,int,boolean) -> a
    238:282:void addByteData(byte[],int,int) -> a
    285:285:byte hyperlinkType(byte) -> d
    290:296:void addHyperlinkControl(byte,java.lang.String) -> a
    299:307:void addHyperlinkLabel(java.lang.String) -> b
    310:311:void addHyperlinkLabel(java.lang.String,int) -> a
    314:315:void addContentsData(char[]) -> b
    318:322:void addContentsData(char[],int,int) -> a
    325:325:boolean hasContentsData() -> i
    329:330:void beginContentsParagraph(int) -> a
    333:355:void beginContentsParagraph(org.geometerplus.zlibrary.text.model.ZLTextModel,int) -> a
    358:370:void endContentsParagraph() -> j
    388:388:boolean paragraphIsOpen() -> k
    392:392:boolean paragraphIsNonEmpty() -> l
    400:401:void beginContentsParagraph() -> m
    404:405:void addImageReference(java.lang.String,boolean) -> a
    408:422:void addImageReference(java.lang.String,short,boolean) -> a
    425:426:void addImage(java.lang.String,org.geometerplus.zlibrary.core.image.ZLImage) -> a
    429:432:void addFixedHSpace(short) -> a
org.geometerplus.fbreader.bookmodel.BookReadingException -> org.geometerplus.fbreader.bookmodel.e:
    org.geometerplus.zlibrary.core.filesystem.ZLFile File -> a
    35:35:java.lang.String getResourceText(java.lang.String) -> a
    41:43:void <init>(java.lang.String,java.lang.String,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    46:48:void <init>(java.lang.String,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    56:60:void <init>(java.io.IOException,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
org.geometerplus.fbreader.bookmodel.JavaBookModel -> org.geometerplus.fbreader.bookmodel.f:
    org.geometerplus.zlibrary.text.model.ZLTextModel BookTextModel -> f
    char[] myCurrentLinkBlock -> g
    int myCurrentLinkBlockOffset -> h
    31:34:void <init>(org.geometerplus.fbreader.book.Book) -> <init>
    38:38:org.geometerplus.zlibrary.text.model.ZLTextModel getTextModel() -> a
    43:48:org.geometerplus.zlibrary.text.model.ZLTextModel getFootnoteModel(java.lang.String) -> a
    55:81:void addHyperlinkLabel(java.lang.String,org.geometerplus.zlibrary.text.model.ZLTextModel,int) -> a
    27:27:void addImage(java.lang.String,org.geometerplus.zlibrary.core.image.ZLImage) -> a
org.geometerplus.fbreader.bookmodel.NativeBookModel -> org.geometerplus.fbreader.bookmodel.g:
    org.geometerplus.zlibrary.text.model.ZLTextModel myBookTextModel -> f
    org.geometerplus.fbreader.bookmodel.TOCTree myCurrentTree -> g
    30:37:void <init>(org.geometerplus.fbreader.book.Book) -> <init>
    76:76:org.geometerplus.zlibrary.text.model.ZLTextModel getTextModel() -> a
    81:81:org.geometerplus.zlibrary.text.model.ZLTextModel getFootnoteModel(java.lang.String) -> a
    26:26:void addImage(java.lang.String,org.geometerplus.zlibrary.core.image.ZLImage) -> a
org.geometerplus.fbreader.bookmodel.TOCTree -> org.geometerplus.fbreader.bookmodel.h:
    java.lang.String myText -> a
    org.geometerplus.fbreader.bookmodel.TOCTree$Reference myReference -> b
    31:32:void <init>() -> <init>
    35:36:void <init>(org.geometerplus.fbreader.bookmodel.TOCTree) -> <init>
    39:39:java.lang.String getText() -> a
    43:48:void setText(java.lang.String) -> a
    51:51:org.geometerplus.fbreader.bookmodel.TOCTree$Reference getReference() -> b
    55:56:void setReference(org.geometerplus.zlibrary.text.model.ZLTextModel,int) -> a
org.geometerplus.fbreader.bookmodel.TOCTree$Reference -> org.geometerplus.fbreader.bookmodel.h$a:
    int ParagraphIndex -> a
    org.geometerplus.zlibrary.text.model.ZLTextModel Model -> b
    62:65:void <init>(int,org.geometerplus.zlibrary.text.model.ZLTextModel) -> <init>
org.geometerplus.fbreader.fbreader.BookmarkHighlighting -> org.geometerplus.fbreader.fbreader.a:
    org.geometerplus.fbreader.book.IBookCollection Collection -> a
    org.geometerplus.fbreader.book.Bookmark Bookmark -> b
    33:33:org.geometerplus.zlibrary.text.view.ZLTextPosition startPosition(org.geometerplus.fbreader.book.Bookmark) -> a
    37:42:org.geometerplus.zlibrary.text.view.ZLTextPosition endPosition(org.geometerplus.fbreader.book.Bookmark) -> b
    46:49:void <init>(org.geometerplus.zlibrary.text.view.ZLTextView,org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Bookmark) -> <init>
    53:54:org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> a
org.geometerplus.fbreader.fbreader.CancelMenuHelper -> org.geometerplus.fbreader.fbreader.b:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowLibraryItemOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowNetworkLibraryItemOption -> b
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowPreviousBookItemOption -> c
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowPositionItemsOption -> d
    29:36:void <init>() -> <init>
org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType -> org.geometerplus.fbreader.fbreader.b$a:
    org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType library -> a
    org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType networkLibrary -> b
    org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType previousBook -> c
    org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType returnTo -> d
    org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType close -> e
    org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType[] $VALUES -> f
    39:39:org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType[] values() -> values
    39:39:org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType valueOf(java.lang.String) -> valueOf
    39:39:void <init>(java.lang.String,int) -> <init>
    39:44:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.ChangeFontSizeAction -> org.geometerplus.fbreader.fbreader.c:
    int myDelta -> a
    29:31:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp,int) -> <init>
    36:40:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.ClearFindResultsAction -> org.geometerplus.fbreader.fbreader.d:
    24:25:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    29:30:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.ColorProfile -> org.geometerplus.fbreader.fbreader.e:
    java.util.ArrayList ourNames -> j
    java.util.HashMap ourProfiles -> k
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption WallpaperOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption BackgroundOption -> b
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption SelectionBackgroundOption -> c
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption SelectionForegroundOption -> d
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption HighlightingOption -> e
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption RegularTextOption -> f
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption HyperlinkTextOption -> g
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption VisitedHyperlinkTextOption -> h
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption FooterFillOption -> i
    50:55:org.geometerplus.fbreader.fbreader.ColorProfile get(java.lang.String) -> a
    81:81:org.geometerplus.zlibrary.ui.android.options.ZLColorOption createOption(java.lang.String,java.lang.String,int,int,int) -> a
    84:124:void <init>(java.lang.String) -> <init>
    33:34:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.ExitAction -> org.geometerplus.fbreader.fbreader.f:
    24:25:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    29:34:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.FBAction -> org.geometerplus.fbreader.fbreader.g:
    org.geometerplus.fbreader.fbreader.FBReaderApp Reader -> b
    27:29:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
org.geometerplus.fbreader.fbreader.FBReaderApp -> org.geometerplus.fbreader.fbreader.h:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption AllowScreenBrightnessAdjustmentOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption TextSearchPatternOption -> b
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption UseSeparateBindingsOption -> c
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption EnableDoubleTapOption -> d
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption NavigateAllWordsOption -> e
    org.geometerplus.zlibrary.ui.android.options.ZLEnumOption WordTappingActionOption -> f
    org.geometerplus.zlibrary.ui.android.options.ZLColorOption ImageViewBackgroundOption -> g
    org.geometerplus.zlibrary.ui.android.options.ZLEnumOption FitImagesToScreenOption -> h
    org.geometerplus.zlibrary.ui.android.options.ZLEnumOption ImageTappingActionOption -> i
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption TwoColumnViewOption -> j
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption LeftMarginOption -> k
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption RightMarginOption -> l
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption TopMarginOption -> m
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption BottomMarginOption -> n
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption SpaceBetweenColumnsOption -> o
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption FooterHeightOption -> p
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption ScrollbarTypeOption -> q
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption ColorProfileOption -> r
    org.geometerplus.fbreader.fbreader.options.PageTurningOptions PageTurningOptions -> s
    org.geometerplus.fbreader.fbreader.options.FooterOptions FooterOptions -> t
    org.geometerplus.zlibrary.core.application.ZLKeyBindings myBindings -> z
    org.geometerplus.fbreader.fbreader.FBView BookTextView -> u
    org.geometerplus.fbreader.fbreader.FBView FootnoteView -> v
    java.lang.String myFootnoteModelId -> A
    org.geometerplus.fbreader.bookmodel.BookModel Model -> w
    org.geometerplus.fbreader.book.Book ExternalBook -> x
    org.geometerplus.zlibrary.text.view.ZLTextPosition myJumpEndPosition -> B
    java.util.Date myJumpTimeStamp -> C
    org.geometerplus.fbreader.book.IBookCollection Collection -> y
    org.geometerplus.fbreader.fbreader.ColorProfile myColorProfile -> D
    58:188:void <init>(org.geometerplus.fbreader.book.IBookCollection) -> <init>
    191:204:void openBook(org.geometerplus.fbreader.book.Book,org.geometerplus.fbreader.book.Bookmark,java.lang.Runnable) -> a
    207:214:void reloadBook() -> a
    219:222:org.geometerplus.fbreader.fbreader.ColorProfile getColorProfile() -> b
    226:226:java.lang.String getColorProfileName() -> c
    230:232:void setColorProfileName(java.lang.String) -> a
    235:235:org.geometerplus.zlibrary.core.application.ZLKeyBindings keyBindings() -> d
    239:239:org.geometerplus.fbreader.fbreader.FBView getTextView() -> e
    243:264:void tryOpenFootnote(java.lang.String) -> b
    267:269:void clearTextCaches() -> f
    272:286:org.geometerplus.fbreader.book.Bookmark addSelectionBookmark() -> g
    290:305:void setBookmarkHighlightings(org.geometerplus.zlibrary.text.view.ZLTextView,java.lang.String) -> a
    308:314:void setFootnoteModel(java.lang.String) -> k
    317:377:void openBookInternal(org.geometerplus.fbreader.book.Book,org.geometerplus.fbreader.book.Bookmark,boolean) -> a
    414:418:java.util.List invisibleBookmarks() -> E
    423:450:boolean jumpBack() -> h
    454:477:void gotoBookmark(org.geometerplus.fbreader.book.Bookmark,boolean) -> a
    480:481:void showBookTextView() -> i
    484:485:void onWindowClosing() -> j
    488:493:void storePosition() -> k
    500:518:void runCancelAction(org.geometerplus.fbreader.fbreader.CancelMenuHelper$ActionType,org.geometerplus.fbreader.book.Bookmark) -> a
    521:533:void updateInvisibleBookmarksList(org.geometerplus.fbreader.book.Bookmark) -> a
    536:545:void addInvisibleBookmark(org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> a
    548:551:void addInvisibleBookmark() -> l
    554:563:org.geometerplus.fbreader.book.Bookmark createBookmark(int,boolean) -> a
    571:591:org.geometerplus.fbreader.bookmodel.TOCTree getCurrentTOCElement() -> m
    595:611:void onBookUpdated(org.geometerplus.fbreader.book.Book) -> a
    614:615:org.geometerplus.fbreader.book.Book getCurrentBook() -> n
    57:57:void access$000(org.geometerplus.fbreader.fbreader.FBReaderApp,org.geometerplus.zlibrary.text.view.ZLTextView,java.lang.String) -> a
    57:57:java.lang.String access$100(org.geometerplus.fbreader.fbreader.FBReaderApp) -> a
org.geometerplus.fbreader.fbreader.FBReaderApp$1 -> org.geometerplus.fbreader.fbreader.i:
    org.geometerplus.fbreader.fbreader.FBReaderApp this$0 -> a
    135:135:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    137:153:void onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> onBookEvent
    156:156:void onBuildEvent(org.geometerplus.fbreader.book.IBookCollection$Status) -> onBuildEvent
org.geometerplus.fbreader.fbreader.FBReaderApp$2 -> org.geometerplus.fbreader.fbreader.j:
    org.geometerplus.fbreader.book.Book val$book -> a
    org.geometerplus.fbreader.book.Bookmark val$bookmark -> b
    org.geometerplus.fbreader.fbreader.FBReaderApp this$0 -> c
    192:192:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp,org.geometerplus.fbreader.book.Book,org.geometerplus.fbreader.book.Bookmark) -> <init>
    195:201:void run() -> run
org.geometerplus.fbreader.fbreader.FBReaderApp$3 -> org.geometerplus.fbreader.fbreader.k:
    org.geometerplus.fbreader.fbreader.FBReaderApp this$0 -> a
    208:208:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    210:211:void run() -> run
org.geometerplus.fbreader.fbreader.FBReaderApp$4 -> org.geometerplus.fbreader.fbreader.l:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    int[] $SwitchMap$org$geometerplus$fbreader$fbreader$CancelMenuHelper$ActionType -> b
    137:500:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.FBReaderApp$ImageTappingAction -> org.geometerplus.fbreader.fbreader.h$a:
    org.geometerplus.fbreader.fbreader.FBReaderApp$ImageTappingAction doNothing -> a
    org.geometerplus.fbreader.fbreader.FBReaderApp$ImageTappingAction selectImage -> b
    org.geometerplus.fbreader.fbreader.FBReaderApp$ImageTappingAction openImageView -> c
    org.geometerplus.fbreader.fbreader.FBReaderApp$ImageTappingAction[] $VALUES -> d
    81:81:org.geometerplus.fbreader.fbreader.FBReaderApp$ImageTappingAction[] values() -> values
    81:81:org.geometerplus.fbreader.fbreader.FBReaderApp$ImageTappingAction valueOf(java.lang.String) -> valueOf
    81:81:void <init>(java.lang.String,int) -> <init>
    81:82:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction -> org.geometerplus.fbreader.fbreader.h$b:
    org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction doNothing -> a
    org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction selectSingleWord -> b
    org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction startSelecting -> c
    org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction openDictionary -> d
    org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction[] $VALUES -> e
    71:71:org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction[] values() -> values
    71:71:org.geometerplus.fbreader.fbreader.FBReaderApp$WordTappingAction valueOf(java.lang.String) -> valueOf
    71:71:void <init>(java.lang.String,int) -> <init>
    71:72:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.FBView -> org.geometerplus.fbreader.fbreader.m:
    org.geometerplus.fbreader.fbreader.FBReaderApp myReader -> b
    int myStartY -> c
    boolean myIsBrightnessAdjustmentInProgress -> d
    int myStartBrightness -> e
    org.geometerplus.fbreader.fbreader.TapZoneMap myZoneMap -> f
    org.geometerplus.fbreader.fbreader.FBView$Footer myFooter -> g
    65:67:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    70:74:void setModel(org.geometerplus.zlibrary.text.model.ZLTextModel) -> a
    83:91:org.geometerplus.fbreader.fbreader.TapZoneMap getZoneMap() -> ah
    98:159:boolean onFingerSingleTap(int,int) -> a
    164:164:boolean isDoubleTapSupported() -> a
    169:175:boolean onFingerDoubleTap(int,int) -> b
    179:200:boolean onFingerPress(int,int) -> c
    204:206:boolean isFlickScrollingEnabled() -> ai
    211:220:void startManualScrolling(int,int) -> l
    223:257:boolean onFingerMove(int,int) -> d
    261:282:boolean onFingerRelease(int,int) -> e
    289:380:boolean onFingerLongPress(int,int) -> f
    384:414:boolean onFingerMoveAfterLongPress(int,int) -> g
    418:445:boolean onFingerReleaseAfterLongPress(int,int) -> h
    449:458:boolean onTrackballRotated(int,int) -> i
    463:463:org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting getImageFitting() -> b
    468:468:int getLeftMargin() -> c
    473:473:int getRightMargin() -> d
    478:478:int getTopMargin() -> e
    483:483:int getBottomMargin() -> f
    488:488:int getSpaceBetweenColumns() -> g
    493:494:boolean twoColumnView() -> h
    499:509:org.geometerplus.zlibrary.core.filesystem.ZLFile getWallpaperFile() -> i
    514:514:org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode getWallpaperMode() -> j
    520:520:org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> k
    525:525:org.geometerplus.zlibrary.core.util.ZLColor getSelectionBackgroundColor() -> l
    530:530:org.geometerplus.zlibrary.core.util.ZLColor getSelectionForegroundColor() -> m
    535:545:org.geometerplus.zlibrary.core.util.ZLColor getTextColor(org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> a
    552:552:org.geometerplus.zlibrary.core.util.ZLColor getHighlightingBackgroundColor() -> n
    729:740:org.geometerplus.fbreader.fbreader.FBView$Footer getFooterArea() -> o
    748:754:void releaseSelectionCursor() -> p
    757:762:java.lang.String getSelectedText() -> q
    766:771:int getCountOfSelectedWords() -> r
    778:778:int scrollbarType() -> s
    783:783:org.geometerplus.zlibrary.core.view.ZLView$Animation getAnimationType() -> t
    61:61:org.geometerplus.zlibrary.core.view.ZLView$FooterArea getFooterArea() -> u
    61:61:org.geometerplus.fbreader.fbreader.FBReaderApp access$000(org.geometerplus.fbreader.fbreader.FBView) -> a
org.geometerplus.fbreader.fbreader.FBView$1 -> org.geometerplus.fbreader.fbreader.n:
    int[] $SwitchMap$org$geometerplus$fbreader$fbreader$FBReaderApp$WordTappingAction -> a
    318:318:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.FBView$Footer -> org.geometerplus.fbreader.fbreader.m$a:
    java.lang.Runnable UpdateTask -> b
    java.util.ArrayList myTOCMarks -> c
    int MAX_TOC_MARKS_NUMBER -> d
    org.geometerplus.fbreader.fbreader.FBView this$0 -> a
    556:573:void <init>(org.geometerplus.fbreader.fbreader.FBView) -> <init>
    566:566:int getHeight() -> a
    570:571:void resetTOCMarks() -> b
    604:707:void paint(org.geometerplus.zlibrary.core.view.ZLPaintContext) -> a
    556:556:void <init>(org.geometerplus.fbreader.fbreader.FBView,org.geometerplus.fbreader.fbreader.FBView$1) -> <init>
    556:556:java.lang.Runnable access$200(org.geometerplus.fbreader.fbreader.FBView$Footer) -> a
org.geometerplus.fbreader.fbreader.FBView$Footer$1 -> org.geometerplus.fbreader.fbreader.o:
    org.geometerplus.fbreader.fbreader.FBView$Footer this$1 -> a
    557:557:void <init>(org.geometerplus.fbreader.fbreader.FBView$Footer) -> <init>
    559:560:void run() -> run
org.geometerplus.fbreader.fbreader.FindNextAction -> org.geometerplus.fbreader.fbreader.p:
    24:25:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    29:30:boolean isEnabled() -> a
    35:36:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.FindPreviousAction -> org.geometerplus.fbreader.fbreader.q:
    26:27:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    31:32:boolean isEnabled() -> a
    37:38:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.MoveCursorAction -> org.geometerplus.fbreader.fbreader.r:
    org.geometerplus.zlibrary.core.view.ZLView$Direction myDirection -> a
    29:31:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp,org.geometerplus.zlibrary.core.view.ZLView$Direction) -> <init>
    35:57:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.MoveCursorAction$1 -> org.geometerplus.fbreader.fbreader.s:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$Direction -> a
    45:45:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.SelectionClearAction -> org.geometerplus.fbreader.fbreader.t:
    24:25:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp) -> <init>
    29:30:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.SwitchProfileAction -> org.geometerplus.fbreader.fbreader.u:
    java.lang.String myProfileName -> a
    26:28:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp,java.lang.String) -> <init>
    32:32:boolean isVisible() -> b
    37:40:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.TapZoneMap -> org.geometerplus.fbreader.fbreader.v:
    java.util.List ourPredefinedMaps -> b
    org.geometerplus.zlibrary.ui.android.options.ZLStringListOption ourMapsOption -> c
    java.util.Map ourMaps -> d
    java.lang.String Name -> a
    java.lang.String myOptionGroupName -> e
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption myHeight -> f
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption myWidth -> g
    java.util.HashMap myZoneMap -> h
    java.util.HashMap myZoneMap2 -> i
    45:45:java.util.List zoneMapNames() -> a
    49:54:org.geometerplus.fbreader.fbreader.TapZoneMap zoneMap(java.lang.String) -> a
    58:68:org.geometerplus.fbreader.fbreader.TapZoneMap createZoneMap(java.lang.String,int,int) -> a
    72:81:void deleteZoneMap(java.lang.String) -> b
    93:105:void <init>(java.lang.String) -> <init>
    108:108:boolean isCustom() -> b
    112:112:int getHeight() -> c
    116:116:int getWidth() -> d
    120:125:java.lang.String getActionByCoordinates(int,int,int,int,org.geometerplus.fbreader.fbreader.TapZoneMap$Tap) -> a
    129:130:java.lang.String getActionByZone(int,int,org.geometerplus.fbreader.fbreader.TapZoneMap$Tap) -> a
    134:145:org.geometerplus.zlibrary.ui.android.options.ZLStringOption getOptionByZone(org.geometerplus.fbreader.fbreader.TapZoneMap$Zone,org.geometerplus.fbreader.fbreader.TapZoneMap$Tap) -> a
    150:150:org.geometerplus.zlibrary.ui.android.options.ZLStringOption createOptionForZone(org.geometerplus.fbreader.fbreader.TapZoneMap$Zone,boolean,java.lang.String) -> a
    158:166:void setActionForZone(int,int,boolean,java.lang.String) -> a
    31:31:org.geometerplus.zlibrary.ui.android.options.ZLStringOption access$100(org.geometerplus.fbreader.fbreader.TapZoneMap,org.geometerplus.fbreader.fbreader.TapZoneMap$Zone,boolean,java.lang.String) -> a
    31:31:java.util.HashMap access$200(org.geometerplus.fbreader.fbreader.TapZoneMap) -> a
    31:31:java.util.HashMap access$300(org.geometerplus.fbreader.fbreader.TapZoneMap) -> b
    31:31:org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption access$400(org.geometerplus.fbreader.fbreader.TapZoneMap) -> c
    31:31:org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption access$500(org.geometerplus.fbreader.fbreader.TapZoneMap) -> d
    32:42:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.TapZoneMap$1 -> org.geometerplus.fbreader.fbreader.w:
    int[] $SwitchMap$org$geometerplus$fbreader$fbreader$TapZoneMap$Tap -> a
    134:134:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.TapZoneMap$Reader -> org.geometerplus.fbreader.fbreader.v$a:
    org.geometerplus.fbreader.fbreader.TapZoneMap this$0 -> a
    203:203:void <init>(org.geometerplus.fbreader.fbreader.TapZoneMap) -> <init>
    207:232:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    203:203:void <init>(org.geometerplus.fbreader.fbreader.TapZoneMap,org.geometerplus.fbreader.fbreader.TapZoneMap$1) -> <init>
org.geometerplus.fbreader.fbreader.TapZoneMap$Tap -> org.geometerplus.fbreader.fbreader.v$b:
    org.geometerplus.fbreader.fbreader.TapZoneMap$Tap singleTap -> a
    org.geometerplus.fbreader.fbreader.TapZoneMap$Tap singleNotDoubleTap -> b
    org.geometerplus.fbreader.fbreader.TapZoneMap$Tap doubleTap -> c
    org.geometerplus.fbreader.fbreader.TapZoneMap$Tap[] $VALUES -> d
    83:83:org.geometerplus.fbreader.fbreader.TapZoneMap$Tap[] values() -> values
    83:83:org.geometerplus.fbreader.fbreader.TapZoneMap$Tap valueOf(java.lang.String) -> valueOf
    83:83:void <init>(java.lang.String,int) -> <init>
    83:86:void <clinit>() -> <clinit>
org.geometerplus.fbreader.fbreader.TapZoneMap$Zone -> org.geometerplus.fbreader.fbreader.v$c:
    int HIndex -> a
    int VIndex -> b
    172:175:void <init>(int,int) -> <init>
    185:194:boolean equals(java.lang.Object) -> equals
    199:199:int hashCode() -> hashCode
org.geometerplus.fbreader.fbreader.TextBuildTraverser -> org.geometerplus.fbreader.fbreader.x:
    java.lang.StringBuilder myBuffer -> a
    25:29:void <init>(org.geometerplus.zlibrary.text.view.ZLTextView) -> <init>
    33:34:void processWord(org.geometerplus.zlibrary.text.view.ZLTextWord) -> a
    43:44:void processSpace() -> a
    48:49:void processEndOfParagraph() -> b
    52:52:java.lang.String getText() -> c
org.geometerplus.fbreader.fbreader.TurnPageAction -> org.geometerplus.fbreader.fbreader.y:
    boolean myForward -> a
    33:35:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp,boolean) -> <init>
    39:41:boolean isEnabled() -> a
    48:67:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.VolumeKeyTurnPageAction -> org.geometerplus.fbreader.fbreader.z:
    boolean myForward -> a
    28:30:void <init>(org.geometerplus.fbreader.fbreader.FBReaderApp,boolean) -> <init>
    34:41:void run(java.lang.Object[]) -> a
org.geometerplus.fbreader.fbreader.WallpapersUtil -> org.geometerplus.fbreader.fbreader.aa:
    31:31:java.util.List predefinedWallpaperFiles() -> a
    35:39:java.util.List externalWallpaperFiles() -> b
org.geometerplus.fbreader.fbreader.WordCountTraverser -> org.geometerplus.fbreader.fbreader.ab:
    int myCount -> a
    28:29:void <init>(org.geometerplus.zlibrary.text.view.ZLTextView) -> <init>
    33:34:void processWord(org.geometerplus.zlibrary.text.view.ZLTextWord) -> a
    44:44:void processSpace() -> a
    49:49:void processEndOfParagraph() -> b
    52:52:int getCount() -> c
org.geometerplus.fbreader.fbreader.options.FooterOptions -> org.geometerplus.fbreader.fbreader.options.a:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowTOCMarks -> a
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowClock -> b
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowBattery -> c
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowProgress -> d
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption Font -> e
    32:38:void <init>() -> <init>
org.geometerplus.fbreader.fbreader.options.PageTurningOptions -> org.geometerplus.fbreader.fbreader.options.b:
    org.geometerplus.zlibrary.ui.android.options.ZLEnumOption FingerScrolling -> a
    org.geometerplus.zlibrary.ui.android.options.ZLEnumOption Animation -> b
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption AnimationSpeed -> c
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption Horizontal -> d
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption TapZoneMap -> e
    28:42:void <init>() -> <init>
org.geometerplus.fbreader.fbreader.options.PageTurningOptions$FingerScrollingType -> org.geometerplus.fbreader.fbreader.options.b$a:
    org.geometerplus.fbreader.fbreader.options.PageTurningOptions$FingerScrollingType byTap -> a
    org.geometerplus.fbreader.fbreader.options.PageTurningOptions$FingerScrollingType byFlick -> b
    org.geometerplus.fbreader.fbreader.options.PageTurningOptions$FingerScrollingType byTapAndFlick -> c
    org.geometerplus.fbreader.fbreader.options.PageTurningOptions$FingerScrollingType[] $VALUES -> d
    29:29:org.geometerplus.fbreader.fbreader.options.PageTurningOptions$FingerScrollingType[] values() -> values
    29:29:org.geometerplus.fbreader.fbreader.options.PageTurningOptions$FingerScrollingType valueOf(java.lang.String) -> valueOf
    29:29:void <init>(java.lang.String,int) -> <init>
    29:30:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.FormatPlugin -> org.geometerplus.fbreader.formats.a:
    java.lang.String myFileType -> a
    36:38:void <init>(java.lang.String) -> <init>
    41:41:java.lang.String supportedFileType() -> a
    45:45:org.geometerplus.zlibrary.core.filesystem.ZLFile realBookFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    void readMetaInfo(org.geometerplus.fbreader.book.Book) -> a
    void readUids(org.geometerplus.fbreader.book.Book) -> b
    void readModel(org.geometerplus.fbreader.bookmodel.BookModel,java.lang.String,java.lang.String) -> a
    void detectLanguageAndEncoding(org.geometerplus.fbreader.book.Book) -> c
    org.geometerplus.zlibrary.core.image.ZLImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    java.lang.String readAnnotation(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
    org.geometerplus.fbreader.formats.FormatPlugin$Type type() -> b
    org.geometerplus.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> c
org.geometerplus.fbreader.formats.FormatPlugin$Type -> org.geometerplus.fbreader.formats.a$a:
    org.geometerplus.fbreader.formats.FormatPlugin$Type ANY -> a
    org.geometerplus.fbreader.formats.FormatPlugin$Type JAVA -> b
    org.geometerplus.fbreader.formats.FormatPlugin$Type NATIVE -> c
    org.geometerplus.fbreader.formats.FormatPlugin$Type EXTERNAL -> d
    org.geometerplus.fbreader.formats.FormatPlugin$Type NONE -> e
    org.geometerplus.fbreader.formats.FormatPlugin$Type[] $VALUES -> f
    76:76:org.geometerplus.fbreader.formats.FormatPlugin$Type[] values() -> values
    76:76:org.geometerplus.fbreader.formats.FormatPlugin$Type valueOf(java.lang.String) -> valueOf
    76:76:void <init>(java.lang.String,int) -> <init>
    76:81:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.JavaFormatPlugin -> org.geometerplus.fbreader.formats.b:
    29:30:void <init>(java.lang.String) -> <init>
    34:34:org.geometerplus.fbreader.formats.FormatPlugin$Type type() -> b
org.geometerplus.fbreader.formats.NativeFormatPlugin -> org.geometerplus.fbreader.formats.NativeFormatPlugin:
    56:59:void readMetaInfo(org.geometerplus.fbreader.book.Book) -> a
    boolean readMetaInfoNative(org.geometerplus.fbreader.book.Book) -> readMetaInfoNative
    64:68:void readUids(org.geometerplus.fbreader.book.Book) -> b
    boolean readUidsNative(org.geometerplus.fbreader.book.Book) -> readUidsNative
    74:75:void detectLanguageAndEncoding(org.geometerplus.fbreader.book.Book) -> c
    void detectLanguageAndEncodingNative(org.geometerplus.fbreader.book.Book) -> detectLanguageAndEncodingNative
    90:90:org.geometerplus.zlibrary.core.image.ZLImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    void readCoverInternal(org.geometerplus.zlibrary.core.filesystem.ZLFile,org.geometerplus.zlibrary.core.image.ZLImage[]) -> readCoverInternal
    114:118:java.lang.String readAnnotation(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
    123:123:org.geometerplus.fbreader.formats.FormatPlugin$Type type() -> b
    128:128:org.geometerplus.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> c
    133:133:java.lang.String toString() -> toString
    143:147:void readModel(org.geometerplus.fbreader.bookmodel.BookModel,java.lang.String,java.lang.String) -> a
    boolean readModelNative(org.geometerplus.fbreader.bookmodel.BookModel,java.lang.String,java.lang.String) -> readModelNative
org.geometerplus.fbreader.formats.NativeFormatPlugin$1 -> org.geometerplus.fbreader.formats.c:
    org.geometerplus.zlibrary.core.filesystem.ZLFile val$file -> a
    org.geometerplus.fbreader.formats.NativeFormatPlugin this$0 -> b
    90:90:void <init>(org.geometerplus.fbreader.formats.NativeFormatPlugin,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    93:93:int sourceType() -> a
    98:98:java.lang.String getId() -> b
    103:105:org.geometerplus.zlibrary.core.image.ZLSingleImage getRealImage() -> c
org.geometerplus.fbreader.formats.PluginCollection -> org.geometerplus.fbreader.formats.PluginCollection:
    org.geometerplus.fbreader.formats.PluginCollection ourInstance -> a
    java.util.Map myPlugins -> b
    44:53:org.geometerplus.fbreader.formats.PluginCollection Instance() -> a
    40:66:void <init>() -> <init>
    69:76:void addPlugin(org.geometerplus.fbreader.formats.FormatPlugin) -> a
    79:79:org.geometerplus.fbreader.formats.FormatPlugin getPlugin(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    83:85:org.geometerplus.fbreader.formats.FormatPlugin getPlugin(org.geometerplus.zlibrary.core.filesystem.ZLFile,org.geometerplus.fbreader.formats.FormatPlugin$Type) -> a
    89:115:org.geometerplus.fbreader.formats.FormatPlugin getPlugin(org.geometerplus.zlibrary.core.filetypes.FileType,org.geometerplus.fbreader.formats.FormatPlugin$Type) -> a
    org.geometerplus.fbreader.formats.NativeFormatPlugin[] nativePlugins() -> nativePlugins
    void free() -> free
    123:125:void finalize() -> finalize
    35:36:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.fb2.Base64EncodedImage -> org.geometerplus.fbreader.formats.fb2.a:
    int ourCounter -> a
    java.lang.String myDirName -> b
    int myFileNumber -> c
    java.lang.String myNamePostfix -> d
    java.io.OutputStreamWriter myStreamWriter -> e
    33:34:void resetCounter() -> a
    43:52:void <init>(org.geometerplus.zlibrary.core.util.MimeType,java.lang.String) -> <init>
    56:56:java.lang.String encodedFileName() -> b
    61:61:java.lang.String decodedFileName() -> c
    65:71:void addData(char[],int,int) -> a
    75:80:void close() -> d
org.geometerplus.fbreader.formats.fb2.FB2AnnotationReader -> org.geometerplus.fbreader.formats.fb2.b:
    int myReadState -> a
    java.lang.StringBuilder myBuffer -> b
    31:35:void <init>() -> <init>
    39:39:boolean dontCacheAttributeValues() -> a
    43:54:java.lang.String readAnnotation(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    59:72:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    77:91:boolean endElementHandler(java.lang.String) -> a
    96:99:void characterDataHandler(char[],int,int) -> a
    103:106:boolean readDocument(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
org.geometerplus.fbreader.formats.fb2.FB2CoverImage -> org.geometerplus.fbreader.formats.fb2.c:
    org.geometerplus.zlibrary.core.filesystem.ZLFile myFile -> a
    32:34:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    38:38:org.geometerplus.zlibrary.core.image.ZLSingleImage getRealImage() -> c
    43:43:int sourceType() -> a
    48:48:java.lang.String getId() -> b
org.geometerplus.fbreader.formats.fb2.FB2CoverImage$1 -> org.geometerplus.fbreader.formats.fb2.d:
org.geometerplus.fbreader.formats.fb2.FB2CoverImage$BackgroundReader -> org.geometerplus.fbreader.formats.fb2.c$a:
    boolean myReadCoverPage -> a
    java.lang.String myImageReference -> b
    org.geometerplus.fbreader.formats.fb2.Base64EncodedImage myImage -> c
    51:51:void <init>() -> <init>
    57:60:org.geometerplus.fbreader.formats.fb2.Base64EncodedImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    65:65:boolean processNamespaces() -> b
    70:93:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    98:114:boolean endElementHandler(java.lang.String) -> a
    119:122:void characterDataHandler(char[],int,int) -> a
    51:51:void <init>(org.geometerplus.fbreader.formats.fb2.FB2CoverImage$1) -> <init>
org.geometerplus.fbreader.formats.fb2.FB2CoverReader -> org.geometerplus.fbreader.formats.fb2.e:
    24:24:void <init>() -> <init>
    26:26:org.geometerplus.fbreader.formats.fb2.FB2CoverImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
org.geometerplus.fbreader.formats.fb2.FB2MetaInfoReader -> org.geometerplus.fbreader.formats.fb2.f:
    org.geometerplus.fbreader.book.Book myBook -> a
    int myReadState -> b
    java.lang.String[] myAuthorNames -> c
    java.lang.StringBuilder myBuffer -> d
    43:52:void <init>(org.geometerplus.fbreader.book.Book) -> <init>
    56:56:boolean dontCacheAttributeValues() -> a
    60:70:void readMetaInfo() -> c
    74:127:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    132:204:boolean endElementHandler(java.lang.String) -> a
    209:225:void characterDataHandler(char[],int,int) -> a
org.geometerplus.fbreader.formats.fb2.FB2Plugin -> org.geometerplus.fbreader.formats.fb2.g:
    34:35:void <init>() -> <init>
    39:43:org.geometerplus.zlibrary.core.filesystem.ZLFile realBookFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    48:49:void readMetaInfo(org.geometerplus.fbreader.book.Book) -> a
    54:54:void readUids(org.geometerplus.fbreader.book.Book) -> b
    63:63:org.geometerplus.zlibrary.core.image.ZLImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    68:68:java.lang.String readAnnotation(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
    73:73:org.geometerplus.zlibrary.core.encodings.AutoEncodingCollection supportedEncodings() -> d
    78:79:void detectLanguageAndEncoding(org.geometerplus.fbreader.book.Book) -> c
    90:91:void readModel(org.geometerplus.fbreader.bookmodel.BookModel,java.lang.String,java.lang.String) -> a
    32:32:org.geometerplus.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> c
org.geometerplus.fbreader.formats.fb2.FB2Reader -> org.geometerplus.fbreader.formats.fb2.h:
    org.geometerplus.fbreader.bookmodel.BookReader myBookReader -> a
    boolean myInsidePoem -> b
    boolean myInsideTitle -> c
    int myBodyCounter -> d
    boolean myReadMainText -> e
    int mySectionDepth -> f
    boolean mySectionStarted -> g
    byte myHyperlinkType -> h
    org.geometerplus.fbreader.formats.fb2.Base64EncodedImage myCurrentImage -> i
    boolean myInsideCoverpage -> j
    java.lang.String myCoverImageReference -> k
    int myParagraphsBeforeBodyNumber -> l
    char[] SPACE -> m
    byte[] myTagStack -> n
    int myTagStackSize -> o
    int myFootnoteIdDepth -> p
    38:61:void <init>(org.geometerplus.fbreader.bookmodel.BookModel) -> <init>
    64:71:void readBook() -> c
    75:75:boolean dontCacheAttributeValues() -> a
    80:89:void characterDataHandler(char[],int,int) -> a
    93:102:void characterDataHandlerFinal(char[],int,int) -> b
    106:217:boolean endElementHandler(java.lang.String) -> a
    222:417:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    422:422:boolean processNamespaces() -> b
    427:428:void collectExternalEntities(java.util.HashMap) -> a
    432:432:java.util.List externalDTDs() -> d
org.geometerplus.fbreader.formats.fb2.FB2Tag -> org.geometerplus.fbreader.formats.fb2.i:
    java.util.HashMap ourTagByName -> a
    java.lang.Byte ourUnknownTag -> b
    112:123:byte getTagByName(java.lang.String) -> a
    66:109:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.fb2.FB2TagManager -> org.geometerplus.fbreader.formats.fb2.j:
    java.util.HashMap ourMap -> a
    33:38:java.util.ArrayList humanReadableTags(java.lang.String) -> a
    29:29:java.util.HashMap access$000() -> a
    30:30:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.fb2.FB2TagManager$FB2TagInfoReader -> org.geometerplus.fbreader.formats.fb2.j$a:
    java.lang.String myLanguage -> a
    org.geometerplus.fbreader.book.Tag myCategoryTag -> b
    org.geometerplus.fbreader.book.Tag mySubCategoryTag -> c
    java.util.ArrayList myGenreIds -> d
    48:53:void <init>() -> <init>
    57:71:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    76:94:boolean endElementHandler(java.lang.String) -> a
org.geometerplus.fbreader.formats.fb2.FB2Util -> org.geometerplus.fbreader.formats.fb2.k:
    28:46:org.geometerplus.zlibrary.core.filesystem.ZLFile getRealFB2File(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
org.geometerplus.fbreader.formats.html.HtmlReader -> org.geometerplus.fbreader.formats.html.a:
    byte[] myStyleTable -> c
    java.nio.charset.CharsetDecoder myAttributeDecoder -> b
    boolean myInsideTitle -> d
    boolean mySectionStarted -> e
    byte myHyperlinkType -> f
    char[] SPACE -> g
    java.lang.String myHrefAttribute -> h
    boolean myOrderedListIsStarted -> i
    int myOLCounter -> j
    byte[] myControls -> k
    byte myControlsNumber -> l
    java.util.HashMap myEntityMap -> m
    37:80:void <init>(org.geometerplus.fbreader.bookmodel.BookModel) -> <init>
    83:85:java.nio.charset.CharsetDecoder createDecoder() -> n
    89:89:boolean readBook() -> o
    93:93:java.io.InputStream getInputStream() -> p
    97:97:void startDocumentHandler() -> q
    100:101:void endDocumentHandler() -> r
    104:105:void byteDataHandler(byte[],int,int) -> b
    109:132:void entityDataHandler(java.lang.String) -> c
    135:140:void openControl(byte) -> d
    143:163:void closeControl(byte) -> e
    166:168:void startNewParagraph() -> s
    171:172:void endElementHandler(java.lang.String) -> d
    175:236:void endElementHandler(byte) -> c
    239:240:void startElementHandler(java.lang.String,int,org.geometerplus.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    243:361:void startElementHandler(byte,int,org.geometerplus.zlibrary.core.html.ZLHtmlAttributeMap) -> a
org.geometerplus.fbreader.formats.html.HtmlTag -> org.geometerplus.fbreader.formats.html.b:
    java.util.HashMap ourTagByName -> a
    java.lang.Byte ourUnknownTag -> b
    123:134:byte getTagByName(java.lang.String) -> a
    74:120:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.oeb.ContainerFileReader -> org.geometerplus.fbreader.formats.oeb.a:
    java.lang.String myRootPath -> a
    24:24:void <init>() -> <init>
    28:28:java.lang.String getRootPath() -> c
    33:39:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
org.geometerplus.fbreader.formats.oeb.NCXReader -> org.geometerplus.fbreader.formats.oeb.b:
    java.util.TreeMap myNavigationMap -> c
    java.util.ArrayList myPointStack -> d
    int myReadState -> a
    int myPlayIndex -> b
    java.lang.String myLocalPathPrefix -> e
    45:59:void <init>(org.geometerplus.fbreader.bookmodel.BookReader) -> <init>
    62:68:void readFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    71:71:java.util.Map navigationMap() -> c
    84:86:int atoi(java.lang.String) -> b
    92:132:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    137:167:boolean endElementHandler(java.lang.String) -> a
    172:177:void characterDataHandler(char[],int,int) -> a
    181:181:boolean dontCacheAttributeValues() -> a
org.geometerplus.fbreader.formats.oeb.NCXReader$NavPoint -> org.geometerplus.fbreader.formats.oeb.b$a:
    int Order -> a
    int Level -> b
    java.lang.String Text -> c
    java.lang.String ContentHRef -> d
    36:42:void <init>(int,int) -> <init>
org.geometerplus.fbreader.formats.oeb.OEBAnnotationReader -> org.geometerplus.fbreader.formats.oeb.c:
    int myReadState -> a
    java.lang.StringBuilder myBuffer -> b
    28:33:void <init>() -> <init>
    36:50:java.lang.String readAnnotation(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    56:56:boolean processNamespaces() -> b
    61:69:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    74:77:void characterDataHandler(char[],int,int) -> a
    81:91:boolean endElementHandler(java.lang.String) -> a
org.geometerplus.fbreader.formats.oeb.OEBBookReader -> org.geometerplus.fbreader.formats.oeb.d:
    char[] Dots -> a
    org.geometerplus.fbreader.bookmodel.BookReader myModelReader -> b
    java.util.HashMap myIdToHref -> c
    java.util.ArrayList myHtmlFileNames -> d
    java.util.ArrayList myTourTOC -> e
    java.util.ArrayList myGuideTOC -> f
    java.lang.String myOPFSchemePrefix -> g
    java.lang.String myFilePrefix -> h
    java.lang.String myNCXTOCFileName -> i
    java.lang.String myCoverFileName -> j
    java.util.HashMap myFileNumbers -> k
    java.util.HashMap myTOCLabels -> l
    int myState -> m
    58:81:void <init>(org.geometerplus.fbreader.bookmodel.BookModel) -> <init>
    84:128:void readBook(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String) -> a
    131:131:java.util.ArrayList getMyHtmlFileNames() -> c
    134:147:org.geometerplus.fbreader.bookmodel.BookModel$Label getTOCLabel(java.lang.String) -> b
    151:187:boolean readNCX() -> e
    191:205:void generateTOC() -> f
    229:299:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    304:312:boolean endElementHandler(java.lang.String) -> a
    317:317:boolean processNamespaces() -> b
    322:329:void namespaceMapChangedHandler(java.util.Map) -> a
    333:333:boolean dontCacheAttributeValues() -> a
    55:55:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.oeb.OEBBookReader$1 -> org.geometerplus.fbreader.formats.oeb.e:
    org.geometerplus.fbreader.formats.oeb.OEBBookReader this$0 -> a
    70:70:void <init>(org.geometerplus.fbreader.formats.oeb.OEBBookReader) -> <init>
    72:75:java.util.List getCandidates(java.lang.String) -> a
org.geometerplus.fbreader.formats.oeb.OEBCoverBackgroundReader -> org.geometerplus.fbreader.formats.oeb.f:
    org.geometerplus.zlibrary.core.image.ZLFileImage myImage -> a
    java.lang.String myPathPrefix -> b
    int myReadState -> c
    java.lang.String myCoverId -> d
    30:38:void <init>() -> <init>
    43:48:org.geometerplus.zlibrary.core.image.ZLFileImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    56:56:boolean processNamespaces() -> b
    61:109:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    113:118:org.geometerplus.zlibrary.core.image.ZLFileImage imageByHref(java.lang.String) -> b
    124:142:boolean endElementHandler(java.lang.String) -> a
org.geometerplus.fbreader.formats.oeb.OEBCoverReader -> org.geometerplus.fbreader.formats.oeb.g:
    26:26:void <init>() -> <init>
    51:51:org.geometerplus.zlibrary.core.image.ZLImageProxy readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
org.geometerplus.fbreader.formats.oeb.OEBCoverReader$OEBCoverImage -> org.geometerplus.fbreader.formats.oeb.g$a:
    org.geometerplus.zlibrary.core.filesystem.ZLFile myFile -> a
    30:32:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    36:36:org.geometerplus.zlibrary.core.image.ZLSingleImage getRealImage() -> c
    41:41:int sourceType() -> a
    46:46:java.lang.String getId() -> b
org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader -> org.geometerplus.fbreader.formats.oeb.h:
    org.geometerplus.fbreader.book.Book myBook -> a
    java.lang.String mySeriesTitle -> b
    java.lang.String mySeriesIndex -> c
    java.util.ArrayList myAuthorList -> d
    java.util.ArrayList myAuthorList2 -> e
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState myReadState -> f
    java.lang.StringBuilder myBuffer -> g
    35:85:void <init>(org.geometerplus.fbreader.book.Book) -> <init>
    48:72:void readMetaInfo(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    89:89:boolean processNamespaces() -> b
    93:93:boolean testDCTag(java.lang.String,java.lang.String) -> a
    98:130:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    135:147:void characterDataHandler(char[],int,int) -> a
    151:190:boolean endElementHandler(java.lang.String) -> a
org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$1 -> org.geometerplus.fbreader.formats.oeb.i:
    int[] $SwitchMap$org$geometerplus$fbreader$formats$oeb$OEBMetaInfoReader$ReadState -> a
    99:99:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState -> org.geometerplus.fbreader.formats.oeb.h$a:
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState Nothing -> a
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState Metadata -> b
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState Author -> c
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState Author2 -> d
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState Title -> e
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState Subject -> f
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState Language -> g
    org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState[] $VALUES -> h
    74:74:org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState[] values() -> values
    74:74:org.geometerplus.fbreader.formats.oeb.OEBMetaInfoReader$ReadState valueOf(java.lang.String) -> valueOf
    74:74:void <init>(java.lang.String,int) -> <init>
    74:81:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.oeb.OEBPlugin -> org.geometerplus.fbreader.formats.oeb.j:
    java.util.ArrayList myHtmlFileNames -> a
    36:40:void <init>() -> <init>
    44:63:org.geometerplus.zlibrary.core.filesystem.ZLFile getOpfFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> d
    72:73:void readMetaInfo(org.geometerplus.fbreader.book.Book) -> a
    78:78:void readUids(org.geometerplus.fbreader.book.Book) -> b
    98:106:void readModel(org.geometerplus.fbreader.bookmodel.BookModel,java.lang.String,java.lang.String) -> a
    117:119:org.geometerplus.zlibrary.core.image.ZLImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    126:128:java.lang.String readAnnotation(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
    134:134:org.geometerplus.zlibrary.core.encodings.AutoEncodingCollection supportedEncodings() -> d
    139:140:void detectLanguageAndEncoding(org.geometerplus.fbreader.book.Book) -> c
    34:34:org.geometerplus.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> c
org.geometerplus.fbreader.formats.oeb.Reference -> org.geometerplus.fbreader.formats.oeb.k:
    java.lang.String Title -> a
    java.lang.String HRef -> b
    48:51:void <init>(java.lang.String,java.lang.String) -> <init>
org.geometerplus.fbreader.formats.oeb.XHTMLImageFinder -> org.geometerplus.fbreader.formats.oeb.l:
    java.lang.String myXHTMLPathPrefix -> a
    org.geometerplus.zlibrary.core.image.ZLFileImage myImage -> b
    30:30:void <init>() -> <init>
    32:40:org.geometerplus.zlibrary.core.image.ZLFileImage getCoverImage(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    48:51:org.geometerplus.zlibrary.core.image.ZLFileImage readImage(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    56:56:boolean processNamespaces() -> b
    61:77:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
org.geometerplus.fbreader.formats.pdb.DocDecompressor -> org.geometerplus.fbreader.formats.pdb.a:
    26:111:int decompress(java.io.InputStream,byte[],int) -> a
org.geometerplus.fbreader.formats.pdb.MobipocketHtmlBookReader -> org.geometerplus.fbreader.formats.pdb.b:
    java.nio.charset.CharsetDecoder myTocDecoder -> c
    org.geometerplus.fbreader.formats.pdb.MobipocketStream myMobipocketStream -> d
    boolean myReadGuide -> e
    int myTocStartOffset -> f
    int myTocEndOffset -> g
    java.util.TreeMap myTocEntries -> h
    java.util.TreeMap myPositionToParagraph -> i
    java.util.TreeSet myFileposReferences -> j
    int myCurrentTocPosition -> k
    org.geometerplus.zlibrary.core.html.ZLByteBuffer myTocBuffer -> l
    40:56:void <init>(org.geometerplus.fbreader.bookmodel.BookModel) -> <init>
    45:46:java.io.InputStream getInputStream() -> p
    59:59:boolean tocRangeContainsPosition(int) -> b
    64:139:void startElementHandler(byte,int,org.geometerplus.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    143:165:void endElementHandler(byte) -> c
    169:173:void byteDataHandler(byte[],int,int) -> b
    177:190:void startDocumentHandler() -> q
    194:214:void endDocumentHandler() -> r
org.geometerplus.fbreader.formats.pdb.MobipocketPlugin -> org.geometerplus.fbreader.formats.pdb.c:
    45:46:void <init>() -> <init>
    50:130:void readMetaInfo(org.geometerplus.fbreader.book.Book) -> a
    134:137:void readUids(org.geometerplus.fbreader.book.Book) -> b
    150:150:org.geometerplus.zlibrary.core.image.ZLImage readCover(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    169:255:org.geometerplus.zlibrary.core.image.ZLSingleImage readCoverInternal(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> d
    260:260:java.lang.String readAnnotation(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
    265:265:org.geometerplus.zlibrary.core.encodings.JavaEncodingCollection supportedEncodings() -> d
    270:299:void detectLanguageAndEncoding(org.geometerplus.fbreader.book.Book) -> c
    312:316:void readModel(org.geometerplus.fbreader.bookmodel.BookModel,java.lang.String,java.lang.String) -> a
    43:43:org.geometerplus.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> c
    43:43:org.geometerplus.zlibrary.core.image.ZLSingleImage access$000(org.geometerplus.fbreader.formats.pdb.MobipocketPlugin,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
org.geometerplus.fbreader.formats.pdb.MobipocketPlugin$1 -> org.geometerplus.fbreader.formats.pdb.d:
    org.geometerplus.zlibrary.core.filesystem.ZLFile val$file -> a
    org.geometerplus.fbreader.formats.pdb.MobipocketPlugin this$0 -> b
    150:150:void <init>(org.geometerplus.fbreader.formats.pdb.MobipocketPlugin,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    153:153:java.lang.String getId() -> b
    158:158:int sourceType() -> a
    163:163:org.geometerplus.zlibrary.core.image.ZLSingleImage getRealImage() -> c
org.geometerplus.fbreader.formats.pdb.MobipocketStream -> org.geometerplus.fbreader.formats.pdb.e:
    int myFileSize -> i
    int myImageStartIndex -> j
    31:46:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    50:52:int getImageOffset(int) -> a
    58:63:int getImageLength(int) -> b
org.geometerplus.fbreader.formats.pdb.PalmDocLikeStream -> org.geometerplus.fbreader.formats.pdb.f:
    int myMaxRecordIndex -> a
    int myRecordIndex -> b
    int myCompressionType -> c
    long myFileSize -> i
    39:41:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    44:83:boolean fillBuffer() -> a
org.geometerplus.fbreader.formats.pdb.PdbHeader -> org.geometerplus.fbreader.formats.pdb.g:
    java.lang.String DocName -> a
    int Flags -> b
    java.lang.String Id -> c
    int[] Offsets -> d
    31:58:void <init>(java.io.InputStream) -> <init>
    61:61:int length() -> a
org.geometerplus.fbreader.formats.pdb.PdbStream -> org.geometerplus.fbreader.formats.pdb.h:
    org.geometerplus.zlibrary.core.util.ZLInputStreamWithOffset myBase -> d
    org.geometerplus.fbreader.formats.pdb.PdbHeader myHeader -> e
    byte[] myBuffer -> f
    short myBufferLength -> g
    short myBufferOffset -> h
    36:45:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    48:51:int read() -> read
    55:69:int read(byte[],int,int) -> read
    73:79:void close() -> close
    boolean fillBuffer() -> a
org.geometerplus.fbreader.formats.pdb.PdbUtil -> org.geometerplus.fbreader.formats.pdb.i:
    26:32:void skip(java.io.InputStream,int) -> a
    35:37:int readShort(java.io.InputStream) -> a
    41:43:long readInt(java.io.InputStream) -> b
org.geometerplus.fbreader.formats.util.MiscUtil -> org.geometerplus.fbreader.formats.util.a:
    26:28:java.lang.String htmlDirectoryPrefix(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    32:33:java.lang.String archiveEntryName(java.lang.String) -> a
    37:37:boolean isHexDigit(char) -> a
    44:65:java.lang.String decodeHtmlReference(java.lang.String) -> b
org.geometerplus.fbreader.formats.xhtml.XHTMLReader -> org.geometerplus.fbreader.formats.xhtml.a:
    java.util.HashMap ourTagActions -> e
    org.geometerplus.fbreader.formats.xhtml.XHTMLTagAction ourNullAction -> f
    org.geometerplus.fbreader.bookmodel.BookReader myModelReader -> g
    java.lang.String myPathPrefix -> a
    java.lang.String myLocalPathPrefix -> h
    java.lang.String myReferencePrefix -> b
    boolean myPreformatted -> c
    boolean myInsideBody -> d
    java.util.Map myFileNumbers -> i
    java.util.Map myLocalFileNumbers -> j
    java.util.HashMap myActions -> k
    java.util.ArrayList ourExternalDTDs -> l
    45:47:org.geometerplus.fbreader.formats.xhtml.XHTMLTagAction addAction(java.lang.String,org.geometerplus.fbreader.formats.xhtml.XHTMLTagAction) -> a
    51:128:void fillTagTable() -> c
    137:189:void <init>(org.geometerplus.fbreader.bookmodel.BookReader,java.util.Map) -> <init>
    145:145:org.geometerplus.fbreader.bookmodel.BookReader getModelReader() -> e
    149:154:java.lang.String getLocalFileAlias(java.lang.String) -> b
    158:168:java.lang.String getFileAlias(java.lang.String) -> c
    172:187:void readFile(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String) -> a
    191:199:org.geometerplus.fbreader.formats.xhtml.XHTMLTagAction getTagAction(java.lang.String) -> d
    204:213:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    218:222:boolean endElementHandler(java.lang.String) -> a
    227:262:void characterDataHandler(char[],int,int) -> a
    267:272:java.util.List xhtmlDTDs() -> f
    277:277:java.util.List externalDTDs() -> d
    282:282:boolean dontCacheAttributeValues() -> a
    287:287:boolean processNamespaces() -> b
    38:264:void <clinit>() -> <clinit>
org.geometerplus.fbreader.formats.xhtml.XHTMLReader$1 -> org.geometerplus.fbreader.formats.xhtml.b:
    39:39:void <init>() -> <init>
    40:40:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    41:41:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagAction -> org.geometerplus.fbreader.formats.xhtml.c:
    24:24:void <init>() -> <init>
    void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagBodyAction -> org.geometerplus.fbreader.formats.xhtml.d:
    24:24:void <init>() -> <init>
    26:27:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    30:32:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagControlAction -> org.geometerplus.fbreader.formats.xhtml.e:
    byte myControl -> a
    29:31:void <init>(byte) -> <init>
    34:37:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    40:43:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagHyperlinkAction -> org.geometerplus.fbreader.formats.xhtml.f:
    byte[] myHyperlinkStack -> a
    int myHyperlinkStackSize -> b
    27:28:void <init>() -> <init>
    32:45:boolean isReference(java.lang.String) -> a
    50:86:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    89:93:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagImageAction -> org.geometerplus.fbreader.formats.xhtml.g:
    java.lang.String myNamespace -> a
    java.lang.String myNameAttribute -> b
    34:37:void <init>(java.lang.String,java.lang.String) -> <init>
    40:58:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    61:61:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagItemAction -> org.geometerplus.fbreader.formats.xhtml.h:
    char[] BULLET -> a
    26:27:void <init>() -> <init>
    30:36:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    39:40:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagParagraphAction -> org.geometerplus.fbreader.formats.xhtml.i:
    24:24:void <init>() -> <init>
    26:27:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    30:31:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagParagraphWithControlAction -> org.geometerplus.fbreader.formats.xhtml.j:
    byte myControl -> a
    29:31:void <init>(byte) -> <init>
    34:47:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    50:60:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagPreAction -> org.geometerplus.fbreader.formats.xhtml.k:
    26:26:void <init>() -> <init>
    28:32:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    35:39:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.formats.xhtml.XHTMLTagRestartParagraphAction -> org.geometerplus.fbreader.formats.xhtml.l:
    24:24:void <init>() -> <init>
    26:28:void doAtStart(org.geometerplus.fbreader.formats.xhtml.XHTMLReader,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    31:31:void doAtEnd(org.geometerplus.fbreader.formats.xhtml.XHTMLReader) -> a
org.geometerplus.fbreader.library.AuthorListTree -> org.geometerplus.fbreader.library.a:
    29:30:void <init>(org.geometerplus.fbreader.library.RootTree) -> <init>
    34:34:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    39:43:void waitForOpening() -> b
    47:65:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    70:76:boolean createAuthorSubtree(org.geometerplus.fbreader.book.Author) -> a
    27:27:boolean isSelectable() -> c
    27:27:java.lang.String getSummary() -> d
    27:27:java.lang.String getTreeTitle() -> e
    27:27:java.lang.String getName() -> f
org.geometerplus.fbreader.library.AuthorListTree$1 -> org.geometerplus.fbreader.library.b:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    47:47:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.AuthorTree -> org.geometerplus.fbreader.library.c:
    org.geometerplus.fbreader.book.Author Author -> a
    30:32:void <init>(org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Author) -> <init>
    35:37:void <init>(org.geometerplus.fbreader.library.AuthorListTree,org.geometerplus.fbreader.book.Author,int) -> <init>
    41:42:java.lang.String getName() -> f
    47:47:java.lang.String getStringId() -> g
    52:60:java.lang.String getSortKey() -> h
    64:69:org.geometerplus.fbreader.library.SeriesTree getSeriesSubtree(org.geometerplus.fbreader.book.Series) -> a
    75:86:boolean createSubtree(org.geometerplus.fbreader.book.Book) -> a
    26:26:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    26:26:void waitForOpening() -> b
    26:26:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    26:26:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    26:26:java.lang.String getSummary() -> d
org.geometerplus.fbreader.library.BookInSeriesTree -> org.geometerplus.fbreader.library.d:
    30:31:void <init>(org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Book) -> <init>
    34:35:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Book,int) -> <init>
    39:52:int compareTo(org.geometerplus.fbreader.tree.FBTree) -> a
    28:28:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.fbreader.library.BookTree -> org.geometerplus.fbreader.library.e:
    org.geometerplus.fbreader.book.Book Book -> a
    31:33:void <init>(org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Book) -> <init>
    36:38:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Book) -> <init>
    41:43:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Book,int) -> <init>
    47:47:java.lang.String getName() -> f
    52:52:java.lang.String getSummary() -> d
    57:57:org.geometerplus.fbreader.book.Book getBook() -> i
    62:62:java.lang.String getStringId() -> g
    67:67:org.geometerplus.zlibrary.core.image.ZLImage createCover() -> j
    72:72:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    77:77:java.lang.String getSortKey() -> h
    82:89:int compareTo(org.geometerplus.fbreader.tree.FBTree) -> a
    94:100:boolean equals(java.lang.Object) -> equals
    27:27:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.fbreader.library.BookWithAuthorsTree -> org.geometerplus.fbreader.library.f:
    26:27:void <init>(org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Book) -> <init>
    30:31:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Book) -> <init>
    34:35:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Book,int) -> <init>
    39:50:java.lang.String getSummary() -> d
org.geometerplus.fbreader.library.FavoritesTree -> org.geometerplus.fbreader.library.g:
    org.geometerplus.zlibrary.core.resources.ZLResource myResource -> a
    30:32:void <init>(org.geometerplus.fbreader.library.RootTree) -> <init>
    36:36:java.lang.String getName() -> f
    41:41:java.lang.String getTreeTitle() -> e
    46:46:java.lang.String getSummary() -> d
    51:51:java.lang.String getStringId() -> g
    56:56:boolean isSelectable() -> c
    61:61:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    68:69:java.lang.String getOpeningStatusMessage() -> k
    74:74:boolean createSubtree(org.geometerplus.fbreader.book.Book) -> a
    26:26:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    26:26:void waitForOpening() -> b
    26:26:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
org.geometerplus.fbreader.library.FileFirstLevelTree -> org.geometerplus.fbreader.library.h:
    29:35:void <init>(org.geometerplus.fbreader.library.RootTree) -> <init>
    38:48:void addChild(java.lang.String,java.lang.String,java.lang.String) -> a
    52:52:java.lang.String getTreeTitle() -> e
    57:57:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    27:27:boolean isSelectable() -> c
    27:27:java.lang.String getSummary() -> d
    27:27:java.lang.String getName() -> f
org.geometerplus.fbreader.library.FileTree -> org.geometerplus.fbreader.library.i:
    org.geometerplus.zlibrary.core.filesystem.ZLFile myFile -> a
    java.lang.String myName -> c
    java.lang.String mySummary -> d
    boolean myIsSelectable -> e
    java.lang.Object myBook -> f
    java.lang.Object NULL_BOOK -> g
    java.util.Comparator ourFileComparator -> h
    38:43:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String) -> <init>
    46:51:void <init>(org.geometerplus.fbreader.library.FileTree,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    55:55:java.lang.String getName() -> f
    60:60:java.lang.String getTreeTitle() -> e
    65:65:java.lang.String getStringId() -> g
    70:79:java.lang.String getSummary() -> d
    84:84:boolean isSelectable() -> c
    89:89:org.geometerplus.zlibrary.core.image.ZLImage createCover() -> j
    93:93:org.geometerplus.zlibrary.core.filesystem.ZLFile getFile() -> l
    101:107:org.geometerplus.fbreader.book.Book getBook() -> i
    112:124:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    130:133:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    138:138:java.lang.String getOpeningStatusMessage() -> k
    143:157:void waitForOpening() -> b
    161:167:boolean equals(java.lang.Object) -> equals
    182:182:int compareTo(org.geometerplus.fbreader.tree.FBTree) -> a
    31:31:int compareTo(java.lang.Object) -> compareTo
    97:170:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.FileTree$1 -> org.geometerplus.fbreader.library.j:
    170:170:void <init>() -> <init>
    172:176:int compare(org.geometerplus.zlibrary.core.filesystem.ZLFile,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    170:170:int compare(java.lang.Object,java.lang.Object) -> compare
org.geometerplus.fbreader.library.FilteredTree -> org.geometerplus.fbreader.library.k:
    org.geometerplus.fbreader.book.Filter myFilter -> a
    32:34:void <init>(org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Filter) -> <init>
    37:39:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Filter,int) -> <init>
    43:43:java.lang.String getSummary() -> d
    48:48:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    53:53:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    57:66:void createBookSubtrees() -> l
    70:72:void waitForOpening() -> b
    76:87:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    boolean createSubtree(org.geometerplus.fbreader.book.Book) -> a
org.geometerplus.fbreader.library.FilteredTree$1 -> org.geometerplus.fbreader.library.l:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    76:76:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.FirstLevelTree -> org.geometerplus.fbreader.library.m:
    java.lang.String myId -> a
    org.geometerplus.zlibrary.core.resources.ZLResource myResource -> c
    35:38:void <init>(org.geometerplus.fbreader.library.RootTree,java.lang.String) -> <init>
    42:42:java.lang.String getName() -> f
    47:47:java.lang.String getTreeTitle() -> e
    52:52:java.lang.String getSummary() -> d
    57:57:java.lang.String getStringId() -> g
    62:62:boolean isSelectable() -> c
org.geometerplus.fbreader.library.LibraryTree -> org.geometerplus.fbreader.library.n:
    org.geometerplus.fbreader.book.IBookCollection Collection -> b
    31:31:org.geometerplus.zlibrary.core.resources.ZLResource resource() -> m
    46:48:void <init>(org.geometerplus.fbreader.book.IBookCollection) -> <init>
    51:53:void <init>(org.geometerplus.fbreader.library.LibraryTree) -> <init>
    56:58:void <init>(org.geometerplus.fbreader.library.LibraryTree,int) -> <init>
    61:61:org.geometerplus.fbreader.book.Book getBook() -> i
    65:65:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    69:69:boolean isSelectable() -> c
    73:79:boolean createTagSubtree(org.geometerplus.fbreader.book.Tag) -> a
    84:90:boolean createBookWithAuthorsSubtree(org.geometerplus.fbreader.book.Book) -> c
    95:104:boolean removeBook(org.geometerplus.fbreader.book.Book) -> d
    108:126:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    133:137:int compareTo(org.geometerplus.fbreader.tree.FBTree) -> a
    29:29:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.fbreader.library.LibraryTree$1 -> org.geometerplus.fbreader.library.o:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    108:108:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.RecentBooksTree -> org.geometerplus.fbreader.library.p:
    26:27:void <init>(org.geometerplus.fbreader.library.RootTree) -> <init>
    31:31:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    36:40:void waitForOpening() -> b
    24:24:boolean isSelectable() -> c
    24:24:java.lang.String getSummary() -> d
    24:24:java.lang.String getTreeTitle() -> e
    24:24:java.lang.String getName() -> f
org.geometerplus.fbreader.library.RootTree -> org.geometerplus.fbreader.library.q:
    26:35:void <init>(org.geometerplus.fbreader.book.IBookCollection) -> <init>
    38:45:org.geometerplus.fbreader.library.LibraryTree getLibraryTree(org.geometerplus.fbreader.tree.FBTree$Key) -> a
    49:49:org.geometerplus.fbreader.library.SearchResultsTree getSearchResultsTree() -> l
    53:53:org.geometerplus.fbreader.library.SearchResultsTree createSearchResultsTree(java.lang.String) -> a
    58:58:java.lang.String getName() -> f
    63:63:java.lang.String getSummary() -> d
    68:68:java.lang.String getStringId() -> g
org.geometerplus.fbreader.library.SearchResultsTree -> org.geometerplus.fbreader.library.r:
    java.lang.String Pattern -> a
    java.lang.String myId -> c
    org.geometerplus.zlibrary.core.resources.ZLResource myResource -> d
    32:36:void <init>(org.geometerplus.fbreader.library.RootTree,java.lang.String,java.lang.String) -> <init>
    40:40:java.lang.String getName() -> f
    45:45:java.lang.String getTreeTitle() -> e
    50:50:java.lang.String getStringId() -> g
    55:55:boolean isSelectable() -> c
    60:60:java.lang.String getSummary() -> d
    65:65:boolean createSubtree(org.geometerplus.fbreader.book.Book) -> a
    26:26:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    26:26:void waitForOpening() -> b
    26:26:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    26:26:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
org.geometerplus.fbreader.library.SeriesListTree -> org.geometerplus.fbreader.library.s:
    28:29:void <init>(org.geometerplus.fbreader.library.RootTree) -> <init>
    33:36:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    41:42:java.lang.String getOpeningStatusMessage() -> k
    47:51:void waitForOpening() -> b
    55:68:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    74:81:boolean createSeriesSubtree(java.lang.String) -> a
    26:26:boolean isSelectable() -> c
    26:26:java.lang.String getSummary() -> d
    26:26:java.lang.String getTreeTitle() -> e
    26:26:java.lang.String getName() -> f
org.geometerplus.fbreader.library.SeriesListTree$1 -> org.geometerplus.fbreader.library.t:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    55:55:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.SeriesTree -> org.geometerplus.fbreader.library.u:
    org.geometerplus.fbreader.book.Series Series -> a
    30:31:org.geometerplus.fbreader.book.Filter filter(org.geometerplus.fbreader.book.Series,org.geometerplus.fbreader.book.Author) -> a
    35:37:void <init>(org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Series,org.geometerplus.fbreader.book.Author) -> <init>
    40:42:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Series,org.geometerplus.fbreader.book.Author,int) -> <init>
    46:46:java.lang.String getName() -> f
    51:51:java.lang.String getStringId() -> g
    56:56:java.lang.String getSortKey() -> h
    61:67:boolean createSubtree(org.geometerplus.fbreader.book.Book) -> a
    26:26:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    26:26:void waitForOpening() -> b
    26:26:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    26:26:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    26:26:java.lang.String getSummary() -> d
org.geometerplus.fbreader.library.TagListTree -> org.geometerplus.fbreader.library.v:
    28:29:void <init>(org.geometerplus.fbreader.library.RootTree) -> <init>
    33:33:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    38:44:void waitForOpening() -> b
    48:68:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    26:26:boolean isSelectable() -> c
    26:26:java.lang.String getSummary() -> d
    26:26:java.lang.String getTreeTitle() -> e
    26:26:java.lang.String getName() -> f
org.geometerplus.fbreader.library.TagListTree$1 -> org.geometerplus.fbreader.library.w:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    48:48:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.TagTree -> org.geometerplus.fbreader.library.x:
    org.geometerplus.fbreader.book.Tag Tag -> a
    30:32:void <init>(org.geometerplus.fbreader.book.IBookCollection,org.geometerplus.fbreader.book.Tag) -> <init>
    35:37:void <init>(org.geometerplus.fbreader.library.LibraryTree,org.geometerplus.fbreader.book.Tag,int) -> <init>
    41:41:java.lang.String getName() -> f
    46:46:java.lang.String getStringId() -> g
    50:50:java.lang.String getSortKey() -> h
    55:68:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    73:82:void waitForOpening() -> b
    86:126:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    132:132:boolean createSubtree(org.geometerplus.fbreader.book.Book) -> a
    26:26:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    26:26:java.lang.String getSummary() -> d
org.geometerplus.fbreader.library.TagTree$1 -> org.geometerplus.fbreader.library.y:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    86:86:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.TitleListTree -> org.geometerplus.fbreader.library.z:
    boolean myGroupByFirstLetter -> a
    30:31:void <init>(org.geometerplus.fbreader.library.RootTree) -> <init>
    35:35:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    40:65:void waitForOpening() -> b
    69:94:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    100:109:boolean createTitleSubtree(java.lang.String) -> a
    26:26:boolean isSelectable() -> c
    26:26:java.lang.String getSummary() -> d
    26:26:java.lang.String getTreeTitle() -> e
    26:26:java.lang.String getName() -> f
org.geometerplus.fbreader.library.TitleListTree$1 -> org.geometerplus.fbreader.library.aa:
    int[] $SwitchMap$org$geometerplus$fbreader$book$BookEvent -> a
    72:72:void <clinit>() -> <clinit>
org.geometerplus.fbreader.library.TitleTree -> org.geometerplus.fbreader.library.ab:
    java.lang.String Prefix -> a
    28:30:void <init>(org.geometerplus.fbreader.book.IBookCollection,java.lang.String) -> <init>
    33:35:void <init>(org.geometerplus.fbreader.library.LibraryTree,java.lang.String,int) -> <init>
    39:39:java.lang.String getName() -> f
    44:44:java.lang.String getStringId() -> g
    49:49:boolean createSubtree(org.geometerplus.fbreader.book.Book) -> a
    24:24:boolean onBookEvent(org.geometerplus.fbreader.book.BookEvent,org.geometerplus.fbreader.book.Book) -> a
    24:24:void waitForOpening() -> b
    24:24:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    24:24:boolean containsBook(org.geometerplus.fbreader.book.Book) -> b
    24:24:java.lang.String getSummary() -> d
org.geometerplus.fbreader.sort.TitledEntity -> org.geometerplus.fbreader.sort.a:
    java.lang.String myTitle -> myTitle
    java.lang.String mySortKey -> mySortKey
    java.util.Map ARTICLES -> ARTICLES
    java.lang.String[] EN_ARTICLES -> EN_ARTICLES
    java.lang.String[] FR_ARTICLES -> FR_ARTICLES
    java.lang.String[] GE_ARTICLES -> GE_ARTICLES
    java.lang.String[] IT_ARTICLES -> IT_ARTICLES
    java.lang.String[] SP_ARTICLES -> SP_ARTICLES
    33:35:void <init>(java.lang.String) -> <init>
    38:38:java.lang.String getTitle() -> getTitle
    42:42:boolean isTitleEmpty() -> isTitleEmpty
    46:48:void setTitle(java.lang.String) -> setTitle
    51:52:void resetSortKey() -> resetSortKey
    java.lang.String getLanguage() -> getLanguage
    57:64:java.lang.String getSortKey() -> getSortKey
    101:159:java.lang.String trim(java.lang.String,java.lang.String) -> trim
    164:164:java.lang.String normalize(java.lang.String) -> normalize
    168:172:java.lang.String firstTitleLetter() -> firstTitleLetter
    67:98:void <clinit>() -> <clinit>
org.geometerplus.fbreader.tree.FBTree -> org.geometerplus.fbreader.tree.a:
    org.geometerplus.zlibrary.core.image.ZLImage myCover -> a
    boolean myCoverRequested -> b
    org.geometerplus.fbreader.tree.FBTree$Key myKey -> c
    78:79:void <init>() -> <init>
    82:83:void <init>(org.geometerplus.fbreader.tree.FBTree) -> <init>
    86:87:void <init>(org.geometerplus.fbreader.tree.FBTree,int) -> <init>
    90:93:org.geometerplus.fbreader.tree.FBTree$Key getUniqueKey() -> n
    java.lang.String getStringId() -> g
    103:108:org.geometerplus.fbreader.tree.FBTree getSubtree(java.lang.String) -> b
    java.lang.String getName() -> f
    118:118:java.lang.String getTreeTitle() -> e
    122:134:java.lang.String getSortKey() -> h
    138:158:int compareStringsIgnoreCase(java.lang.String,java.lang.String) -> a
    162:171:int compareTo(org.geometerplus.fbreader.tree.FBTree) -> a
    java.lang.String getSummary() -> d
    177:177:org.geometerplus.zlibrary.core.image.ZLImage createCover() -> j
    181:181:boolean canUseParentCover() -> o
    185:192:org.geometerplus.zlibrary.core.image.ZLImage getCover() -> p
    196:196:org.geometerplus.fbreader.tree.FBTree$Status getOpeningStatus() -> a
    200:200:java.lang.String getOpeningStatusMessage() -> k
    204:204:void waitForOpening() -> b
    28:28:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.fbreader.tree.FBTree$1 -> org.geometerplus.fbreader.tree.b:
org.geometerplus.fbreader.tree.FBTree$Key -> org.geometerplus.fbreader.tree.a$a:
    long serialVersionUID -> serialVersionUID
    org.geometerplus.fbreader.tree.FBTree$Key Parent -> a
    java.lang.String Id -> b
    35:41:void <init>(org.geometerplus.fbreader.tree.FBTree$Key,java.lang.String) -> <init>
    45:52:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
    62:62:java.lang.String toString() -> toString
    29:29:void <init>(org.geometerplus.fbreader.tree.FBTree$Key,java.lang.String,org.geometerplus.fbreader.tree.FBTree$1) -> <init>
org.geometerplus.fbreader.tree.FBTree$Status -> org.geometerplus.fbreader.tree.a$b:
    org.geometerplus.fbreader.tree.FBTree$Status READY_TO_OPEN -> a
    org.geometerplus.fbreader.tree.FBTree$Status WAIT_FOR_OPEN -> b
    org.geometerplus.fbreader.tree.FBTree$Status ALWAYS_RELOAD_BEFORE_OPENING -> c
    org.geometerplus.fbreader.tree.FBTree$Status CANNOT_OPEN -> d
    org.geometerplus.fbreader.tree.FBTree$Status[] $VALUES -> e
    66:66:org.geometerplus.fbreader.tree.FBTree$Status[] values() -> values
    66:66:org.geometerplus.fbreader.tree.FBTree$Status valueOf(java.lang.String) -> valueOf
    66:66:void <init>(java.lang.String,int) -> <init>
    66:70:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.application.ZLApplication -> org.geometerplus.zlibrary.core.application.a:
    org.geometerplus.zlibrary.core.application.ZLApplication ourInstance -> a
    org.geometerplus.zlibrary.core.application.ZLApplicationWindow myWindow -> b
    org.geometerplus.zlibrary.core.view.ZLView myView -> c
    java.lang.String myTitle -> d
    java.util.HashMap myIdToActionMap -> e
    java.util.HashMap myPopups -> f
    org.geometerplus.zlibrary.core.application.ZLApplication$PopupPanel myActivePopup -> g
    java.util.Timer myTimer -> h
    java.util.HashMap myTimerTaskPeriods -> i
    java.util.HashMap myTimerTasks -> j
    java.lang.Object myTimerLock -> k
    36:36:org.geometerplus.zlibrary.core.application.ZLApplication Instance() -> o
    47:287:void <init>() -> <init>
    54:63:void setView(org.geometerplus.zlibrary.core.view.ZLView) -> a
    66:66:org.geometerplus.zlibrary.core.view.ZLView getCurrentView() -> p
    70:71:void setWindow(org.geometerplus.zlibrary.core.application.ZLApplicationWindow) -> a
    74:75:void initWindow() -> q
    78:82:void setTitle(java.lang.String) -> c
    85:85:java.lang.String getTitle() -> r
    89:92:void runWithMessage(java.lang.String,java.lang.Runnable,java.lang.Runnable) -> a
    95:98:void processException(java.lang.Exception) -> a
    101:102:org.geometerplus.zlibrary.core.view.ZLViewWidget getViewWidget() -> s
    106:113:void onRepaintFinished() -> t
    116:119:void increaseFont() -> u
    122:125:void decreaseFont() -> v
    127:128:void onViewChanged() -> w
    131:135:void hideActivePopup() -> x
    138:143:void showPopup(java.lang.String) -> d
    146:147:void addAction(java.lang.String,org.geometerplus.zlibrary.core.application.ZLApplication$ZLAction) -> a
    150:151:void removeAction(java.lang.String) -> e
    154:158:void runAction(java.lang.String) -> f
    161:162:boolean isActionVisible(java.lang.String) -> g
    166:167:boolean isActionEnabled(java.lang.String) -> h
    171:172:org.geometerplus.zlibrary.core.util.ZLBoolean3 isActionChecked(java.lang.String) -> i
    176:180:void runAction(java.lang.String,java.lang.Object[]) -> a
    org.geometerplus.zlibrary.core.application.ZLKeyBindings keyBindings() -> d
    186:187:boolean hasActionForKey(int,boolean) -> b
    191:196:boolean runActionByKey(int,boolean) -> c
    200:204:boolean closeWindow() -> y
    208:208:void onWindowClosing() -> j
    252:252:java.util.Collection popupPanels() -> z
    255:255:org.geometerplus.zlibrary.core.application.ZLApplication$PopupPanel getActivePopup() -> A
    258:258:org.geometerplus.zlibrary.core.application.ZLApplication$PopupPanel getPopupById(java.lang.String) -> j
    262:262:int getBatteryLevel() -> B
    282:285:void addTimerTaskInternal(java.lang.Runnable,long) -> b
    289:297:void startTimer() -> C
    300:307:void stopTimer() -> D
    310:317:void addTimerTask(java.lang.Runnable,long) -> a
    320:328:void removeTimerTask(java.lang.Runnable) -> a
    34:34:java.util.HashMap access$000(org.geometerplus.zlibrary.core.application.ZLApplication) -> a
org.geometerplus.zlibrary.core.application.ZLApplication$MyTimerTask -> org.geometerplus.zlibrary.core.application.a$a:
    java.lang.Runnable myRunnable -> a
    271:273:void <init>(java.lang.Runnable) -> <init>
    277:278:void run() -> run
org.geometerplus.zlibrary.core.application.ZLApplication$PopupPanel -> org.geometerplus.zlibrary.core.application.a$b:
    org.geometerplus.zlibrary.core.application.ZLApplication Application -> c
    238:241:void <init>(org.geometerplus.zlibrary.core.application.ZLApplication) -> <init>
    java.lang.String getId() -> g
    void update() -> a
    void hide_() -> d
    void show_() -> c
org.geometerplus.zlibrary.core.application.ZLApplication$ZLAction -> org.geometerplus.zlibrary.core.application.a$c:
    211:211:void <init>() -> <init>
    213:213:boolean isVisible() -> b
    217:217:boolean isEnabled() -> a
    221:221:org.geometerplus.zlibrary.core.util.ZLBoolean3 isChecked() -> c
    225:229:boolean checkAndRun(java.lang.Object[]) -> b
    void run(java.lang.Object[]) -> a
org.geometerplus.zlibrary.core.application.ZLApplicationWindow -> org.geometerplus.zlibrary.core.application.b:
    org.geometerplus.zlibrary.core.application.ZLApplication myApplication -> a
    27:30:void <init>(org.geometerplus.zlibrary.core.application.ZLApplication) -> <init>
    33:33:org.geometerplus.zlibrary.core.application.ZLApplication getApplication() -> a
    void setTitle(java.lang.String) -> a
    void runWithMessage(java.lang.String,java.lang.Runnable,java.lang.Runnable) -> a
    void processException(java.lang.Exception) -> a
    void refresh() -> b
    void increaseFont() -> c
    void decreaseFont() -> d
    org.geometerplus.zlibrary.core.view.ZLViewWidget getViewWidget() -> e
    void close() -> f
    int getBatteryLevel() -> g
org.geometerplus.zlibrary.core.application.ZLKeyBindings -> org.geometerplus.zlibrary.core.application.c:
    java.lang.String myName -> a
    org.geometerplus.zlibrary.ui.android.options.ZLStringListOption myKeysOption -> b
    java.util.TreeMap myActionMap -> c
    java.util.TreeMap myLongPressActionMap -> d
    41:86:void <init>(java.lang.String) -> <init>
    89:90:org.geometerplus.zlibrary.ui.android.options.ZLStringOption createOption(int,boolean,java.lang.String) -> b
    94:100:org.geometerplus.zlibrary.ui.android.options.ZLStringOption getOption(int,boolean) -> a
    104:113:void bindKey(int,boolean,java.lang.String) -> a
    116:116:java.lang.String getBinding(int,boolean) -> b
    35:35:org.geometerplus.zlibrary.ui.android.options.ZLStringOption access$000(org.geometerplus.zlibrary.core.application.ZLKeyBindings,int,boolean,java.lang.String) -> a
    35:35:java.util.TreeMap access$100(org.geometerplus.zlibrary.core.application.ZLKeyBindings) -> a
org.geometerplus.zlibrary.core.application.ZLKeyBindings$Reader -> org.geometerplus.zlibrary.core.application.c$a:
    java.util.Set myKeySet -> b
    org.geometerplus.zlibrary.core.application.ZLKeyBindings this$0 -> a
    122:124:void <init>(org.geometerplus.zlibrary.core.application.ZLKeyBindings,java.util.Set) -> <init>
    128:128:boolean dontCacheAttributeValues() -> a
    133:145:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
org.geometerplus.zlibrary.core.config.ZLConfig -> org.geometerplus.zlibrary.core.config.a:
    org.geometerplus.zlibrary.core.config.ZLConfig ourInstance -> a
    26:26:org.geometerplus.zlibrary.core.config.ZLConfig Instance() -> a
    31:33:void <init>() -> <init>
    java.util.List listGroups() -> b
    java.util.List listNames(java.lang.String) -> a
    java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String) -> a
    void setValue(java.lang.String,java.lang.String,java.lang.String) -> b
    void unsetValue(java.lang.String,java.lang.String) -> a
    void removeGroup(java.lang.String) -> b
org.geometerplus.zlibrary.core.encodings.AutoEncodingCollection -> org.geometerplus.zlibrary.core.encodings.a:
    org.geometerplus.zlibrary.core.encodings.Encoding myEncoding -> a
    25:26:void <init>() -> <init>
    29:29:java.util.List encodings() -> a
org.geometerplus.zlibrary.core.encodings.Encoding -> org.geometerplus.zlibrary.core.encodings.b:
    java.lang.String Family -> a
    java.lang.String Name -> b
    java.lang.String DisplayName -> c
    27:31:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    35:35:boolean equals(java.lang.Object) -> equals
    40:40:int hashCode() -> hashCode
org.geometerplus.zlibrary.core.encodings.EncodingCollection -> org.geometerplus.zlibrary.core.encodings.c:
    24:24:void <init>() -> <init>
    java.util.List encodings() -> a
org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection -> org.geometerplus.zlibrary.core.encodings.d:
    java.util.List myEncodings -> a
    java.util.Map myEncodingByAlias -> b
    29:36:void <init>() -> <init>
    boolean isEncodingSupported(java.lang.String) -> a
    42:42:java.util.List encodings() -> a
    47:53:org.geometerplus.zlibrary.core.encodings.Encoding getEncoding(java.lang.String) -> b
    58:58:org.geometerplus.zlibrary.core.encodings.Encoding getEncoding(int) -> a
    28:28:java.util.List access$100(org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection) -> a
    28:28:java.util.Map access$200(org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection) -> b
org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection$1 -> org.geometerplus.zlibrary.core.encodings.e:
org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection$EncodingCollectionReader -> org.geometerplus.zlibrary.core.encodings.d$a:
    java.lang.String myCurrentFamilyName -> b
    org.geometerplus.zlibrary.core.encodings.Encoding myCurrentEncoding -> c
    org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection this$0 -> a
    65:65:void <init>(org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection) -> <init>
    71:71:boolean dontCacheAttributeValues() -> a
    76:99:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    65:65:void <init>(org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection,org.geometerplus.zlibrary.core.encodings.FilteredEncodingCollection$1) -> <init>
org.geometerplus.zlibrary.core.encodings.JavaEncodingCollection -> org.geometerplus.zlibrary.core.encodings.f:
    org.geometerplus.zlibrary.core.encodings.JavaEncodingCollection ourInstance -> a
    28:31:org.geometerplus.zlibrary.core.encodings.JavaEncodingCollection Instance() -> b
    35:36:void <init>() -> <init>
    41:43:boolean isEncodingSupported(java.lang.String) -> a
    24:24:org.geometerplus.zlibrary.core.encodings.Encoding getEncoding(int) -> a
    24:24:org.geometerplus.zlibrary.core.encodings.Encoding getEncoding(java.lang.String) -> b
    24:24:java.util.List encodings() -> a
org.geometerplus.zlibrary.core.filesystem.ZLArchiveEntryFile -> org.geometerplus.zlibrary.core.filesystem.a:
    org.geometerplus.zlibrary.core.filesystem.ZLFile myParent -> a
    java.lang.String myName -> b
    28:50:java.lang.String normalizeEntryName(java.lang.String) -> a
    54:64:org.geometerplus.zlibrary.core.filesystem.ZLArchiveEntryFile createArchiveEntryFile(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String) -> a
    69:75:java.util.List archiveEntries(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    82:86:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String) -> <init>
    90:90:boolean isDirectory() -> a
    95:95:java.lang.String getPath() -> b
    100:100:java.lang.String getLongName() -> c
    105:105:org.geometerplus.zlibrary.core.filesystem.ZLFile getParent() -> d
    110:114:org.geometerplus.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> e
org.geometerplus.zlibrary.core.filesystem.ZLFile -> org.geometerplus.zlibrary.core.filesystem.b:
    boolean needDecryption -> a
    java.lang.String aesKey -> b
    java.util.HashMap ourCachedFiles -> d
    java.lang.String myExtension -> e
    java.lang.String myShortName -> f
    int myArchiveType -> c
    boolean myIsCached -> g
    28:30:void <init>() -> <init>
    50:81:void init() -> f
    84:110:org.geometerplus.zlibrary.core.filesystem.ZLFile createFile(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String) -> b
    114:117:org.geometerplus.zlibrary.core.filesystem.ZLFile createFileByUrl(java.lang.String) -> b
    126:146:org.geometerplus.zlibrary.core.filesystem.ZLFile createFileByPath(java.lang.String) -> c
    long size() -> g
    boolean exists() -> h
    boolean isDirectory() -> a
    java.lang.String getPath() -> b
    org.geometerplus.zlibrary.core.filesystem.ZLFile getParent() -> d
    org.geometerplus.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> e
    java.io.InputStream getInputStream() -> i
    158:158:java.lang.String getUrl() -> j
    162:162:boolean isReadable() -> k
    170:170:boolean isArchive() -> l
    java.lang.String getLongName() -> c
    176:176:java.lang.String getShortName() -> m
    180:180:java.lang.String getExtension() -> n
    184:184:java.util.List directoryEntries() -> o
    188:195:java.util.List children() -> p
    200:200:int hashCode() -> hashCode
    205:211:boolean equals(java.lang.Object) -> equals
    216:216:java.lang.String toString() -> toString
    220:220:boolean isCached() -> q
    224:233:void setCached(boolean) -> a
    236:236:boolean getNeedDecryption() -> r
    240:241:void setNeedDecryption(boolean) -> b
    244:244:java.lang.String getAesKey() -> s
    248:249:void setAesKey(java.lang.String) -> d
    33:33:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.filesystem.ZLPhysicalFile -> org.geometerplus.zlibrary.core.filesystem.c:
    java.io.File myFile -> a
    29:30:void <init>(java.lang.String) -> <init>
    32:35:void <init>(java.io.File) -> <init>
    39:39:boolean exists() -> h
    44:44:long size() -> g
    49:49:boolean isDirectory() -> a
    54:54:boolean isReadable() -> k
    58:58:boolean delete() -> t
    62:62:java.io.File javaFile() -> u
    68:71:java.lang.String getPath() -> b
    77:77:java.lang.String getLongName() -> c
    82:82:org.geometerplus.zlibrary.core.filesystem.ZLFile getParent() -> d
    87:87:org.geometerplus.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> e
    92:92:java.io.InputStream getInputStream() -> i
    96:107:java.util.List directoryEntries() -> o
org.geometerplus.zlibrary.core.filesystem.ZLResourceFile -> org.geometerplus.zlibrary.core.filesystem.d:
    java.lang.String myPath -> a
    26:26:org.geometerplus.zlibrary.core.filesystem.ZLResourceFile createResourceFile(java.lang.String) -> a
    30:30:org.geometerplus.zlibrary.core.filesystem.ZLResourceFile createResourceFile(org.geometerplus.zlibrary.core.filesystem.ZLResourceFile,java.lang.String) -> a
    35:38:void <init>(java.lang.String) -> <init>
    42:42:java.lang.String getPath() -> b
    47:47:java.lang.String getLongName() -> c
    52:52:org.geometerplus.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> e
org.geometerplus.zlibrary.core.filesystem.ZLZipEntryFile -> org.geometerplus.zlibrary.core.filesystem.e:
    java.util.HashMap ourZipFileMap -> d
    33:44:java.util.List archiveEntries(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    50:63:org.amse.ys.zip.ZipFile getZipFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> d
    67:68:void removeFromCache(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
    71:72:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String) -> <init>
    77:79:boolean exists() -> h
    86:88:long size() -> g
    94:101:java.io.InputStream getInputStream() -> i
    47:47:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.filesystem.ZLZipEntryFile$1 -> org.geometerplus.zlibrary.core.filesystem.f:
    org.geometerplus.zlibrary.core.filesystem.ZLFile val$file -> a
    53:53:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    55:55:java.io.InputStream getInputStream() -> a
org.geometerplus.zlibrary.core.filesystem.tar.ZLTarEntryFile -> org.geometerplus.zlibrary.core.filesystem.tar.a:
    34:56:java.util.List archiveEntries(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    60:61:void <init>(org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String) -> <init>
    66:66:boolean exists() -> h
    71:71:long size() -> g
    76:83:java.io.InputStream getInputStream() -> i
org.geometerplus.zlibrary.core.filesystem.tar.ZLTarHeader -> org.geometerplus.zlibrary.core.filesystem.tar.b:
    java.lang.String Name -> a
    int Size -> b
    boolean IsRegularFile -> c
    25:25:void <init>() -> <init>
    31:36:java.lang.String getStringFromByteArray(byte[]) -> a
    41:88:boolean read(java.io.InputStream) -> a
    92:93:void erase() -> a
org.geometerplus.zlibrary.core.filesystem.tar.ZLTarInputStream -> org.geometerplus.zlibrary.core.filesystem.tar.c:
    java.io.InputStream myBase -> a
    29:47:void <init>(java.io.InputStream,java.lang.String) -> <init>
    51:51:int read() -> read
    56:56:int read(byte[]) -> read
    61:61:int read(byte[],int,int) -> read
    66:66:long skip(long) -> skip
    71:71:int available() -> available
org.geometerplus.zlibrary.core.filetypes.FileType -> org.geometerplus.zlibrary.core.filetypes.a:
    java.lang.String Id -> a
    30:32:void <init>(java.lang.String) -> <init>
    boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    org.geometerplus.zlibrary.core.util.MimeType mimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    39:39:org.geometerplus.zlibrary.core.util.MimeType rawMimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
org.geometerplus.zlibrary.core.filetypes.FileTypeCollection -> org.geometerplus.zlibrary.core.filetypes.b:
    org.geometerplus.zlibrary.core.filetypes.FileTypeCollection Instance -> a
    java.util.TreeMap myTypes -> b
    32:45:void <init>() -> <init>
    48:49:void addType(org.geometerplus.zlibrary.core.filetypes.FileType) -> a
    52:52:java.util.Collection types() -> a
    61:66:org.geometerplus.zlibrary.core.filetypes.FileType typeForFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    80:86:org.geometerplus.zlibrary.core.util.MimeType rawMimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    30:30:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.filetypes.FileTypeDjVu -> org.geometerplus.zlibrary.core.filetypes.c:
    29:30:void <init>() -> <init>
    34:35:boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    45:45:org.geometerplus.zlibrary.core.util.MimeType mimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
org.geometerplus.zlibrary.core.filetypes.FileTypeEpub -> org.geometerplus.zlibrary.core.filetypes.d:
    29:30:void <init>() -> <init>
    34:39:boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    49:54:org.geometerplus.zlibrary.core.util.MimeType mimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    59:64:org.geometerplus.zlibrary.core.util.MimeType rawMimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
org.geometerplus.zlibrary.core.filetypes.FileTypeFB2 -> org.geometerplus.zlibrary.core.filetypes.e:
    java.util.List myMimeTypes -> b
    30:39:void <init>() -> <init>
    35:36:boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    52:58:org.geometerplus.zlibrary.core.util.MimeType mimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    64:70:org.geometerplus.zlibrary.core.util.MimeType rawMimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
org.geometerplus.zlibrary.core.filetypes.FileTypeHtml -> org.geometerplus.zlibrary.core.filetypes.f:
    29:30:void <init>() -> <init>
    34:35:boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    45:45:org.geometerplus.zlibrary.core.util.MimeType mimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
org.geometerplus.zlibrary.core.filetypes.FileTypeMobipocket -> org.geometerplus.zlibrary.core.filetypes.g:
    29:30:void <init>() -> <init>
    34:40:boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    50:50:org.geometerplus.zlibrary.core.util.MimeType mimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
org.geometerplus.zlibrary.core.filetypes.FileTypePalm -> org.geometerplus.zlibrary.core.filetypes.h:
    java.lang.String myPalmId -> b
    31:48:java.lang.String palmFileType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> d
    54:56:void <init>(java.lang.String,java.lang.String) -> <init>
    60:63:boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
org.geometerplus.zlibrary.core.filetypes.SimpleFileType -> org.geometerplus.zlibrary.core.filetypes.i:
    java.lang.String myExtension -> b
    java.util.List myMimeTypes -> c
    32:35:void <init>(java.lang.String,java.lang.String,java.util.List) -> <init>
    39:39:boolean acceptsFile(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    49:49:org.geometerplus.zlibrary.core.util.MimeType mimeType(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> b
    59:59:java.lang.String toString() -> toString
org.geometerplus.zlibrary.core.html.ZLByteBuffer -> org.geometerplus.zlibrary.core.html.a:
    byte[] myData -> a
    int myLength -> b
    java.lang.Object myConverterLock -> c
    char[] myConverterBuffer -> d
    java.lang.String myStringValue -> e
    32:34:void <init>(int) -> <init>
    37:38:void <init>() -> <init>
    40:43:void <init>(java.lang.String) -> <init>
    45:49:void <init>(org.geometerplus.zlibrary.core.html.ZLByteBuffer) -> <init>
    52:52:boolean isEmpty() -> a
    56:66:void append(byte[],int,int) -> a
    69:71:void clear() -> b
    74:86:boolean equals(java.lang.Object) -> equals
    90:104:int hashCode() -> hashCode
    108:109:boolean equalsToLCString(java.lang.String) -> a
    116:127:java.lang.String toString(java.nio.charset.CharsetDecoder) -> a
    130:133:java.lang.String toString() -> toString
    112:113:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.html.ZLHtmlAttributeMap -> org.geometerplus.zlibrary.core.html.b:
    org.geometerplus.zlibrary.core.html.ZLByteBuffer[] myKeys -> a
    org.geometerplus.zlibrary.core.html.ZLByteBuffer[] myValues -> b
    int mySize -> c
    33:36:void <init>() -> <init>
    39:52:void put(org.geometerplus.zlibrary.core.html.ZLByteBuffer,org.geometerplus.zlibrary.core.html.ZLByteBuffer) -> a
    55:64:org.geometerplus.zlibrary.core.html.ZLByteBuffer getValue(java.lang.String) -> a
    68:69:java.lang.String getStringValue(java.lang.String,java.nio.charset.CharsetDecoder) -> a
    81:82:void clear() -> a
org.geometerplus.zlibrary.core.html.ZLHtmlParser -> org.geometerplus.zlibrary.core.html.c:
    org.geometerplus.zlibrary.core.html.ZLHtmlReader myReader -> a
    java.io.InputStream myStream -> b
    51:57:org.geometerplus.zlibrary.core.html.ZLByteBuffer unique(java.util.HashMap,org.geometerplus.zlibrary.core.html.ZLByteBuffer) -> a
    63:66:void <init>(org.geometerplus.zlibrary.core.html.ZLHtmlReader,java.io.InputStream) -> <init>
    69:472:void doIt() -> a
    476:480:void processFullTag(org.geometerplus.zlibrary.core.html.ZLHtmlReader,org.geometerplus.zlibrary.core.html.ZLByteBuffer,int,org.geometerplus.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    483:485:void processStartTag(org.geometerplus.zlibrary.core.html.ZLHtmlReader,org.geometerplus.zlibrary.core.html.ZLByteBuffer,int,org.geometerplus.zlibrary.core.html.ZLHtmlAttributeMap) -> b
    488:489:void processEndTag(org.geometerplus.zlibrary.core.html.ZLHtmlReader,org.geometerplus.zlibrary.core.html.ZLByteBuffer) -> a
org.geometerplus.zlibrary.core.html.ZLHtmlProcessor -> org.geometerplus.zlibrary.core.html.d:
    28:35:boolean read(org.geometerplus.zlibrary.core.html.ZLHtmlReader,java.io.InputStream) -> a
org.geometerplus.zlibrary.core.html.ZLHtmlReader -> org.geometerplus.zlibrary.core.html.e:
    void startDocumentHandler() -> q
    void endDocumentHandler() -> r
    void startElementHandler(java.lang.String,int,org.geometerplus.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    void endElementHandler(java.lang.String) -> d
    void byteDataHandler(byte[],int,int) -> b
    void entityDataHandler(java.lang.String) -> c
org.geometerplus.zlibrary.core.image.ZLBase64EncodedImage -> org.geometerplus.zlibrary.core.image.a:
    boolean myIsDecoded -> a
    30:31:void <init>(org.geometerplus.zlibrary.core.util.MimeType) -> <init>
    34:57:byte decodeByte(byte) -> a
    62:66:java.lang.String getURI() -> e
    java.lang.String encodedFileName() -> b
    java.lang.String decodedFileName() -> c
    74:74:boolean isCacheValid(java.io.File) -> a
    78:128:void decode() -> a
    133:136:java.io.InputStream inputStream() -> f
org.geometerplus.zlibrary.core.image.ZLFileImage -> org.geometerplus.zlibrary.core.image.b:
    org.geometerplus.zlibrary.core.filesystem.ZLFile myFile -> a
    java.lang.String myEncoding -> b
    int[] myOffsets -> c
    int[] myLengths -> d
    36:53:org.geometerplus.zlibrary.core.image.ZLFileImage byUrlPath(java.lang.String) -> a
    67:72:void <init>(org.geometerplus.zlibrary.core.util.MimeType,org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String,int[],int[]) -> <init>
    79:86:void <init>(org.geometerplus.zlibrary.core.util.MimeType,org.geometerplus.zlibrary.core.filesystem.ZLFile,java.lang.String,int,int) -> <init>
    89:90:void <init>(org.geometerplus.zlibrary.core.util.MimeType,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> <init>
    93:100:java.lang.String getURI() -> e
    107:132:java.io.InputStream inputStream() -> f
org.geometerplus.zlibrary.core.image.ZLImage -> org.geometerplus.zlibrary.core.image.c:
    java.lang.String getURI() -> e
    boolean saveToFile(java.lang.String) -> b
org.geometerplus.zlibrary.core.image.ZLImageData -> org.geometerplus.zlibrary.core.image.d:
org.geometerplus.zlibrary.core.image.ZLImageManager -> org.geometerplus.zlibrary.core.image.e:
    org.geometerplus.zlibrary.core.image.ZLImageManager ourInstance -> b
    int[][] PalmImage8bitColormap -> a
    26:26:org.geometerplus.zlibrary.core.image.ZLImageManager Instance() -> a
    29:31:void <init>() -> <init>
    org.geometerplus.zlibrary.core.image.ZLImageData getImageData(org.geometerplus.zlibrary.core.image.ZLImage) -> a
    void startImageLoading(org.geometerplus.zlibrary.core.image.ZLLoadableImage,java.lang.Runnable) -> a
    54:54:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.image.ZLImageProxy -> org.geometerplus.zlibrary.core.image.f:
    org.geometerplus.zlibrary.core.image.ZLSingleImage myImage -> a
    30:31:void <init>(org.geometerplus.zlibrary.core.util.MimeType) -> <init>
    34:35:void <init>() -> <init>
    org.geometerplus.zlibrary.core.image.ZLSingleImage getRealImage() -> c
    40:41:java.lang.String getURI() -> e
    46:46:java.io.InputStream inputStream() -> f
    51:53:void synchronize() -> d
org.geometerplus.zlibrary.core.image.ZLLoadableImage -> org.geometerplus.zlibrary.core.image.g:
    boolean myIsSynchronized -> a
    28:29:void <init>(org.geometerplus.zlibrary.core.util.MimeType) -> <init>
    32:32:boolean isSynchronized() -> g
    36:37:void setSynchronized() -> h
    40:41:void startSynchronization(java.lang.Runnable) -> a
    int sourceType() -> a
    void synchronize() -> d
    java.lang.String getId() -> b
    55:58:boolean saveToFile(java.lang.String) -> b
org.geometerplus.zlibrary.core.image.ZLSingleImage -> org.geometerplus.zlibrary.core.image.h:
    org.geometerplus.zlibrary.core.util.MimeType myMimeType -> a
    29:31:void <init>(org.geometerplus.zlibrary.core.util.MimeType) -> <init>
    java.io.InputStream inputStream() -> f
    36:36:org.geometerplus.zlibrary.core.util.MimeType mimeType() -> i
    41:76:boolean saveToFile(java.lang.String) -> b
org.geometerplus.zlibrary.core.language.Language -> org.geometerplus.zlibrary.core.language.a:
    java.lang.String Code -> a
    java.lang.String Name -> b
    java.lang.String mySortKey -> c
    org.geometerplus.zlibrary.core.language.Language$Order myOrder -> d
    47:48:void <init>(java.lang.String) -> <init>
    50:67:void <init>(java.lang.String,org.geometerplus.zlibrary.core.resources.ZLResource) -> <init>
    70:71:int compareTo(org.geometerplus.zlibrary.core.language.Language) -> a
    76:82:boolean equals(java.lang.Object) -> equals
    87:87:int hashCode() -> hashCode
    92:92:java.lang.String normalize(java.lang.String) -> a
    29:29:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.zlibrary.core.language.Language$Order -> org.geometerplus.zlibrary.core.language.a$a:
    org.geometerplus.zlibrary.core.language.Language$Order Before -> a
    org.geometerplus.zlibrary.core.language.Language$Order Normal -> b
    org.geometerplus.zlibrary.core.language.Language$Order After -> c
    org.geometerplus.zlibrary.core.language.Language$Order[] $VALUES -> d
    35:35:org.geometerplus.zlibrary.core.language.Language$Order[] values() -> values
    35:35:org.geometerplus.zlibrary.core.language.Language$Order valueOf(java.lang.String) -> valueOf
    35:35:void <init>(java.lang.String,int) -> <init>
    35:38:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.language.ZLLanguageUtil -> org.geometerplus.zlibrary.core.language.b:
    java.util.ArrayList ourLanguageCodes -> a
    33:33:java.lang.String defaultLanguageCode() -> a
    37:55:java.util.List languageCodes() -> b
    59:59:org.geometerplus.zlibrary.core.filesystem.ZLFile patternsFile() -> c
    63:193:java.lang.String languageByIntCode(int,int) -> a
    27:27:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.library.ZLibrary -> org.geometerplus.zlibrary.core.library.a:
    org.geometerplus.zlibrary.core.library.ZLibrary ourImplementation -> a
    29:29:org.geometerplus.zlibrary.core.library.ZLibrary Instance() -> a
    42:42:org.geometerplus.zlibrary.ui.android.options.ZLStringOption getOrientationOption() -> b
    45:47:void <init>() -> <init>
    org.geometerplus.zlibrary.core.filesystem.ZLResourceFile createResourceFile(java.lang.String) -> a
    org.geometerplus.zlibrary.core.filesystem.ZLResourceFile createResourceFile(org.geometerplus.zlibrary.core.filesystem.ZLResourceFile,java.lang.String) -> a
    java.lang.String getVersionName() -> c
    void setScreenBrightness(int) -> a
    int getScreenBrightness() -> d
    int getDisplayDPI() -> e
    int getPixelWidth() -> f
    int getPixelHeight() -> g
    boolean supportsAllOrientations() -> h
    64:64:java.lang.String[] allOrientations() -> i
org.geometerplus.zlibrary.core.resources.ZLMissingResource -> org.geometerplus.zlibrary.core.resources.a:
    org.geometerplus.zlibrary.core.resources.ZLMissingResource Instance -> a
    27:28:void <init>() -> <init>
    32:32:org.geometerplus.zlibrary.core.resources.ZLResource getResource(java.lang.String) -> a
    37:37:boolean hasValue() -> a
    42:42:java.lang.String getValue() -> b
    47:47:java.lang.String getValue(int) -> a
    24:24:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.resources.ZLResource -> org.geometerplus.zlibrary.core.resources.b:
    java.lang.String Name -> b
    java.util.List ourLanguageCodes -> a
    34:47:java.util.List languageCodes() -> c
    51:58:java.util.List interfaceLanguages() -> d
    62:62:org.geometerplus.zlibrary.ui.android.options.ZLStringOption getLanguageOption() -> e
    66:70:org.geometerplus.zlibrary.core.resources.ZLResource resource(java.lang.String) -> b
    73:75:void <init>(java.lang.String) -> <init>
    boolean hasValue() -> a
    java.lang.String getValue() -> b
    java.lang.String getValue(int) -> a
    org.geometerplus.zlibrary.core.resources.ZLResource getResource(java.lang.String) -> a
    32:32:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.resources.ZLTreeResource -> org.geometerplus.zlibrary.core.resources.c:
    org.geometerplus.zlibrary.core.resources.ZLTreeResource ourRoot -> a
    java.lang.Object ourLock -> c
    long ourTimeStamp -> d
    java.lang.String ourLanguage -> e
    java.lang.String ourCountry -> f
    boolean myHasValue -> g
    java.lang.String myValue -> h
    java.util.HashMap myChildren -> i
    java.util.LinkedHashMap myConditionalValues -> j
    96:110:org.geometerplus.zlibrary.core.resources.ZLTreeResource$Condition parseCondition(java.lang.String) -> d
    126:134:void buildTree() -> f
    137:161:void setInterfaceLanguage() -> g
    164:173:void updateLanguage() -> h
    176:179:void loadData(org.geometerplus.zlibrary.core.resources.ZLTreeResource$ResourceTreeReader,java.lang.String) -> a
    182:185:void loadData() -> i
    188:190:void <init>(java.lang.String,java.lang.String) -> <init>
    193:195:void setValue(java.lang.String) -> e
    199:199:boolean hasValue() -> a
    204:205:java.lang.String getValue() -> b
    210:218:java.lang.String getValue(int) -> a
    223:230:org.geometerplus.zlibrary.core.resources.ZLResource getResource(java.lang.String) -> a
    29:29:java.util.HashMap access$100(org.geometerplus.zlibrary.core.resources.ZLTreeResource) -> a
    29:29:java.util.HashMap access$102(org.geometerplus.zlibrary.core.resources.ZLTreeResource,java.util.HashMap) -> a
    29:29:void <init>(java.lang.String,java.lang.String,org.geometerplus.zlibrary.core.resources.ZLTreeResource$1) -> <init>
    29:29:void access$300(org.geometerplus.zlibrary.core.resources.ZLTreeResource,java.lang.String) -> a
    29:29:java.util.LinkedHashMap access$402(org.geometerplus.zlibrary.core.resources.ZLTreeResource,java.util.LinkedHashMap) -> a
    29:29:org.geometerplus.zlibrary.core.resources.ZLTreeResource$Condition access$500(java.lang.String) -> c
    29:29:java.util.LinkedHashMap access$400(org.geometerplus.zlibrary.core.resources.ZLTreeResource) -> b
    114:118:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.resources.ZLTreeResource$1 -> org.geometerplus.zlibrary.core.resources.d:
org.geometerplus.zlibrary.core.resources.ZLTreeResource$Condition -> org.geometerplus.zlibrary.core.resources.c$a:
    boolean accepts(int) -> a
org.geometerplus.zlibrary.core.resources.ZLTreeResource$ModCondition -> org.geometerplus.zlibrary.core.resources.c$b:
    int myMod -> a
    int myBase -> b
    84:87:void <init>(int,int) -> <init>
    91:91:boolean accepts(int) -> a
org.geometerplus.zlibrary.core.resources.ZLTreeResource$ModRangeCondition -> org.geometerplus.zlibrary.core.resources.c$c:
    int myMin -> a
    int myMax -> b
    int myBase -> c
    67:71:void <init>(int,int,int) -> <init>
    75:76:boolean accepts(int) -> a
org.geometerplus.zlibrary.core.resources.ZLTreeResource$RangeCondition -> org.geometerplus.zlibrary.core.resources.c$d:
    int myMin -> a
    int myMax -> b
    51:54:void <init>(int,int) -> <init>
    58:58:boolean accepts(int) -> a
org.geometerplus.zlibrary.core.resources.ZLTreeResource$ResourceTreeReader -> org.geometerplus.zlibrary.core.resources.c$e:
    java.util.ArrayList myStack -> a
    233:235:void <init>() -> <init>
    238:241:void readDocument(org.geometerplus.zlibrary.core.resources.ZLTreeResource,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    245:245:boolean dontCacheAttributeValues() -> a
    250:287:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    292:296:boolean endElementHandler(java.lang.String) -> a
    233:233:void <init>(org.geometerplus.zlibrary.core.resources.ZLTreeResource$1) -> <init>
org.geometerplus.zlibrary.core.resources.ZLTreeResource$ValueCondition -> org.geometerplus.zlibrary.core.resources.c$f:
    int myValue -> a
    37:39:void <init>(int) -> <init>
    43:43:boolean accepts(int) -> a
org.geometerplus.zlibrary.core.sqliteconfig.ZLSQLiteConfig -> org.geometerplus.zlibrary.core.sqliteconfig.a:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    android.database.sqlite.SQLiteStatement myGetValueStatement -> b
    android.database.sqlite.SQLiteStatement mySetValueStatement -> c
    android.database.sqlite.SQLiteStatement myUnsetValueStatement -> d
    android.database.sqlite.SQLiteStatement myDeleteGroupStatement -> e
    40:75:void <init>(android.content.Context) -> <init>
    79:85:java.util.List listGroups() -> b
    90:96:java.util.List listNames(java.lang.String) -> a
    101:106:void removeGroup(java.lang.String) -> b
    110:117:java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String) -> a
    122:129:void setValue(java.lang.String,java.lang.String,java.lang.String) -> b
    133:139:void unsetValue(java.lang.String,java.lang.String) -> a
org.geometerplus.zlibrary.core.tree.ZLTree -> org.geometerplus.zlibrary.core.tree.a:
    int mySize -> mySize
    org.geometerplus.zlibrary.core.tree.ZLTree Parent -> Parent
    int Level -> Level
    java.util.List mySubtrees -> mySubtrees
    31:32:void <init>() -> <init>
    35:36:void <init>(org.geometerplus.zlibrary.core.tree.ZLTree) -> <init>
    25:52:void <init>(org.geometerplus.zlibrary.core.tree.ZLTree,int) -> <init>
    55:55:int getSize() -> getSize
    59:59:boolean hasChildren() -> hasChildren
    63:68:java.util.List subtrees() -> subtrees
    72:91:org.geometerplus.zlibrary.core.tree.ZLTree getTreeByParagraphNumber(int) -> getTreeByParagraphNumber
    95:109:void addSubtree(org.geometerplus.zlibrary.core.tree.ZLTree,int) -> addSubtree
    112:120:void moveSubtree(org.geometerplus.zlibrary.core.tree.ZLTree,int) -> moveSubtree
    123:131:void removeSelf() -> removeSelf
    134:144:void clear() -> clear
    147:147:org.geometerplus.zlibrary.core.tree.ZLTree$TreeIterator iterator() -> iterator
    151:151:java.lang.Iterable allSubtrees(int) -> allSubtrees
    24:24:java.util.Iterator iterator() -> iterator
    24:24:java.util.List access$000(org.geometerplus.zlibrary.core.tree.ZLTree) -> access$000
org.geometerplus.zlibrary.core.tree.ZLTree$1 -> org.geometerplus.zlibrary.core.tree.b:
    int val$maxLevel -> a
    org.geometerplus.zlibrary.core.tree.ZLTree this$0 -> b
    151:151:void <init>(org.geometerplus.zlibrary.core.tree.ZLTree,int) -> <init>
    153:153:org.geometerplus.zlibrary.core.tree.ZLTree$TreeIterator iterator() -> a
    151:151:java.util.Iterator iterator() -> iterator
org.geometerplus.zlibrary.core.tree.ZLTree$TreeIterator -> org.geometerplus.zlibrary.core.tree.a$a:
    org.geometerplus.zlibrary.core.tree.ZLTree myCurrentElement -> b
    java.util.LinkedList myIndexStack -> c
    int myMaxLevel -> d
    org.geometerplus.zlibrary.core.tree.ZLTree this$0 -> a
    159:165:void <init>(org.geometerplus.zlibrary.core.tree.ZLTree,int) -> <init>
    168:168:boolean hasNext() -> hasNext
    172:193:org.geometerplus.zlibrary.core.tree.ZLTree next() -> a
    197:197:void remove() -> remove
    158:158:java.lang.Object next() -> next
org.geometerplus.zlibrary.core.util.Base64InputStream -> org.geometerplus.zlibrary.core.util.a:
    java.io.InputStream myBaseStream -> a
    int myDecoded0 -> b
    int myDecoded1 -> c
    int myDecoded2 -> d
    byte[] myBuffer -> e
    int myBufferOffset -> f
    int myBufferLength -> g
    28:37:void <init>(java.io.InputStream) -> <init>
    42:42:int available() -> available
    48:53:long skip(long) -> skip
    58:77:int read() -> read
    82:83:void close() -> close
    87:152:int read(byte[],int,int) -> read
    157:163:void reset() -> reset
    166:194:void fillDecodedBuffer() -> a
    197:199:void fillBuffer() -> b
    202:225:int decode(byte) -> a
org.geometerplus.zlibrary.core.util.HexInputStream -> org.geometerplus.zlibrary.core.util.b:
    java.io.InputStream myBaseStream -> a
    byte[] myBuffer -> b
    int myBufferOffset -> c
    int myBufferLength -> d
    28:34:void <init>(java.io.InputStream) -> <init>
    39:39:int available() -> available
    44:64:long skip(long) -> skip
    69:83:int read() -> read
    88:89:void close() -> close
    93:119:int read(byte[],int,int) -> read
    124:127:void reset() -> reset
    130:132:void fillBuffer() -> a
    135:144:int decode(byte) -> a
org.geometerplus.zlibrary.core.util.MergedInputStream -> org.geometerplus.zlibrary.core.util.c:
    java.io.InputStream[] myStreams -> a
    java.io.InputStream myCurrentStream -> b
    int myCurrentStreamNumber -> c
    30:34:void <init>(java.io.InputStream[]) -> <init>
    38:46:int read() -> read
    51:65:int read(byte[],int,int) -> read
    70:78:long skip(long) -> skip
    83:87:int available() -> available
    92:97:void reset() -> reset
    100:105:boolean nextStream() -> a
org.geometerplus.zlibrary.core.util.MimeType -> org.geometerplus.zlibrary.core.util.d:
    java.util.Map ourSimpleTypesMap -> R
    org.geometerplus.zlibrary.core.util.MimeType APP_ZIP -> a
    org.geometerplus.zlibrary.core.util.MimeType APP_EPUB_ZIP -> b
    org.geometerplus.zlibrary.core.util.MimeType APP_EPUB -> c
    org.geometerplus.zlibrary.core.util.MimeType APP_MOBIPOCKET -> d
    org.geometerplus.zlibrary.core.util.MimeType APP_PDF -> e
    org.geometerplus.zlibrary.core.util.MimeType APP_RTF -> f
    org.geometerplus.zlibrary.core.util.MimeType APP_TXT -> g
    org.geometerplus.zlibrary.core.util.MimeType APP_DJVU -> h
    org.geometerplus.zlibrary.core.util.MimeType APP_HTML -> i
    org.geometerplus.zlibrary.core.util.MimeType APP_HTMLHTM -> j
    org.geometerplus.zlibrary.core.util.MimeType APP_DOC -> k
    org.geometerplus.zlibrary.core.util.MimeType APP_MSWORD -> l
    org.geometerplus.zlibrary.core.util.MimeType APP_FB2_ZIP -> m
    org.geometerplus.zlibrary.core.util.MimeType APP_ATOM_XML -> n
    org.geometerplus.zlibrary.core.util.MimeType APP_ATOM_XML_ENTRY -> o
    org.geometerplus.zlibrary.core.util.MimeType APP_RSS_XML -> p
    org.geometerplus.zlibrary.core.util.MimeType APP_OPENSEARCHDESCRIPTION -> q
    org.geometerplus.zlibrary.core.util.MimeType APP_LITRES -> r
    org.geometerplus.zlibrary.core.util.MimeType TEXT_XML -> s
    org.geometerplus.zlibrary.core.util.MimeType TEXT_HTML -> t
    org.geometerplus.zlibrary.core.util.MimeType TEXT_XHTML -> u
    org.geometerplus.zlibrary.core.util.MimeType TEXT_PLAIN -> v
    org.geometerplus.zlibrary.core.util.MimeType TEXT_RTF -> w
    org.geometerplus.zlibrary.core.util.MimeType TEXT_FB2 -> x
    org.geometerplus.zlibrary.core.util.MimeType IMAGE_PNG -> y
    org.geometerplus.zlibrary.core.util.MimeType IMAGE_JPEG -> z
    org.geometerplus.zlibrary.core.util.MimeType IMAGE_AUTO -> A
    org.geometerplus.zlibrary.core.util.MimeType IMAGE_PALM -> B
    org.geometerplus.zlibrary.core.util.MimeType IMAGE_VND_DJVU -> C
    org.geometerplus.zlibrary.core.util.MimeType IMAGE_XDJVU -> D
    org.geometerplus.zlibrary.core.util.MimeType UNKNOWN -> E
    org.geometerplus.zlibrary.core.util.MimeType NULL -> F
    java.util.List TYPES_FB2 -> G
    java.util.List TYPES_EPUB -> H
    java.util.List TYPES_MOBIPOCKET -> I
    java.util.List TYPES_TXT -> J
    java.util.List TYPES_RTF -> K
    java.util.List TYPES_HTML -> L
    java.util.List TYPES_PDF -> M
    java.util.List TYPES_DJVU -> N
    java.util.List TYPES_DOC -> O
    java.util.List TYPES_FB2_ZIP -> P
    java.lang.String Name -> Q
    java.util.Map myParameters -> S
    28:58:org.geometerplus.zlibrary.core.util.MimeType get(java.lang.String) -> a
    147:150:void <init>(java.lang.String,java.util.Map) -> <init>
    158:167:boolean equals(java.lang.Object) -> equals
    176:176:int hashCode() -> hashCode
    181:192:java.lang.String toString() -> toString
    25:141:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.util.MiscUtil -> org.geometerplus.zlibrary.core.util.e:
    26:26:boolean equals(java.lang.Object,java.lang.Object) -> a
    34:34:int hashCode(java.lang.Object) -> a
    48:62:boolean mapsEquals(java.util.Map,java.util.Map) -> a
    66:67:boolean matchesIgnoreCase(java.lang.String,java.lang.String) -> a
    71:84:java.lang.String join(java.util.List,java.lang.String) -> a
    88:91:java.util.List split(java.lang.String,java.lang.String) -> b
org.geometerplus.zlibrary.core.util.RationalNumber -> org.geometerplus.zlibrary.core.util.f:
    long Numerator -> a
    long Denominator -> b
    24:27:org.geometerplus.zlibrary.core.util.RationalNumber create(long,long) -> a
    33:45:void <init>(long,long) -> <init>
    52:65:long GCD(long,long) -> b
    70:77:boolean equals(java.lang.Object) -> equals
    82:82:int hashCode() -> hashCode
org.geometerplus.zlibrary.core.util.SliceInputStream -> org.geometerplus.zlibrary.core.util.g:
    int myStart -> a
    int myLength -> b
    30:34:void <init>(java.io.InputStream,int,int) -> <init>
    38:41:int read() -> read
    46:50:int read(byte[],int,int) -> read
    55:55:long skip(long) -> skip
    60:60:int available() -> available
    65:67:void reset() -> reset
    71:71:int offset() -> a
org.geometerplus.zlibrary.core.util.ZLArrayUtils -> org.geometerplus.zlibrary.core.util.h:
    32:36:byte[] createCopy(byte[],int,int) -> a
    40:44:char[] createCopy(char[],int,int) -> a
    48:52:int[] createCopy(int[],int,int) -> a
    56:60:java.lang.String[] createCopy(java.lang.String[],int,int) -> a
org.geometerplus.zlibrary.core.util.ZLBoolean3 -> org.geometerplus.zlibrary.core.util.i:
    org.geometerplus.zlibrary.core.util.ZLBoolean3 B3_FALSE -> a
    org.geometerplus.zlibrary.core.util.ZLBoolean3 B3_TRUE -> b
    org.geometerplus.zlibrary.core.util.ZLBoolean3 B3_UNDEFINED -> c
    java.lang.String Name -> d
    org.geometerplus.zlibrary.core.util.ZLBoolean3[] $VALUES -> e
    22:22:org.geometerplus.zlibrary.core.util.ZLBoolean3[] values() -> values
    22:22:org.geometerplus.zlibrary.core.util.ZLBoolean3 valueOf(java.lang.String) -> valueOf
    29:31:void <init>(java.lang.String,int,java.lang.String) -> <init>
    34:39:org.geometerplus.zlibrary.core.util.ZLBoolean3 getByName(java.lang.String) -> a
    22:25:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.util.ZLColor -> org.geometerplus.zlibrary.core.util.j:
    short Red -> a
    short Green -> b
    short Blue -> c
    31:35:void <init>(int,int,int) -> <init>
    37:41:void <init>(int) -> <init>
    44:44:int intValue() -> a
    49:58:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    68:72:java.lang.String toString() -> toString
org.geometerplus.zlibrary.core.util.ZLInputStreamWithOffset -> org.geometerplus.zlibrary.core.util.k:
    java.io.InputStream myDecoratedStream -> a
    int myOffset -> b
    27:31:void <init>(java.io.InputStream) -> <init>
    35:35:int available() -> available
    40:47:long skip(long) -> skip
    52:56:int read() -> read
    61:63:void close() -> close
    67:71:int read(byte[],int,int) -> read
    76:78:void reset() -> reset
    81:81:int offset() -> a
org.geometerplus.zlibrary.core.util.ZLSearchPattern -> org.geometerplus.zlibrary.core.util.l:
    boolean IgnoreCase -> a
    char[] LowerCasePattern -> b
    char[] UpperCasePattern -> c
    27:36:void <init>(java.lang.String,boolean) -> <init>
    39:39:int getLength() -> a
org.geometerplus.zlibrary.core.util.ZLSearchUtil -> org.geometerplus.zlibrary.core.util.m:
    27:27:int find(char[],int,int,org.geometerplus.zlibrary.core.util.ZLSearchPattern) -> a
    31:73:int find(char[],int,int,org.geometerplus.zlibrary.core.util.ZLSearchPattern,int) -> a
org.geometerplus.zlibrary.core.util.ZLTTFInfo -> org.geometerplus.zlibrary.core.util.n:
    java.lang.String FamilyName -> a
    java.lang.String SubFamilyName -> b
    22:22:void <init>() -> <init>
org.geometerplus.zlibrary.core.util.ZLTTFInfoDetector -> org.geometerplus.zlibrary.core.util.o:
    java.io.InputStream myStream -> a
    int myPosition -> b
    25:25:void <init>() -> <init>
    27:56:java.util.Map collectFonts(java.lang.Iterable) -> a
    60:80:org.geometerplus.zlibrary.core.util.ZLTTFInfo detectInfo(java.io.File) -> a
    84:84:int getInt16(byte[],int) -> b
    90:102:int getInt32(byte[],int) -> c
    128:148:byte[] readTable(org.geometerplus.zlibrary.core.util.ZLTTFInfoDetector$TableInfo) -> a
    152:195:org.geometerplus.zlibrary.core.util.ZLTTFInfo readFontInfo(org.geometerplus.zlibrary.core.util.ZLTTFInfoDetector$TableInfo) -> b
    25:25:int access$000(byte[],int) -> a
org.geometerplus.zlibrary.core.util.ZLTTFInfoDetector$TableInfo -> org.geometerplus.zlibrary.core.util.o$a:
    java.lang.String Name -> a
    int Offset -> b
    int Length -> c
    115:120:void <init>(byte[],int) -> <init>
org.geometerplus.zlibrary.core.view.DummyPaintContext -> org.geometerplus.zlibrary.core.view.a:
    27:28:void <init>() -> <init>
    32:32:void clear(org.geometerplus.zlibrary.core.filesystem.ZLFile,org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode) -> a
    36:36:void clear(org.geometerplus.zlibrary.core.util.ZLColor) -> a
    40:40:org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    45:45:void setFontInternal(java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    49:49:void setTextColor(org.geometerplus.zlibrary.core.util.ZLColor) -> b
    53:53:void setLineColor(org.geometerplus.zlibrary.core.util.ZLColor) -> c
    60:60:void setFillColor(org.geometerplus.zlibrary.core.util.ZLColor,int) -> a
    64:64:int getWidth() -> b
    68:68:int getHeight() -> c
    73:73:int getStringWidth(char[],int,int) -> a
    78:78:int getSpaceWidthInternal() -> d
    83:83:int getStringHeightInternal() -> e
    88:88:int getDescentInternal() -> f
    93:93:void drawString(int,int,char[],int,int) -> a
    97:97:org.geometerplus.zlibrary.core.view.ZLPaintContext$Size imageSize(org.geometerplus.zlibrary.core.image.ZLImageData,org.geometerplus.zlibrary.core.view.ZLPaintContext$Size,org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    101:101:void drawImage(int,int,org.geometerplus.zlibrary.core.image.ZLImageData,org.geometerplus.zlibrary.core.view.ZLPaintContext$Size,org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    108:108:void fillRectangle(int,int,int,int) -> a
    112:112:void fillPolygon(int[],int[]) -> a
    115:115:void drawPolygonalLine(int[],int[]) -> b
    118:118:void drawOutline(int[],int[]) -> c
org.geometerplus.zlibrary.core.view.ZLPaintContext -> org.geometerplus.zlibrary.core.view.b:
    java.util.ArrayList myFamilies -> a
    boolean myResetFont -> b
    java.lang.String myFontFamily -> c
    int myFontSize -> d
    boolean myFontIsBold -> e
    boolean myFontIsItalic -> f
    boolean myFontIsUnderlined -> g
    boolean myFontIsStrikedThrough -> h
    int mySpaceWidth -> i
    int myStringHeight -> j
    int myDescent -> k
    29:125:void <init>() -> <init>
    void clear(org.geometerplus.zlibrary.core.filesystem.ZLFile,org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode) -> a
    void clear(org.geometerplus.zlibrary.core.util.ZLColor) -> a
    org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    51:82:void setFont(java.lang.String,int,boolean,boolean,boolean,boolean) -> b
    void setFontInternal(java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    void setTextColor(org.geometerplus.zlibrary.core.util.ZLColor) -> b
    void setLineColor(org.geometerplus.zlibrary.core.util.ZLColor) -> c
    91:92:void setFillColor(org.geometerplus.zlibrary.core.util.ZLColor) -> d
    void setFillColor(org.geometerplus.zlibrary.core.util.ZLColor,int) -> a
    int getWidth() -> b
    int getHeight() -> c
    int getStringWidth(char[],int,int) -> a
    105:110:int getSpaceWidth() -> g
    int getSpaceWidthInternal() -> d
    116:121:int getStringHeight() -> h
    int getStringHeightInternal() -> e
    127:132:int getDescent() -> i
    int getDescentInternal() -> f
    void drawString(int,int,char[],int,int) -> a
    org.geometerplus.zlibrary.core.view.ZLPaintContext$Size imageSize(org.geometerplus.zlibrary.core.image.ZLImageData,org.geometerplus.zlibrary.core.view.ZLPaintContext$Size,org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,org.geometerplus.zlibrary.core.image.ZLImageData,org.geometerplus.zlibrary.core.view.ZLPaintContext$Size,org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void fillRectangle(int,int,int,int) -> a
    void drawPolygonalLine(int[],int[]) -> b
    void fillPolygon(int[],int[]) -> a
    void drawOutline(int[],int[]) -> c
org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType -> org.geometerplus.zlibrary.core.view.b$a:
    org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType OriginalSize -> a
    org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType IntegerCoefficient -> b
    org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType FitMaximum -> c
    org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType[] $VALUES -> d
    162:162:org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType[] values() -> values
    162:162:org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType valueOf(java.lang.String) -> valueOf
    162:162:void <init>(java.lang.String,int) -> <init>
    162:165:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.view.ZLPaintContext$Size -> org.geometerplus.zlibrary.core.view.b$b:
    int Width -> a
    int Height -> b
    145:148:void <init>(int,int) -> <init>
    152:159:boolean equals(java.lang.Object) -> equals
org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode -> org.geometerplus.zlibrary.core.view.b$c:
    org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode TILE -> a
    org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode TILE_MIRROR -> b
    org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode[] $VALUES -> c
    34:34:org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode[] values() -> values
    34:34:org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    34:36:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.view.ZLView -> org.geometerplus.zlibrary.core.view.c:
    org.geometerplus.zlibrary.core.application.ZLApplication Application -> a
    org.geometerplus.zlibrary.core.view.ZLPaintContext myViewContext -> b
    26:30:void <init>(org.geometerplus.zlibrary.core.application.ZLApplication) -> <init>
    33:34:void setContext(org.geometerplus.zlibrary.core.view.ZLPaintContext) -> a
    37:37:org.geometerplus.zlibrary.core.view.ZLPaintContext getContext() -> v
    41:41:int getContextWidth() -> w
    45:45:int getContextHeight() -> x
    org.geometerplus.zlibrary.core.view.ZLView$FooterArea getFooterArea() -> u
    org.geometerplus.zlibrary.core.view.ZLView$Animation getAnimationType() -> t
    void preparePage(org.geometerplus.zlibrary.core.view.ZLPaintContext,org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> a
    void paint(org.geometerplus.zlibrary.core.view.ZLPaintContext,org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> b
    void onScrollingFinished(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> a
    100:100:boolean onFingerPress(int,int) -> c
    104:104:boolean onFingerRelease(int,int) -> e
    108:108:boolean onFingerMove(int,int) -> d
    112:112:boolean onFingerLongPress(int,int) -> f
    116:116:boolean onFingerReleaseAfterLongPress(int,int) -> h
    120:120:boolean onFingerMoveAfterLongPress(int,int) -> g
    124:124:boolean onFingerSingleTap(int,int) -> a
    128:128:boolean onFingerDoubleTap(int,int) -> b
    132:132:boolean isDoubleTapSupported() -> a
    136:136:boolean onTrackballRotated(int,int) -> i
    boolean isScrollbarShown() -> y
    int getScrollbarFullSize() -> z
    int getScrollbarThumbPosition(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> b
    int getScrollbarThumbLength(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> c
    boolean canScroll(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> d
org.geometerplus.zlibrary.core.view.ZLView$1 -> org.geometerplus.zlibrary.core.view.d:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$PageIndex -> a
    59:59:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.view.ZLView$Animation -> org.geometerplus.zlibrary.core.view.c$a:
    org.geometerplus.zlibrary.core.view.ZLView$Animation none -> a
    org.geometerplus.zlibrary.core.view.ZLView$Animation curl -> b
    org.geometerplus.zlibrary.core.view.ZLView$Animation slide -> c
    org.geometerplus.zlibrary.core.view.ZLView$Animation shift -> d
    org.geometerplus.zlibrary.core.view.ZLView$Animation[] $VALUES -> e
    89:89:org.geometerplus.zlibrary.core.view.ZLView$Animation[] values() -> values
    89:89:org.geometerplus.zlibrary.core.view.ZLView$Animation valueOf(java.lang.String) -> valueOf
    89:89:void <init>(java.lang.String,int) -> <init>
    89:90:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.view.ZLView$Direction -> org.geometerplus.zlibrary.core.view.c$b:
    org.geometerplus.zlibrary.core.view.ZLView$Direction leftToRight -> a
    org.geometerplus.zlibrary.core.view.ZLView$Direction rightToLeft -> b
    org.geometerplus.zlibrary.core.view.ZLView$Direction up -> c
    org.geometerplus.zlibrary.core.view.ZLView$Direction down -> d
    boolean IsHorizontal -> e
    org.geometerplus.zlibrary.core.view.ZLView$Direction[] $VALUES -> f
    80:80:org.geometerplus.zlibrary.core.view.ZLView$Direction[] values() -> values
    80:80:org.geometerplus.zlibrary.core.view.ZLView$Direction valueOf(java.lang.String) -> valueOf
    85:87:void <init>(java.lang.String,int,boolean) -> <init>
    80:81:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.view.ZLView$FooterArea -> org.geometerplus.zlibrary.core.view.c$c:
    int getHeight() -> a
    void paint(org.geometerplus.zlibrary.core.view.ZLPaintContext) -> a
org.geometerplus.zlibrary.core.view.ZLView$PageIndex -> org.geometerplus.zlibrary.core.view.c$d:
    org.geometerplus.zlibrary.core.view.ZLView$PageIndex previous -> a
    org.geometerplus.zlibrary.core.view.ZLView$PageIndex current -> b
    org.geometerplus.zlibrary.core.view.ZLView$PageIndex next -> c
    org.geometerplus.zlibrary.core.view.ZLView$PageIndex[] $VALUES -> d
    55:55:org.geometerplus.zlibrary.core.view.ZLView$PageIndex[] values() -> values
    55:55:org.geometerplus.zlibrary.core.view.ZLView$PageIndex valueOf(java.lang.String) -> valueOf
    55:55:void <init>(java.lang.String,int) -> <init>
    59:65:org.geometerplus.zlibrary.core.view.ZLView$PageIndex getNext() -> a
    70:76:org.geometerplus.zlibrary.core.view.ZLView$PageIndex getPrevious() -> b
    55:56:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.view.ZLViewWidget -> org.geometerplus.zlibrary.core.view.e:
    void reset() -> a
    void repaint() -> b
    void startManualScrolling(int,int,org.geometerplus.zlibrary.core.view.ZLView$Direction) -> a
    void scrollManuallyTo(int,int) -> a
    void startAnimatedScrolling(org.geometerplus.zlibrary.core.view.ZLView$PageIndex,int,int,org.geometerplus.zlibrary.core.view.ZLView$Direction,int) -> a
    void startAnimatedScrolling(org.geometerplus.zlibrary.core.view.ZLView$PageIndex,org.geometerplus.zlibrary.core.view.ZLView$Direction,int) -> a
    void startAnimatedScrolling(int,int,int) -> a
org.geometerplus.zlibrary.core.xml.ZLDTDParser -> org.geometerplus.zlibrary.core.xml.a:
    29:29:void <init>() -> <init>
    44:254:void doIt(java.io.InputStream,java.util.HashMap) -> a
org.geometerplus.zlibrary.core.xml.ZLMutableString -> org.geometerplus.zlibrary.core.xml.b:
    char[] myData -> a
    int myLength -> b
    28:30:void <init>(int) -> <init>
    33:34:void <init>() -> <init>
    36:40:void <init>(org.geometerplus.zlibrary.core.xml.ZLMutableString) -> <init>
    43:52:void append(char[],int,int) -> a
    55:56:void clear() -> a
    59:71:boolean equals(java.lang.Object) -> equals
    75:89:int hashCode() -> hashCode
    93:93:java.lang.String toString() -> toString
org.geometerplus.zlibrary.core.xml.ZLStringMap -> org.geometerplus.zlibrary.core.xml.c:
    java.lang.String[] myKeys -> a
    java.lang.String[] myValues -> b
    int mySize -> c
    34:37:void <init>() -> <init>
    40:49:void put(java.lang.String,java.lang.String) -> a
    55:64:java.lang.String getValue(java.lang.String) -> a
    68:68:int getSize() -> a
    72:72:java.lang.String getKey(int) -> a
    76:76:java.lang.String getValue(int) -> b
    80:81:void clear() -> b
org.geometerplus.zlibrary.core.xml.ZLXMLParser -> org.geometerplus.zlibrary.core.xml.d:
    java.io.Reader myStreamReader -> a
    org.geometerplus.zlibrary.core.xml.ZLXMLReader myXMLReader -> b
    boolean myProcessNamespaces -> c
    java.util.HashMap ourBufferPool -> d
    java.util.Queue ourStringPool -> e
    char[] myBuffer -> f
    int myBufferDescriptionLength -> g
    org.geometerplus.zlibrary.core.xml.ZLMutableString myTagName -> h
    org.geometerplus.zlibrary.core.xml.ZLMutableString myCData -> i
    org.geometerplus.zlibrary.core.xml.ZLMutableString myAttributeName -> j
    org.geometerplus.zlibrary.core.xml.ZLMutableString myAttributeValue -> k
    org.geometerplus.zlibrary.core.xml.ZLMutableString myEntityName -> l
    java.util.HashMap ourDTDMaps -> m
    68:74:java.lang.String convertToString(java.util.Map,org.geometerplus.zlibrary.core.xml.ZLMutableString) -> a
    85:92:char[] getBuffer(int) -> a
    96:102:void storeBuffer(char[]) -> a
    105:106:org.geometerplus.zlibrary.core.xml.ZLMutableString getMutableString() -> c
    110:111:void storeString(org.geometerplus.zlibrary.core.xml.ZLMutableString) -> a
    122:127:void finish() -> a
    115:173:void <init>(org.geometerplus.zlibrary.core.xml.ZLXMLReader,java.io.InputStream,int) -> <init>
    176:192:char[] getEntityValue(java.util.HashMap,java.lang.String) -> a
    199:215:java.util.HashMap getDTDMap(java.util.List) -> a
    219:763:void doIt() -> b
    767:774:boolean processFullTag(org.geometerplus.zlibrary.core.xml.ZLXMLReader,java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    778:785:boolean processStartTag(org.geometerplus.zlibrary.core.xml.ZLXMLReader,java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap,java.util.HashMap) -> a
    789:793:boolean processEndTag(org.geometerplus.zlibrary.core.xml.ZLXMLReader,java.lang.String,java.util.HashMap) -> a
    81:195:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.core.xml.ZLXMLProcessor -> org.geometerplus.zlibrary.core.xml.e:
    34:36:java.util.Map getEntityMap(java.util.List) -> a
    41:52:void read(org.geometerplus.zlibrary.core.xml.ZLXMLReader,java.io.InputStream,int) -> a
    69:70:void read(org.geometerplus.zlibrary.core.xml.ZLXMLReader,org.geometerplus.zlibrary.core.filesystem.ZLFile) -> a
    74:83:void read(org.geometerplus.zlibrary.core.xml.ZLXMLReader,org.geometerplus.zlibrary.core.filesystem.ZLFile,int) -> a
org.geometerplus.zlibrary.core.xml.ZLXMLReader -> org.geometerplus.zlibrary.core.xml.f:
    boolean dontCacheAttributeValues() -> a
    void startDocumentHandler() -> g
    void endDocumentHandler() -> h
    boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    boolean endElementHandler(java.lang.String) -> a
    void characterDataHandler(char[],int,int) -> a
    void characterDataHandlerFinal(char[],int,int) -> b
    boolean processNamespaces() -> b
    void namespaceMapChangedHandler(java.util.Map) -> a
    void collectExternalEntities(java.util.HashMap) -> a
    java.util.List externalDTDs() -> d
org.geometerplus.zlibrary.core.xml.ZLXMLReaderAdapter -> org.geometerplus.zlibrary.core.xml.g:
    java.util.Map myNamespaceMap -> a
    27:28:void <init>() -> <init>
    32:35:boolean readQuietly(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> c
    49:50:void read(org.geometerplus.zlibrary.core.filesystem.ZLFile) -> d
    65:65:boolean dontCacheAttributeValues() -> a
    69:69:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    73:73:boolean endElementHandler(java.lang.String) -> a
    77:77:void characterDataHandler(char[],int,int) -> a
    80:81:void characterDataHandlerFinal(char[],int,int) -> b
    84:84:void startDocumentHandler() -> g
    87:87:void endDocumentHandler() -> h
    90:90:boolean processNamespaces() -> b
    94:95:void namespaceMapChangedHandler(java.util.Map) -> a
    98:109:boolean testTag(java.lang.String,java.lang.String,java.lang.String) -> a
    113:131:java.lang.String getAttributeValue(org.geometerplus.zlibrary.core.xml.ZLStringMap,java.lang.String,java.lang.String) -> a
    158:158:void collectExternalEntities(java.util.HashMap) -> a
    161:161:java.util.List externalDTDs() -> d
org.geometerplus.zlibrary.text.hyphenation.ZLTextHyphenationInfo -> org.geometerplus.zlibrary.text.hyphenation.a:
    boolean[] Mask -> a
    25:27:void <init>(int) -> <init>
    30:30:boolean isHyphenationPossible(int) -> a
org.geometerplus.zlibrary.text.hyphenation.ZLTextHyphenationReader -> org.geometerplus.zlibrary.text.hyphenation.b:
    org.geometerplus.zlibrary.text.hyphenation.ZLTextTeXHyphenator myHyphenator -> a
    boolean myReadPattern -> b
    char[] myBuffer -> c
    int myBufferLength -> d
    31:36:void <init>(org.geometerplus.zlibrary.text.hyphenation.ZLTextTeXHyphenator) -> <init>
    40:43:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
    48:56:boolean endElementHandler(java.lang.String) -> a
    61:72:void characterDataHandler(char[],int,int) -> a
org.geometerplus.zlibrary.text.hyphenation.ZLTextHyphenator -> org.geometerplus.zlibrary.text.hyphenation.c:
    org.geometerplus.zlibrary.text.hyphenation.ZLTextHyphenator ourInstance -> a
    30:33:org.geometerplus.zlibrary.text.hyphenation.ZLTextHyphenator Instance() -> a
    43:44:void <init>() -> <init>
    java.util.List languageCodes() -> b
    void load(java.lang.String) -> a
    51:96:org.geometerplus.zlibrary.text.hyphenation.ZLTextHyphenationInfo getInfo(org.geometerplus.zlibrary.text.view.ZLTextWord) -> a
    void hyphenate(char[],boolean[],int) -> a
org.geometerplus.zlibrary.text.hyphenation.ZLTextTeXHyphenationPattern -> org.geometerplus.zlibrary.text.hyphenation.d:
    int myLength -> a
    char[] mySymbols -> b
    byte[] myValues -> d
    int myHashCode -> c
    32:35:void update(char[],int,int) -> a
    37:69:void <init>(char[],int,int,boolean) -> <init>
    72:80:void apply(byte[],int) -> a
    83:95:boolean equals(java.lang.Object) -> equals
    99:110:int hashCode() -> hashCode
    127:137:java.lang.String toString() -> toString
org.geometerplus.zlibrary.text.hyphenation.ZLTextTeXHyphenator -> org.geometerplus.zlibrary.text.hyphenation.e:
    java.util.HashMap myPatternTable -> a
    java.lang.String myLanguage -> b
    java.util.List myLanguageCodes -> c
    29:30:void <init>() -> <init>
    35:36:void addPattern(org.geometerplus.zlibrary.text.hyphenation.ZLTextTeXHyphenationPattern) -> a
    40:54:java.util.List languageCodes() -> b
    58:72:void load(java.lang.String) -> a
    75:76:void unload() -> c
    79:108:void hyphenate(char[],boolean[],int) -> a
org.geometerplus.zlibrary.text.model.CachedCharStorage -> org.geometerplus.zlibrary.text.model.a:
    int myBlockSize -> b
    29:32:void <init>(int,java.lang.String,java.lang.String) -> <init>
    35:41:char[] createNewBlock(int) -> a
    45:63:void freezeLastBlock() -> a
    25:25:char[] block(int) -> b
    25:25:int size() -> b
org.geometerplus.zlibrary.text.model.CachedCharStorageBase -> org.geometerplus.zlibrary.text.model.b:
    java.util.ArrayList myArray -> a
    java.lang.String myDirectoryName -> b
    java.lang.String myFileExtension -> c
    27:36:void <init>(java.lang.String,java.lang.String) -> <init>
    39:39:java.lang.String fileName(int) -> c
    43:43:int size() -> b
    47:70:char[] block(int) -> b
org.geometerplus.zlibrary.text.model.CachedCharStorageException -> org.geometerplus.zlibrary.text.model.c:
    long serialVersionUID -> serialVersionUID
    26:27:void <init>(java.lang.String) -> <init>
org.geometerplus.zlibrary.text.model.CharStorage -> org.geometerplus.zlibrary.text.model.d:
    int size() -> b
    char[] block(int) -> b
    char[] createNewBlock(int) -> a
    void freezeLastBlock() -> a
org.geometerplus.zlibrary.text.model.ZLImageEntry -> org.geometerplus.zlibrary.text.model.e:
    java.util.Map myImageMap -> d
    java.lang.String Id -> a
    short VOffset -> b
    boolean IsCover -> c
    32:37:void <init>(java.util.Map,java.lang.String,short,boolean) -> <init>
    40:40:org.geometerplus.zlibrary.core.image.ZLImage getImage() -> a
org.geometerplus.zlibrary.text.model.ZLTextCSSStyleEntry -> org.geometerplus.zlibrary.text.model.f:
    23:24:void <init>() -> <init>
org.geometerplus.zlibrary.text.model.ZLTextMark -> org.geometerplus.zlibrary.text.model.g:
    int ParagraphIndex -> a
    int Offset -> b
    int Length -> c
    27:31:void <init>(int,int,int) -> <init>
    40:41:int compareTo(org.geometerplus.zlibrary.text.model.ZLTextMark) -> a
    45:45:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.zlibrary.text.model.ZLTextMetrics -> org.geometerplus.zlibrary.text.model.h:
    int DPI -> a
    int DefaultFontSize -> b
    int FontSize -> c
    int FontXHeight -> d
    int FullWidth -> e
    int FullHeight -> f
    30:37:void <init>(int,int,int,int,int,int) -> <init>
    41:48:boolean equals(java.lang.Object) -> equals
    57:57:int hashCode() -> hashCode
org.geometerplus.zlibrary.text.model.ZLTextModel -> org.geometerplus.zlibrary.text.model.i:
    java.lang.String getId() -> a
    java.lang.String getLanguage() -> b
    int getParagraphsNumber() -> c
    org.geometerplus.zlibrary.text.model.ZLTextParagraph getParagraph(int) -> a
    void removeAllMarks() -> d
    org.geometerplus.zlibrary.text.model.ZLTextMark getFirstMark() -> e
    org.geometerplus.zlibrary.text.model.ZLTextMark getLastMark() -> f
    org.geometerplus.zlibrary.text.model.ZLTextMark getNextMark(org.geometerplus.zlibrary.text.model.ZLTextMark) -> a
    org.geometerplus.zlibrary.text.model.ZLTextMark getPreviousMark(org.geometerplus.zlibrary.text.model.ZLTextMark) -> b
    java.util.List getMarks() -> g
    int getTextLength(int) -> b
    int findParagraphByTextLength(int) -> c
    int search(java.lang.String,int,int,boolean) -> a
org.geometerplus.zlibrary.text.model.ZLTextOtherStyleEntry -> org.geometerplus.zlibrary.text.model.j:
    23:24:void <init>() -> <init>
org.geometerplus.zlibrary.text.model.ZLTextParagraph -> org.geometerplus.zlibrary.text.model.k:
    org.geometerplus.zlibrary.text.model.ZLTextParagraph$EntryIterator iterator() -> a
    byte getKind() -> b
org.geometerplus.zlibrary.text.model.ZLTextParagraph$EntryIterator -> org.geometerplus.zlibrary.text.model.k$a:
    byte getType() -> a
    char[] getTextData() -> b
    int getTextOffset() -> c
    int getTextLength() -> d
    byte getControlKind() -> e
    boolean getControlIsStart() -> f
    byte getHyperlinkType() -> g
    java.lang.String getHyperlinkId() -> h
    org.geometerplus.zlibrary.text.model.ZLImageEntry getImageEntry() -> i
    org.geometerplus.zlibrary.text.model.ZLTextStyleEntry getStyleEntry() -> j
    short getFixedHSpaceLength() -> k
    boolean hasNext() -> l
    void next() -> m
org.geometerplus.zlibrary.text.model.ZLTextParagraphImpl -> org.geometerplus.zlibrary.text.model.l:
    org.geometerplus.zlibrary.text.model.ZLTextPlainModel myModel -> a
    int myIndex -> b
    26:29:void <init>(org.geometerplus.zlibrary.text.model.ZLTextPlainModel,int) -> <init>
    32:32:org.geometerplus.zlibrary.text.model.ZLTextParagraph$EntryIterator iterator() -> a
    36:36:byte getKind() -> b
org.geometerplus.zlibrary.text.model.ZLTextPlainModel -> org.geometerplus.zlibrary.text.model.m:
    java.lang.String myId -> i
    java.lang.String myLanguage -> j
    int[] myStartEntryIndices -> a
    int[] myStartEntryOffsets -> b
    int[] myParagraphLengths -> c
    int[] myTextSizes -> d
    byte[] myParagraphKinds -> e
    int myParagraphsNumber -> f
    org.geometerplus.zlibrary.text.model.CharStorage myStorage -> g
    java.util.Map myImageMap -> h
    java.util.ArrayList myMarks -> k
    245:255:void <init>(java.lang.String,java.lang.String,int[],int[],int[],int[],byte[],org.geometerplus.zlibrary.text.model.CharStorage,java.util.Map) -> <init>
    258:258:java.lang.String getId() -> a
    262:262:java.lang.String getLanguage() -> b
    266:266:org.geometerplus.zlibrary.text.model.ZLTextMark getFirstMark() -> e
    270:270:org.geometerplus.zlibrary.text.model.ZLTextMark getLastMark() -> f
    274:286:org.geometerplus.zlibrary.text.model.ZLTextMark getNextMark(org.geometerplus.zlibrary.text.model.ZLTextMark) -> a
    290:302:org.geometerplus.zlibrary.text.model.ZLTextMark getPreviousMark(org.geometerplus.zlibrary.text.model.ZLTextMark) -> b
    306:338:int search(java.lang.String,int,int,boolean) -> a
    342:342:java.util.List getMarks() -> g
    346:347:void removeAllMarks() -> d
    350:350:int getParagraphsNumber() -> c
    354:355:org.geometerplus.zlibrary.text.model.ZLTextParagraph getParagraph(int) -> a
    361:361:int getTextLength(int) -> b
    365:379:int binarySearch(int[],int,int) -> a
    383:387:int findParagraphByTextLength(int) -> c
org.geometerplus.zlibrary.text.model.ZLTextPlainModel$EntryIteratorImpl -> org.geometerplus.zlibrary.text.model.m$a:
    int myCounter -> d
    int myLength -> e
    byte myType -> f
    int myDataIndex -> a
    int myDataOffset -> b
    char[] myTextData -> g
    int myTextOffset -> h
    int myTextLength -> i
    byte myControlKind -> j
    boolean myControlIsStart -> k
    byte myHyperlinkType -> l
    java.lang.String myHyperlinkId -> m
    org.geometerplus.zlibrary.text.model.ZLImageEntry myImageEntry -> n
    org.geometerplus.zlibrary.text.model.ZLTextStyleEntry myStyleEntry -> o
    short myFixedHSpaceLength -> p
    org.geometerplus.zlibrary.text.model.ZLTextPlainModel this$0 -> c
    73:77:void <init>(org.geometerplus.zlibrary.text.model.ZLTextPlainModel,int) -> <init>
    80:84:void reset(int) -> a
    87:87:byte getType() -> a
    91:91:char[] getTextData() -> b
    94:94:int getTextOffset() -> c
    97:97:int getTextLength() -> d
    101:101:byte getControlKind() -> e
    104:104:boolean getControlIsStart() -> f
    107:107:byte getHyperlinkType() -> g
    110:110:java.lang.String getHyperlinkId() -> h
    114:114:org.geometerplus.zlibrary.text.model.ZLImageEntry getImageEntry() -> i
    118:118:org.geometerplus.zlibrary.text.model.ZLTextStyleEntry getStyleEntry() -> j
    122:122:short getFixedHSpaceLength() -> k
    126:126:boolean hasNext() -> l
    130:232:void next() -> m
org.geometerplus.zlibrary.text.model.ZLTextSpecialParagraphImpl -> org.geometerplus.zlibrary.text.model.n:
    byte myKind -> a
    26:28:void <init>(byte,org.geometerplus.zlibrary.text.model.ZLTextPlainModel,int) -> <init>
    31:31:byte getKind() -> b
org.geometerplus.zlibrary.text.model.ZLTextStyleEntry -> org.geometerplus.zlibrary.text.model.o:
    short myFeatureMask -> a
    org.geometerplus.zlibrary.text.model.ZLTextStyleEntry$Length[] myLengths -> b
    byte myAlignmentType -> c
    java.lang.String myFontFamily -> d
    byte mySupportedFontModifiers -> e
    byte myFontModifiers -> f
    76:76:boolean isFeatureSupported(short,int) -> a
    69:80:void <init>() -> <init>
    83:83:boolean isFeatureSupported(int) -> a
    87:89:void setLength(int,short,byte) -> a
    92:102:int fullSize(org.geometerplus.zlibrary.text.model.ZLTextMetrics,int) -> a
    107:121:int getLength(int,org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> a
    126:128:void setAlignmentType(byte) -> a
    131:131:byte getAlignmentType() -> a
    135:137:void setFontFamily(java.lang.String) -> a
    144:147:void setFontModifiers(byte,byte) -> a
    160:163:org.geometerplus.zlibrary.core.util.ZLBoolean3 getFontModifier(byte) -> b
org.geometerplus.zlibrary.text.model.ZLTextStyleEntry$Length -> org.geometerplus.zlibrary.text.model.o$a:
    short Size -> a
    byte Unit -> b
    org.geometerplus.zlibrary.text.model.ZLTextStyleEntry this$0 -> c
    61:64:void <init>(org.geometerplus.zlibrary.text.model.ZLTextStyleEntry,short,byte) -> <init>
org.geometerplus.zlibrary.text.model.ZLTextWritableModel -> org.geometerplus.zlibrary.text.model.p:
    void createParagraph(byte) -> a
    void addText(char[],int,int) -> a
    void addImage(java.lang.String,short,boolean) -> a
    void addControl(byte,boolean) -> a
    void addHyperlinkControl(byte,byte,java.lang.String) -> a
    void addFixedHSpace(short) -> a
    void stopReading() -> h
org.geometerplus.zlibrary.text.model.ZLTextWritablePlainModel -> org.geometerplus.zlibrary.text.model.q:
    char[] myCurrentDataBlock -> i
    int myBlockOffset -> j
    32:40:void <init>(java.lang.String,java.lang.String,int,int,java.lang.String,java.lang.String,java.util.Map) -> <init>
    43:49:void extend() -> i
    52:66:void createParagraph(byte) -> a
    69:78:char[] getDataBlock(int) -> d
    86:95:void addText(char[],int,int) -> a
    98:109:void addImage(java.lang.String,short,boolean) -> a
    112:120:void addControl(byte,boolean) -> a
    123:132:void addHyperlinkControl(byte,byte,java.lang.String) -> a
    158:162:void addFixedHSpace(short) -> a
    182:182:void stopReading() -> h
org.geometerplus.zlibrary.text.view.ZLTextControlElement -> org.geometerplus.zlibrary.text.view.a:
    org.geometerplus.zlibrary.text.view.ZLTextControlElement[] myStartElements -> g
    org.geometerplus.zlibrary.text.view.ZLTextControlElement[] myEndElements -> h
    byte Kind -> a
    boolean IsStart -> b
    27:33:org.geometerplus.zlibrary.text.view.ZLTextControlElement get(byte,boolean) -> a
    39:42:void <init>(byte,boolean) -> <init>
    23:24:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextElement -> org.geometerplus.zlibrary.text.view.b:
    org.geometerplus.zlibrary.text.view.ZLTextElement HSpace -> c
    org.geometerplus.zlibrary.text.view.ZLTextElement AfterParagraph -> d
    org.geometerplus.zlibrary.text.view.ZLTextElement Indent -> e
    org.geometerplus.zlibrary.text.view.ZLTextElement StyleClose -> f
    22:22:void <init>() -> <init>
    23:26:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextElementArea -> org.geometerplus.zlibrary.text.view.c:
    int XStart -> a
    int XEnd -> b
    int YStart -> c
    int YEnd -> d
    int Length -> e
    boolean AddHyphenationSign -> f
    boolean ChangeStyle -> g
    org.geometerplus.zlibrary.text.view.ZLTextStyle Style -> h
    org.geometerplus.zlibrary.text.view.ZLTextElement Element -> i
    boolean myIsLastInElement -> j
    37:51:void <init>(int,int,int,int,boolean,boolean,boolean,org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.view.ZLTextElement,int,int,int,int) -> <init>
    58:58:boolean isFirstInElement() -> a
    62:62:boolean isLastInElement() -> b
org.geometerplus.zlibrary.text.view.ZLTextElementAreaVector -> org.geometerplus.zlibrary.text.view.d:
    java.util.List myAreas -> a
    java.util.List myElementRegions -> b
    org.geometerplus.zlibrary.text.view.ZLTextRegion myCurrentElementRegion -> c
    24:28:void <init>() -> <init>
    32:35:void clear() -> a
    38:38:int size() -> b
    43:43:org.geometerplus.zlibrary.text.view.ZLTextElementArea get(int) -> a
    47:49:org.geometerplus.zlibrary.text.view.ZLTextElementArea getFirstArea() -> c
    53:55:org.geometerplus.zlibrary.text.view.ZLTextElementArea getLastArea() -> d
    59:81:boolean add(org.geometerplus.zlibrary.text.view.ZLTextElementArea) -> a
    85:95:org.geometerplus.zlibrary.text.view.ZLTextElementArea getFirstAfter(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> a
    99:110:org.geometerplus.zlibrary.text.view.ZLTextElementArea getLastBefore(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> b
    137:147:org.geometerplus.zlibrary.text.view.ZLTextRegion getRegion(org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul) -> a
    151:164:org.geometerplus.zlibrary.text.view.ZLTextRegion findRegion(int,int,int,org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter) -> a
    168:253:org.geometerplus.zlibrary.text.view.ZLTextRegion nextRegion(org.geometerplus.zlibrary.text.view.ZLTextRegion,org.geometerplus.zlibrary.core.view.ZLView$Direction,org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter) -> a
org.geometerplus.zlibrary.text.view.ZLTextElementAreaVector$1 -> org.geometerplus.zlibrary.text.view.e:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$Direction -> a
    175:175:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextFixedHSpaceElement -> org.geometerplus.zlibrary.text.view.f:
    org.geometerplus.zlibrary.text.view.ZLTextElement[] ourCollection -> b
    short Length -> a
    26:34:org.geometerplus.zlibrary.text.view.ZLTextElement getElement(short) -> a
    40:42:void <init>(short) -> <init>
    23:23:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextFixedPosition -> org.geometerplus.zlibrary.text.view.g:
    int ParagraphIndex -> ParagraphIndex
    int ElementIndex -> ElementIndex
    int CharIndex -> CharIndex
    27:31:void <init>(int,int,int) -> <init>
    33:37:void <init>(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> <init>
    40:40:int getParagraphIndex() -> getParagraphIndex
    44:44:int getElementIndex() -> getElementIndex
    48:48:int getCharIndex() -> getCharIndex
org.geometerplus.zlibrary.text.view.ZLTextHighlighting -> org.geometerplus.zlibrary.text.view.h:
    24:24:void <init>() -> <init>
    boolean isEmpty() -> b
    org.geometerplus.zlibrary.text.view.ZLTextPosition getStartPosition() -> c
    org.geometerplus.zlibrary.text.view.ZLTextPosition getEndPosition() -> d
    org.geometerplus.zlibrary.text.view.ZLTextElementArea getStartArea(org.geometerplus.zlibrary.text.view.ZLTextPage) -> a
    org.geometerplus.zlibrary.text.view.ZLTextElementArea getEndArea(org.geometerplus.zlibrary.text.view.ZLTextPage) -> b
    org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    35:39:boolean intersects(org.geometerplus.zlibrary.text.view.ZLTextPage) -> c
    43:47:boolean intersects(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
    51:52:int compareTo(org.geometerplus.zlibrary.text.view.ZLTextHighlighting) -> a
    24:24:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.zlibrary.text.view.ZLTextHorizontalConvexHull -> org.geometerplus.zlibrary.text.view.i:
    java.util.LinkedList myRectangles -> a
    27:34:void <init>(org.geometerplus.zlibrary.text.view.ZLTextElementArea[]) -> <init>
    37:78:void addArea(org.geometerplus.zlibrary.text.view.ZLTextElementArea) -> a
    81:105:void normalize() -> a
    108:117:int distanceTo(int,int) -> a
    121:183:void draw(org.geometerplus.zlibrary.core.view.ZLPaintContext) -> a
org.geometerplus.zlibrary.text.view.ZLTextHorizontalConvexHull$Rectangle -> org.geometerplus.zlibrary.text.view.i$a:
    int Left -> a
    int Right -> b
    int Top -> c
    int Bottom -> d
    191:196:void <init>(int,int,int,int) -> <init>
    198:203:void <init>(org.geometerplus.zlibrary.text.view.ZLTextHorizontalConvexHull$Rectangle) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextHyperlink -> org.geometerplus.zlibrary.text.view.j:
    byte Type -> a
    java.lang.String Id -> b
    java.util.List myElementIndexes -> d
    org.geometerplus.zlibrary.text.view.ZLTextHyperlink NO_LINK -> c
    32:35:void <init>(byte,java.lang.String) -> <init>
    38:42:void addElementIndex(int) -> a
    45:47:java.util.List elementIndexes() -> a
    30:30:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextHyperlinkControlElement -> org.geometerplus.zlibrary.text.view.k:
    org.geometerplus.zlibrary.text.view.ZLTextHyperlink Hyperlink -> g
    26:28:void <init>(byte,byte,java.lang.String) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextHyperlinkRegionSoul -> org.geometerplus.zlibrary.text.view.l:
    org.geometerplus.zlibrary.text.view.ZLTextHyperlink Hyperlink -> a
    28:29:int startElementIndex(org.geometerplus.zlibrary.text.view.ZLTextHyperlink,int) -> a
    33:34:int endElementIndex(org.geometerplus.zlibrary.text.view.ZLTextHyperlink,int) -> b
    38:44:void <init>(org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextImageElement -> org.geometerplus.zlibrary.text.view.m:
    java.lang.String Id -> a
    org.geometerplus.zlibrary.core.image.ZLImageData ImageData -> b
    java.lang.String URL -> g
    boolean IsCover -> h
    30:35:void <init>(java.lang.String,org.geometerplus.zlibrary.core.image.ZLImageData,java.lang.String,boolean) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextImageRegionSoul -> org.geometerplus.zlibrary.text.view.n:
    org.geometerplus.zlibrary.text.view.ZLTextImageElement ImageElement -> a
    26:28:void <init>(org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextImageElement) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextLineInfo -> org.geometerplus.zlibrary.text.view.o:
    org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor ParagraphCursor -> a
    int ParagraphCursorLength -> b
    int StartElementIndex -> c
    int StartCharIndex -> d
    int RealStartElementIndex -> e
    int RealStartCharIndex -> f
    int EndElementIndex -> g
    int EndCharIndex -> h
    boolean IsVisible -> i
    int LeftIndent -> j
    int Width -> k
    int Height -> l
    int Descent -> m
    int VSpaceAfter -> n
    int SpaceCounter -> o
    org.geometerplus.zlibrary.text.view.ZLTextStyle StartStyle -> p
    42:54:void <init>(org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor,int,int,org.geometerplus.zlibrary.text.view.ZLTextStyle) -> <init>
    57:57:boolean isEndOfParagraph() -> a
    61:62:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
org.geometerplus.zlibrary.text.view.ZLTextManualHighlighting -> org.geometerplus.zlibrary.text.view.p:
    26:27:void <init>(org.geometerplus.zlibrary.text.view.ZLTextView,org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> <init>
    31:31:org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> a
org.geometerplus.zlibrary.text.view.ZLTextPage -> org.geometerplus.zlibrary.text.view.q:
    org.geometerplus.zlibrary.text.view.ZLTextWordCursor StartCursor -> a
    org.geometerplus.zlibrary.text.view.ZLTextWordCursor EndCursor -> b
    java.util.ArrayList LineInfos -> c
    int Column0Height -> d
    int PaintState -> e
    org.geometerplus.zlibrary.text.view.ZLTextElementAreaVector TextElementMap -> f
    int myColumnWidth -> g
    int myHeight -> h
    boolean myTwoColumnView -> i
    24:31:void <init>() -> <init>
    38:65:void setSize(int,int,boolean,boolean) -> a
    68:72:void reset() -> a
    75:79:void moveStartCursor(org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor) -> a
    82:90:void moveStartCursor(int,int,int) -> a
    93:106:void moveEndCursor(int,int,int) -> b
    109:109:int getTextWidth() -> b
    113:113:int getTextHeight() -> c
    117:117:boolean twoColumnView() -> d
    121:126:boolean isEmptyPage() -> e
    130:146:void findLineFromStart(org.geometerplus.zlibrary.text.view.ZLTextWordCursor,int) -> a
    149:167:void findLineFromEnd(org.geometerplus.zlibrary.text.view.ZLTextWordCursor,int) -> b
    170:189:void findPercentFromStart(org.geometerplus.zlibrary.text.view.ZLTextWordCursor,int) -> c
org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor -> org.geometerplus.zlibrary.text.view.r:
    int Index -> a
    org.geometerplus.zlibrary.text.model.ZLTextModel Model -> b
    java.util.ArrayList myElements -> c
    char[] SPACE_ARRAY -> d
    197:203:void <init>(org.geometerplus.zlibrary.text.model.ZLTextModel,int) -> <init>
    206:211:org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor cursor(org.geometerplus.zlibrary.text.model.ZLTextModel,int) -> a
    216:227:void fill() -> a
    230:231:void clear() -> b
    234:234:boolean isFirst() -> c
    238:238:boolean isLast() -> d
    242:242:boolean isEndOfSection() -> e
    246:246:int getParagraphLength() -> f
    250:250:org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor previous() -> g
    254:254:org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor next() -> h
    259:261:org.geometerplus.zlibrary.text.view.ZLTextElement getElement(int) -> a
    271:271:java.lang.String toString() -> toString
    214:214:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor$1 -> org.geometerplus.zlibrary.text.view.s:
org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor$Processor -> org.geometerplus.zlibrary.text.view.r$a:
    org.geometerplus.zlibrary.text.model.ZLTextParagraph myParagraph -> a
    org.vimgadgets.linebreak.LineBreaker myLineBreaker -> b
    java.util.ArrayList myElements -> c
    int myOffset -> d
    int myFirstMark -> e
    int myLastMark -> f
    java.util.List myMarks -> g
    byte[] ourBreaks -> h
    38:54:void <init>(org.geometerplus.zlibrary.text.model.ZLTextParagraph,org.vimgadgets.linebreak.LineBreaker,java.util.List,int,java.util.ArrayList) -> <init>
    57:115:void fill() -> a
    122:178:void processTextEntry(char[],int,int,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> a
    181:192:void addWord(char[],int,int,int,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> a
    29:29:void <init>(org.geometerplus.zlibrary.text.model.ZLTextParagraph,org.vimgadgets.linebreak.LineBreaker,java.util.List,int,java.util.ArrayList,org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor$1) -> <init>
    117:117:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextParagraphCursorCache -> org.geometerplus.zlibrary.text.view.t:
    java.util.HashMap ourMap -> a
    50:51:void put(org.geometerplus.zlibrary.text.model.ZLTextModel,int,org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor) -> a
    54:55:org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor get(org.geometerplus.zlibrary.text.model.ZLTextModel,int) -> a
    59:60:void clear() -> a
    47:47:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextParagraphCursorCache$Key -> org.geometerplus.zlibrary.text.view.t$a:
    org.geometerplus.zlibrary.text.model.ZLTextModel myModel -> a
    int myIndex -> b
    32:35:void <init>(org.geometerplus.zlibrary.text.model.ZLTextModel,int) -> <init>
    38:39:boolean equals(java.lang.Object) -> equals
    43:43:int hashCode() -> hashCode
org.geometerplus.zlibrary.text.view.ZLTextPosition -> org.geometerplus.zlibrary.text.view.u:
    22:22:void <init>() -> <init>
    int getParagraphIndex() -> getParagraphIndex
    int getElementIndex() -> getElementIndex
    int getCharIndex() -> getCharIndex
    28:31:boolean samePositionAs(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> samePositionAs
    35:53:int compareTo(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> compareTo
    58:58:int hashCode() -> hashCode
    63:73:boolean equals(java.lang.Object) -> equals
    78:78:java.lang.String toString() -> toString
    22:22:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.zlibrary.text.view.ZLTextRegion -> org.geometerplus.zlibrary.text.view.v:
    org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter AnyRegionFilter -> a
    org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter HyperlinkFilter -> b
    org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter ImageOrHyperlinkFilter -> c
    org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul mySoul -> d
    java.util.List myAreaList -> e
    org.geometerplus.zlibrary.text.view.ZLTextElementArea[] myAreas -> f
    int myFromIndex -> g
    int myToIndex -> h
    org.geometerplus.zlibrary.text.view.ZLTextHorizontalConvexHull myHull -> i
    132:137:void <init>(org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul,java.util.List,int) -> <init>
    140:142:void extend() -> a
    145:145:org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul getSoul() -> b
    149:157:org.geometerplus.zlibrary.text.view.ZLTextElementArea[] textAreas() -> g
    160:163:org.geometerplus.zlibrary.text.view.ZLTextHorizontalConvexHull convexHull() -> h
    167:167:org.geometerplus.zlibrary.text.view.ZLTextElementArea getFirstArea() -> c
    171:172:org.geometerplus.zlibrary.text.view.ZLTextElementArea getLastArea() -> d
    176:176:int getTop() -> e
    180:180:int getBottom() -> f
    184:185:void draw(org.geometerplus.zlibrary.core.view.ZLPaintContext) -> a
    188:188:int distanceTo(int,int) -> a
    192:194:boolean isAtRightOf(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
    198:198:boolean isAtLeftOf(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> b
    202:204:boolean isUnder(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> c
    208:208:boolean isOver(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> d
    212:227:boolean isExactlyUnder(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> e
    231:231:boolean isExactlyOver(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> f
    103:115:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextRegion$1 -> org.geometerplus.zlibrary.text.view.w:
    103:103:void <init>() -> <init>
    105:105:boolean accepts(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
org.geometerplus.zlibrary.text.view.ZLTextRegion$2 -> org.geometerplus.zlibrary.text.view.x:
    109:109:void <init>() -> <init>
    111:111:boolean accepts(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
org.geometerplus.zlibrary.text.view.ZLTextRegion$3 -> org.geometerplus.zlibrary.text.view.y:
    115:115:void <init>() -> <init>
    117:118:boolean accepts(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter -> org.geometerplus.zlibrary.text.view.v$a:
    boolean accepts(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul -> org.geometerplus.zlibrary.text.view.v$b:
    int ParagraphIndex -> b
    int StartElementIndex -> c
    int EndElementIndex -> d
    32:36:void <init>(int,int,int) -> <init>
    39:39:boolean accepts(org.geometerplus.zlibrary.text.view.ZLTextElementArea) -> a
    44:51:boolean equals(java.lang.Object) -> equals
    58:67:int compareTo(org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul) -> a
    71:80:int compareTo(org.geometerplus.zlibrary.text.view.ZLTextElementArea) -> b
    84:95:int compareTo(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> a
    27:27:int compareTo(java.lang.Object) -> compareTo
org.geometerplus.zlibrary.text.view.ZLTextSelection -> org.geometerplus.zlibrary.text.view.z:
    org.geometerplus.zlibrary.text.view.ZLTextView myView -> a
    org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul myLeftMostRegionSoul -> b
    org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul myRightMostRegionSoul -> c
    org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor myCursorInMovement -> d
    org.geometerplus.zlibrary.text.view.ZLTextSelection$Point myCursorInMovementPoint -> e
    org.geometerplus.zlibrary.text.view.ZLTextSelection$Scroller myScroller -> f
    40:48:void <init>(org.geometerplus.zlibrary.text.view.ZLTextView) -> <init>
    52:52:boolean isEmpty() -> b
    56:64:boolean clear() -> e
    68:71:void setCursorInMovement(org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor,int,int) -> a
    74:74:org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor getCursorInMovement() -> f
    78:78:org.geometerplus.zlibrary.text.view.ZLTextSelection$Point getCursorInMovementPoint() -> g
    82:92:boolean start(int,int) -> a
    96:101:void stop() -> h
    104:180:void expandTo(org.geometerplus.zlibrary.text.view.ZLTextPage,int,int) -> a
    183:186:boolean isAreaSelected(org.geometerplus.zlibrary.text.view.ZLTextElementArea) -> a
    191:194:org.geometerplus.zlibrary.text.view.ZLTextPosition getStartPosition() -> c
    203:209:org.geometerplus.zlibrary.text.view.ZLTextPosition getEndPosition() -> d
    218:230:org.geometerplus.zlibrary.text.view.ZLTextElementArea getStartArea(org.geometerplus.zlibrary.text.view.ZLTextPage) -> a
    235:247:org.geometerplus.zlibrary.text.view.ZLTextElementArea getEndArea(org.geometerplus.zlibrary.text.view.ZLTextPage) -> b
    251:259:boolean hasPartBeforePage(org.geometerplus.zlibrary.text.view.ZLTextPage) -> d
    263:271:boolean hasPartAfterPage(org.geometerplus.zlibrary.text.view.ZLTextPage) -> e
    276:276:org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    24:24:org.geometerplus.zlibrary.text.view.ZLTextView access$100(org.geometerplus.zlibrary.text.view.ZLTextSelection) -> a
org.geometerplus.zlibrary.text.view.ZLTextSelection$Point -> org.geometerplus.zlibrary.text.view.z$a:
    int X -> a
    int Y -> b
    29:32:void <init>(int,int) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextSelection$Scroller -> org.geometerplus.zlibrary.text.view.z$b:
    org.geometerplus.zlibrary.text.view.ZLTextPage myPage -> b
    boolean myScrollForward -> c
    int myX -> d
    int myY -> e
    org.geometerplus.zlibrary.text.view.ZLTextSelection this$0 -> a
    284:289:void <init>(org.geometerplus.zlibrary.text.view.ZLTextSelection,org.geometerplus.zlibrary.text.view.ZLTextPage,boolean,int,int) -> <init>
    292:292:boolean scrollsForward() -> a
    296:298:void setXY(int,int) -> a
    301:306:void run() -> run
    309:310:void stop() -> b
    279:279:void access$000(org.geometerplus.zlibrary.text.view.ZLTextSelection$Scroller) -> a
org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor -> org.geometerplus.zlibrary.text.view.aa:
    org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor None -> a
    org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor Left -> b
    org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor Right -> c
    int ourHeight -> d
    int ourWidth -> e
    int ourAccent -> f
    org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor[] $VALUES -> g
    24:24:org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor[] values() -> values
    24:24:org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor valueOf(java.lang.String) -> valueOf
    24:24:void <init>(java.lang.String,int) -> <init>
    34:40:void init() -> d
    43:44:int getHeight() -> a
    48:49:int getWidth() -> b
    53:54:int getAccent() -> c
    24:27:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextSimpleHighlighting -> org.geometerplus.zlibrary.text.view.ab:
    org.geometerplus.zlibrary.text.view.ZLTextView View -> c
    org.geometerplus.zlibrary.text.view.ZLTextPosition myStartPosition -> a
    org.geometerplus.zlibrary.text.view.ZLTextPosition myEndPosition -> b
    27:31:void <init>(org.geometerplus.zlibrary.text.view.ZLTextView,org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> <init>
    35:35:boolean isEmpty() -> b
    40:40:org.geometerplus.zlibrary.text.view.ZLTextPosition getStartPosition() -> c
    45:45:org.geometerplus.zlibrary.text.view.ZLTextPosition getEndPosition() -> d
    50:50:org.geometerplus.zlibrary.text.view.ZLTextElementArea getStartArea(org.geometerplus.zlibrary.text.view.ZLTextPage) -> a
    55:55:org.geometerplus.zlibrary.text.view.ZLTextElementArea getEndArea(org.geometerplus.zlibrary.text.view.ZLTextPage) -> b
org.geometerplus.zlibrary.text.view.ZLTextStyle -> org.geometerplus.zlibrary.text.view.ac:
    org.geometerplus.zlibrary.text.view.ZLTextStyle Base -> a
    org.geometerplus.zlibrary.text.view.ZLTextHyperlink Hyperlink -> b
    28:31:void <init>(org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> <init>
    java.lang.String getFontFamily() -> a
    int getFontSize(org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> a
    boolean isBold() -> b
    boolean isItalic() -> c
    boolean isUnderline() -> d
    boolean isStrikeThrough() -> e
    int getLeftIndent() -> f
    int getRightIndent() -> g
    int getFirstLineIndentDelta() -> h
    int getLineSpacePercent() -> i
    int getVerticalShift() -> j
    int getSpaceBefore() -> k
    int getSpaceAfter() -> l
    byte getAlignment() -> m
    boolean allowHyphenations() -> n
org.geometerplus.zlibrary.text.view.ZLTextStyleElement -> org.geometerplus.zlibrary.text.view.ad:
    org.geometerplus.zlibrary.text.model.ZLTextStyleEntry Entry -> a
    27:29:void <init>(org.geometerplus.zlibrary.text.model.ZLTextStyleEntry) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextTraverser -> org.geometerplus.zlibrary.text.view.ae:
    org.geometerplus.zlibrary.text.view.ZLTextView myView -> a
    25:27:void <init>(org.geometerplus.zlibrary.text.view.ZLTextView) -> <init>
    void processWord(org.geometerplus.zlibrary.text.view.ZLTextWord) -> a
    void processSpace() -> a
    void processEndOfParagraph() -> b
    35:56:void traverse(org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> a
org.geometerplus.zlibrary.text.view.ZLTextView -> org.geometerplus.zlibrary.text.view.af:
    org.geometerplus.zlibrary.text.model.ZLTextModel myModel -> b
    int myScrollingMode -> c
    int myOverlappingValue -> d
    org.geometerplus.zlibrary.text.view.ZLTextPage myPreviousPage -> e
    org.geometerplus.zlibrary.text.view.ZLTextPage myCurrentPage -> f
    org.geometerplus.zlibrary.text.view.ZLTextPage myNextPage -> g
    java.util.HashMap myLineInfoCache -> h
    org.geometerplus.zlibrary.text.view.ZLTextRegion$Soul mySelectedRegionSoul -> i
    boolean myHighlightSelectedRegion -> j
    org.geometerplus.zlibrary.text.view.ZLTextSelection mySelection -> k
    java.util.Set myHighlightings -> l
    char[] ourDefaultLetters -> m
    char[] myLettersBuffer -> n
    int myLettersBufferLength -> o
    org.geometerplus.zlibrary.text.model.ZLTextModel myLettersModel -> p
    float myCharWidth -> q
    char[] SPACE -> r
    66:713:void <init>(org.geometerplus.zlibrary.core.application.ZLApplication) -> <init>
    84:101:void setModel(org.geometerplus.zlibrary.text.model.ZLTextModel) -> a
    104:104:org.geometerplus.zlibrary.text.model.ZLTextModel getModel() -> A
    108:111:org.geometerplus.zlibrary.text.view.ZLTextWordCursor getStartCursor() -> B
    115:118:org.geometerplus.zlibrary.text.view.ZLTextWordCursor getEndCursor() -> C
    122:157:void gotoMark(org.geometerplus.zlibrary.text.model.ZLTextMark) -> a
    160:190:void gotoHighlighting(org.geometerplus.zlibrary.text.view.ZLTextHighlighting) -> a
    194:217:int search(java.lang.String,boolean,boolean,boolean,boolean) -> a
    221:223:boolean canFindNext() -> D
    227:231:void findNext() -> E
    234:236:boolean canFindPrevious() -> F
    240:244:void findPrevious() -> G
    247:253:void clearFindResults() -> H
    256:256:boolean findResultsAreEmpty() -> I
    261:305:void onScrollingFinished(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> a
    308:319:boolean removeHighlightings(java.lang.Class) -> a
    323:325:void highlight(org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextPosition) -> a
    328:331:void addHighlighting(org.geometerplus.zlibrary.text.view.ZLTextHighlighting) -> b
    340:344:void clearHighlighting() -> J
    348:354:void moveSelectionCursorTo(org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor,int,int) -> a
    357:360:void releaseSelectionCursor() -> p
    363:363:org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor getSelectionCursorInMovement() -> K
    368:397:org.geometerplus.zlibrary.text.view.ZLTextSelection$Point getSelectionCursorPoint(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor) -> a
    401:425:int distanceToCursor(int,int,org.geometerplus.zlibrary.text.view.ZLTextSelection$Point) -> a
    429:429:org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor findSelectionCursor(int,int) -> j
    434:453:org.geometerplus.zlibrary.text.view.ZLTextSelectionCursor findSelectionCursor(int,int,int) -> a
    460:473:void drawSelectionCursor(org.geometerplus.zlibrary.core.view.ZLPaintContext,org.geometerplus.zlibrary.text.view.ZLTextSelection$Point) -> a
    478:480:void preparePage(org.geometerplus.zlibrary.core.view.ZLPaintContext,org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> a
    484:578:void paint(org.geometerplus.zlibrary.core.view.ZLPaintContext,org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> b
    581:588:org.geometerplus.zlibrary.text.view.ZLTextPage getPage(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> e
    int scrollbarType() -> s
    600:601:boolean isScrollbarShown() -> y
    610:613:int sizeOfFullText() -> L
    618:630:int getCurrentCharNumber(org.geometerplus.zlibrary.core.view.ZLView$PageIndex,boolean) -> a
    636:636:int getScrollbarFullSize() -> z
    641:642:int getScrollbarThumbPosition(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> b
    647:650:int getScrollbarThumbLength(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> c
    654:666:int sizeOfTextBeforeCursor(org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> a
    671:694:float computeCharsPerPage() -> o
    698:704:int computeTextPageNumber(int) -> b
    716:757:float computeCharWidth() -> q
    761:761:float computeCharWidth(char[],int) -> a
    776:819:org.geometerplus.zlibrary.text.view.ZLTextView$PagePosition pagePosition() -> M
    823:824:org.geometerplus.zlibrary.core.util.RationalNumber getProgress() -> N
    828:865:void gotoPage(int) -> a
    868:875:void gotoHome() -> O
    879:932:void drawHighlightings(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextLineInfo,int,int,int,int) -> a
    938:1004:void drawTextLine(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextLineInfo,int,int) -> a
    1008:1061:void buildInfos(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextWordCursor,org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> a
    1064:1065:boolean isHyphenationPossible() -> r
    1071:1261:org.geometerplus.zlibrary.text.view.ZLTextLineInfo processTextLine(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor,int,int,int) -> a
    1266:1371:void prepareTextLine(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextLineInfo,int,int) -> b
    1375:1384:void scrollPage(boolean,int,int) -> a
    1387:1391:void gotoPosition(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> a
    1395:1405:void gotoPosition(int,int,int) -> b
    1409:1418:void gotoPositionByEnd(int,int,int) -> d
    1421:1424:void preparePaintInfo() -> P
    1427:1558:void preparePaintInfo(org.geometerplus.zlibrary.text.view.ZLTextPage) -> a
    1561:1565:void clearCaches() -> Q
    1568:1586:void rebuildPaintInfo() -> R
    1589:1589:int infoSize(org.geometerplus.zlibrary.text.view.ZLTextLineInfo,int) -> a
    1595:1617:int paragraphSize(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextWordCursor,boolean,int) -> a
    1622:1639:void skip(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextWordCursor,int,int) -> a
    1643:1648:org.geometerplus.zlibrary.text.view.ZLTextWordCursor findStartOfPrevousPage(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> a
    1653:1684:org.geometerplus.zlibrary.text.view.ZLTextWordCursor findStart(org.geometerplus.zlibrary.text.view.ZLTextPage,org.geometerplus.zlibrary.text.view.ZLTextWordCursor,int,int) -> b
    1692:1694:void hideSelectedRegionBorder() -> S
    1697:1697:org.geometerplus.zlibrary.text.view.ZLTextRegion getSelectedRegion(org.geometerplus.zlibrary.text.view.ZLTextPage) -> b
    1701:1701:org.geometerplus.zlibrary.text.view.ZLTextRegion getSelectedRegion() -> T
    1705:1717:org.geometerplus.zlibrary.text.view.ZLTextHighlighting findHighlighting(int,int,int) -> c
    1721:1721:org.geometerplus.zlibrary.text.view.ZLTextRegion findRegion(int,int,org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter) -> a
    1727:1727:org.geometerplus.zlibrary.text.view.ZLTextRegion findRegion(int,int,int,org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter) -> a
    1732:1737:void selectRegion(org.geometerplus.zlibrary.text.view.ZLTextRegion) -> a
    1740:1747:boolean initSelection(int,int) -> k
    1751:1755:void clearSelection() -> U
    1758:1773:int getSelectionStartY() -> V
    1778:1793:int getSelectionEndY() -> W
    1798:1798:org.geometerplus.zlibrary.text.view.ZLTextPosition getSelectionStartPosition() -> X
    1802:1802:org.geometerplus.zlibrary.text.view.ZLTextPosition getSelectionEndPosition() -> Y
    1806:1806:boolean isSelectionEmpty() -> Z
    1816:1816:org.geometerplus.zlibrary.text.view.ZLTextRegion nextRegion(org.geometerplus.zlibrary.core.view.ZLView$Direction,org.geometerplus.zlibrary.text.view.ZLTextRegion$Filter) -> a
    1822:1832:boolean canScroll(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> d
    707:934:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextView$1 -> org.geometerplus.zlibrary.text.view.ag:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$PageIndex -> a
    261:261:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextView$PagePosition -> org.geometerplus.zlibrary.text.view.af$a:
    int Current -> a
    int Total -> b
    769:772:void <init>(int,int) -> <init>
org.geometerplus.zlibrary.text.view.ZLTextViewBase -> org.geometerplus.zlibrary.text.view.ah:
    org.geometerplus.zlibrary.text.view.ZLTextStyle myTextStyle -> b
    int myWordHeight -> c
    org.geometerplus.zlibrary.text.model.ZLTextMetrics myMetrics -> d
    char[] myWordPartArray -> e
    39:235:void <init>(org.geometerplus.zlibrary.core.application.ZLApplication) -> <init>
    48:49:void resetMetrics() -> aa
    52:67:org.geometerplus.zlibrary.text.model.ZLTextMetrics metrics() -> o
    71:75:int getWordHeight() -> ab
    org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting getImageFitting() -> b
    int getLeftMargin() -> c
    int getRightMargin() -> d
    int getTopMargin() -> e
    int getBottomMargin() -> f
    int getSpaceBetweenColumns() -> g
    boolean twoColumnView() -> h
    org.geometerplus.zlibrary.core.filesystem.ZLFile getWallpaperFile() -> i
    org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode getWallpaperMode() -> j
    org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> k
    org.geometerplus.zlibrary.core.util.ZLColor getSelectionBackgroundColor() -> l
    org.geometerplus.zlibrary.core.util.ZLColor getSelectionForegroundColor() -> m
    org.geometerplus.zlibrary.core.util.ZLColor getHighlightingBackgroundColor() -> n
    org.geometerplus.zlibrary.core.util.ZLColor getTextColor(org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> a
    97:97:org.geometerplus.zlibrary.core.view.ZLPaintContext$Size getTextAreaSize() -> ac
    101:101:int getTextAreaHeight() -> ad
    105:107:int getTextColumnWidth() -> ae
    111:111:org.geometerplus.zlibrary.text.view.ZLTextStyle getTextStyle() -> af
    115:120:void setTextStyle(org.geometerplus.zlibrary.text.view.ZLTextStyle) -> a
    123:124:void resetTextStyle() -> ag
    127:127:boolean isStyleChangeElement(org.geometerplus.zlibrary.text.view.ZLTextElement) -> a
    134:141:void applyStyleChangeElement(org.geometerplus.zlibrary.text.view.ZLTextElement) -> b
    144:147:void applyStyleChanges(org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor,int,int) -> a
    150:161:void applyControl(org.geometerplus.zlibrary.text.view.ZLTextControlElement) -> a
    164:165:void applyStyle(org.geometerplus.zlibrary.text.view.ZLTextStyleElement) -> a
    168:169:void applyStyleClose() -> p
    172:181:org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType getScalingType(org.geometerplus.zlibrary.text.view.ZLTextImageElement) -> a
    186:201:int getElementWidth(org.geometerplus.zlibrary.text.view.ZLTextElement,int) -> a
    205:217:int getElementHeight(org.geometerplus.zlibrary.text.view.ZLTextElement) -> c
    221:221:int getElementDescent(org.geometerplus.zlibrary.text.view.ZLTextElement) -> d
    225:228:int getWordWidth(org.geometerplus.zlibrary.text.view.ZLTextWord,int) -> a
    238:254:int getWordWidth(org.geometerplus.zlibrary.text.view.ZLTextWord,int,int,boolean) -> a
    273:294:void drawWord(int,int,org.geometerplus.zlibrary.text.view.ZLTextWord,int,int,boolean,org.geometerplus.zlibrary.core.util.ZLColor) -> a
    297:336:void drawString(int,int,char[],int,int,org.geometerplus.zlibrary.text.view.ZLTextWord$Mark,int) -> a
org.geometerplus.zlibrary.text.view.ZLTextViewBase$1 -> org.geometerplus.zlibrary.text.view.ai:
    int[] $SwitchMap$org$geometerplus$zlibrary$text$view$ZLTextViewBase$ImageFitting -> a
    172:172:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting -> org.geometerplus.zlibrary.text.view.ah$a:
    org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting none -> a
    org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting covers -> b
    org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting all -> c
    org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting[] $VALUES -> d
    34:34:org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting[] values() -> values
    34:34:org.geometerplus.zlibrary.text.view.ZLTextViewBase$ImageFitting valueOf(java.lang.String) -> valueOf
    34:34:void <init>(java.lang.String,int) -> <init>
    34:35:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.ZLTextWord -> org.geometerplus.zlibrary.text.view.aj:
    char[] Data -> a
    int Offset -> b
    int Length -> g
    int myWidth -> h
    org.geometerplus.zlibrary.text.view.ZLTextWord$Mark myMark -> i
    int myParagraphOffset -> j
    28:57:void <init>(char[],int,int,int) -> <init>
    60:65:boolean isASpace() -> a
    69:69:org.geometerplus.zlibrary.text.view.ZLTextWord$Mark getMark() -> b
    73:73:int getParagraphOffset() -> c
    77:89:void addMark(int,int) -> a
    92:97:int getWidth(org.geometerplus.zlibrary.core.view.ZLPaintContext) -> a
    102:102:java.lang.String toString() -> toString
org.geometerplus.zlibrary.text.view.ZLTextWord$1 -> org.geometerplus.zlibrary.text.view.ak:
org.geometerplus.zlibrary.text.view.ZLTextWord$Mark -> org.geometerplus.zlibrary.text.view.aj$a:
    int Start -> a
    int Length -> b
    org.geometerplus.zlibrary.text.view.ZLTextWord$Mark myNext -> d
    org.geometerplus.zlibrary.text.view.ZLTextWord this$0 -> c
    37:41:void <init>(org.geometerplus.zlibrary.text.view.ZLTextWord,int,int) -> <init>
    44:44:org.geometerplus.zlibrary.text.view.ZLTextWord$Mark getNext() -> a
    48:49:void setNext(org.geometerplus.zlibrary.text.view.ZLTextWord$Mark) -> a
    32:32:void <init>(org.geometerplus.zlibrary.text.view.ZLTextWord,int,int,org.geometerplus.zlibrary.text.view.ZLTextWord$1) -> <init>
    32:32:void access$100(org.geometerplus.zlibrary.text.view.ZLTextWord$Mark,org.geometerplus.zlibrary.text.view.ZLTextWord$Mark) -> a
org.geometerplus.zlibrary.text.view.ZLTextWordCursor -> org.geometerplus.zlibrary.text.view.al:
    org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor myParagraphCursor -> a
    int myElementIndex -> b
    int myCharIndex -> c
    32:33:void <init>() -> <init>
    35:37:void <init>(org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> <init>
    40:43:void setCursor(org.geometerplus.zlibrary.text.view.ZLTextWordCursor) -> a
    50:53:void setCursor(org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor) -> a
    56:56:boolean isNull() -> a
    60:60:boolean isStartOfParagraph() -> b
    64:64:boolean isStartOfText() -> c
    68:70:boolean isEndOfParagraph() -> d
    74:74:boolean isEndOfText() -> e
    79:79:int getParagraphIndex() -> getParagraphIndex
    84:84:int getElementIndex() -> getElementIndex
    89:89:int getCharIndex() -> getCharIndex
    93:93:org.geometerplus.zlibrary.text.view.ZLTextElement getElement() -> f
    97:97:org.geometerplus.zlibrary.text.view.ZLTextParagraphCursor getParagraphCursor() -> g
    101:113:org.geometerplus.zlibrary.text.model.ZLTextMark getMark() -> h
    117:119:void nextWord() -> i
    127:134:boolean nextParagraph() -> j
    138:145:boolean previousParagraph() -> k
    149:153:void moveToParagraphStart() -> l
    156:160:void moveToParagraphEnd() -> m
    163:169:void moveToParagraph(int) -> a
    172:174:void moveTo(org.geometerplus.zlibrary.text.view.ZLTextPosition) -> a
    177:193:void moveTo(int,int) -> a
    196:206:void setCharIndex(int) -> b
    209:212:void reset() -> n
    215:220:void rebuild() -> o
    224:224:java.lang.String toString() -> toString
org.geometerplus.zlibrary.text.view.ZLTextWordRegionSoul -> org.geometerplus.zlibrary.text.view.am:
    org.geometerplus.zlibrary.text.view.ZLTextWord Word -> a
    26:28:void <init>(org.geometerplus.zlibrary.text.view.ZLTextPosition,org.geometerplus.zlibrary.text.view.ZLTextWord) -> <init>
org.geometerplus.zlibrary.text.view.style.ZLTextBaseStyle -> org.geometerplus.zlibrary.text.view.style.a:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption AutoHyphenationOption -> c
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption BoldOption -> d
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ItalicOption -> e
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption UnderlineOption -> f
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption StrikeThroughOption -> g
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption AlignmentOption -> h
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption LineSpaceOption -> i
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption FontFamilyOption -> j
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption FontSizeOption -> k
    36:60:void <init>(java.lang.String,int) -> <init>
    64:64:java.lang.String getFontFamily() -> a
    68:68:int getFontSize() -> o
    73:73:int getFontSize(org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> a
    78:78:boolean isBold() -> b
    83:83:boolean isItalic() -> c
    88:88:boolean isUnderline() -> d
    93:93:boolean isStrikeThrough() -> e
    98:98:int getLeftIndent() -> f
    103:103:int getRightIndent() -> g
    108:108:int getFirstLineIndentDelta() -> h
    113:113:int getLineSpacePercent() -> i
    118:118:int getVerticalShift() -> j
    123:123:int getSpaceBefore() -> k
    128:128:int getSpaceAfter() -> l
    133:133:byte getAlignment() -> m
    138:138:boolean allowHyphenations() -> n
org.geometerplus.zlibrary.text.view.style.ZLTextDecoratedStyle -> org.geometerplus.zlibrary.text.view.style.b:
    java.lang.String myFontFamily -> c
    boolean myIsItalic -> d
    boolean myIsBold -> e
    boolean myIsUnderline -> f
    boolean myIsStrikeThrough -> g
    int myVerticalShift -> h
    boolean myIsNotCached -> i
    int myFontSize -> j
    org.geometerplus.zlibrary.text.model.ZLTextMetrics myMetrics -> k
    36:43:void <init>(org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> <init>
    46:54:void initCache() -> u
    57:59:void initMetricsCache(org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> c
    63:66:java.lang.String getFontFamily() -> a
    java.lang.String getFontFamilyInternal() -> o
    72:75:int getFontSize(org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> a
    int getFontSizeInternal(org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> b
    81:84:boolean isItalic() -> c
    boolean isItalicInternal() -> p
    90:93:boolean isBold() -> b
    boolean isBoldInternal() -> q
    99:102:boolean isUnderline() -> d
    boolean isUnderlineInternal() -> r
    108:111:boolean isStrikeThrough() -> e
    boolean isStrikeThroughInternal() -> s
    117:120:int getVerticalShift() -> j
    int getVerticalShiftInternal() -> t
org.geometerplus.zlibrary.text.view.style.ZLTextExplicitlyDecoratedStyle -> org.geometerplus.zlibrary.text.view.style.c:
    org.geometerplus.zlibrary.text.model.ZLTextStyleEntry myEntry -> c
    31:33:void <init>(org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.model.ZLTextStyleEntry) -> <init>
    37:40:java.lang.String getFontFamilyInternal() -> o
    44:62:int getFontSizeInternal(org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> b
    67:73:boolean isBoldInternal() -> q
    78:84:boolean isItalicInternal() -> p
    89:95:boolean isUnderlineInternal() -> r
    100:106:boolean isStrikeThroughInternal() -> s
    112:112:int getLeftIndent() -> f
    116:116:int getRightIndent() -> g
    120:120:int getFirstLineIndentDelta() -> h
    124:124:int getLineSpacePercent() -> i
    129:129:int getVerticalShiftInternal() -> t
    133:133:int getSpaceBefore() -> k
    137:137:int getSpaceAfter() -> l
    140:147:byte getAlignment() -> m
    152:152:boolean allowHyphenations() -> n
org.geometerplus.zlibrary.text.view.style.ZLTextExplicitlyDecoratedStyle$1 -> org.geometerplus.zlibrary.text.view.style.d:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$util$ZLBoolean3 -> a
    67:67:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.style.ZLTextFullStyleDecoration -> org.geometerplus.zlibrary.text.view.style.e:
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption SpaceBeforeOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption SpaceAfterOption -> b
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption LeftIndentOption -> c
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption RightIndentOption -> d
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption FirstLineIndentDeltaOption -> e
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption AlignmentOption -> f
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerOption LineSpacePercentOption -> g
    42:50:void <init>(java.lang.String,java.lang.String,int,org.geometerplus.zlibrary.core.util.ZLBoolean3,org.geometerplus.zlibrary.core.util.ZLBoolean3,org.geometerplus.zlibrary.core.util.ZLBoolean3,org.geometerplus.zlibrary.core.util.ZLBoolean3,int,int,int,int,int,int,byte,int,org.geometerplus.zlibrary.core.util.ZLBoolean3) -> <init>
    54:54:org.geometerplus.zlibrary.text.view.ZLTextStyle createDecoratedStyle(org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> a
org.geometerplus.zlibrary.text.view.style.ZLTextFullyDecoratedStyle -> org.geometerplus.zlibrary.text.view.style.f:
    org.geometerplus.zlibrary.text.view.style.ZLTextFullStyleDecoration myFullDecoration -> c
    30:32:void <init>(org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.view.style.ZLTextFullStyleDecoration,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> <init>
    36:36:int getLeftIndent() -> f
    41:41:int getRightIndent() -> g
    46:46:int getFirstLineIndentDelta() -> h
    51:52:int getLineSpacePercent() -> i
    57:57:int getSpaceBefore() -> k
    62:62:int getSpaceAfter() -> l
    67:68:byte getAlignment() -> m
    26:26:boolean allowHyphenations() -> n
org.geometerplus.zlibrary.text.view.style.ZLTextPartiallyDecoratedStyle -> org.geometerplus.zlibrary.text.view.style.g:
    org.geometerplus.zlibrary.text.view.style.ZLTextStyleDecoration myDecoration -> c
    31:33:void <init>(org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.view.style.ZLTextStyleDecoration,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> <init>
    37:38:java.lang.String getFontFamilyInternal() -> o
    43:43:int getFontSizeInternal(org.geometerplus.zlibrary.text.model.ZLTextMetrics) -> b
    48:54:boolean isBoldInternal() -> q
    60:66:boolean isItalicInternal() -> p
    72:78:boolean isUnderlineInternal() -> r
    84:90:boolean isStrikeThroughInternal() -> s
    96:96:int getLeftIndent() -> f
    101:101:int getRightIndent() -> g
    106:106:int getFirstLineIndentDelta() -> h
    111:111:int getLineSpacePercent() -> i
    116:116:int getVerticalShiftInternal() -> t
    121:121:int getSpaceBefore() -> k
    126:126:int getSpaceAfter() -> l
    131:131:byte getAlignment() -> m
    136:142:boolean allowHyphenations() -> n
org.geometerplus.zlibrary.text.view.style.ZLTextPartiallyDecoratedStyle$1 -> org.geometerplus.zlibrary.text.view.style.h:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$util$ZLBoolean3 -> a
    48:48:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection -> org.geometerplus.zlibrary.text.view.style.i:
    org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection ourInstance -> c
    int myDefaultFontSize -> d
    org.geometerplus.zlibrary.text.view.style.ZLTextBaseStyle myBaseStyle -> e
    org.geometerplus.zlibrary.text.view.style.ZLTextStyleDecoration[] myDecorationMap -> f
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption UseCSSTextAlignmentOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption UseCSSFontSizeOption -> b
    33:36:org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection Instance() -> a
    45:54:void <init>() -> <init>
    57:57:int getDefaultFontSize() -> b
    61:61:org.geometerplus.zlibrary.text.view.style.ZLTextBaseStyle getBaseStyle() -> c
    65:65:org.geometerplus.zlibrary.text.view.style.ZLTextStyleDecoration getDecoration(byte) -> a
    29:29:int access$002(org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection,int) -> a
    29:29:org.geometerplus.zlibrary.text.view.style.ZLTextBaseStyle access$102(org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection,org.geometerplus.zlibrary.text.view.style.ZLTextBaseStyle) -> a
    29:29:int access$000(org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection) -> a
    29:29:org.geometerplus.zlibrary.text.view.style.ZLTextStyleDecoration[] access$200(org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection) -> b
    30:30:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection$TextStyleReader -> org.geometerplus.zlibrary.text.view.style.i$a:
    int myDpi -> a
    org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection myCollection -> b
    74:74:boolean dontCacheAttributeValues() -> a
    78:94:int intValue(org.geometerplus.zlibrary.core.xml.ZLStringMap,java.lang.String,int) -> a
    98:98:boolean booleanValue(org.geometerplus.zlibrary.core.xml.ZLStringMap,java.lang.String) -> a
    102:102:org.geometerplus.zlibrary.core.util.ZLBoolean3 b3Value(org.geometerplus.zlibrary.core.xml.ZLStringMap,java.lang.String) -> b
    69:107:void <init>(org.geometerplus.zlibrary.text.view.style.ZLTextStyleCollection) -> <init>
    111:163:boolean startElementHandler(java.lang.String,org.geometerplus.zlibrary.core.xml.ZLStringMap) -> a
org.geometerplus.zlibrary.text.view.style.ZLTextStyleDecoration -> org.geometerplus.zlibrary.text.view.style.j:
    org.geometerplus.zlibrary.ui.android.options.ZLStringOption FontFamilyOption -> h
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption FontSizeDeltaOption -> i
    org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option BoldOption -> j
    org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option ItalicOption -> k
    org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option UnderlineOption -> l
    org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option StrikeThroughOption -> m
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerOption VerticalShiftOption -> n
    org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option AllowHyphenationsOption -> o
    java.lang.String myName -> a
    45:55:void <init>(java.lang.String,java.lang.String,int,org.geometerplus.zlibrary.core.util.ZLBoolean3,org.geometerplus.zlibrary.core.util.ZLBoolean3,org.geometerplus.zlibrary.core.util.ZLBoolean3,org.geometerplus.zlibrary.core.util.ZLBoolean3,int,org.geometerplus.zlibrary.core.util.ZLBoolean3) -> <init>
    58:58:org.geometerplus.zlibrary.text.view.ZLTextStyle createDecoratedStyle(org.geometerplus.zlibrary.text.view.ZLTextStyle) -> a
    62:62:org.geometerplus.zlibrary.text.view.ZLTextStyle createDecoratedStyle(org.geometerplus.zlibrary.text.view.ZLTextStyle,org.geometerplus.zlibrary.text.view.ZLTextHyperlink) -> a
    66:66:java.lang.String getName() -> a
org.geometerplus.zlibrary.ui.android.TestMainActivity -> org.geometerplus.zlibrary.ui.android.TestMainActivity:
    android.widget.EditText txt -> b
    android.view.View$OnClickListener openBookListener -> a
    17:28:void <init>() -> <init>
    21:26:void onCreate(android.os.Bundle) -> onCreate
    17:17:android.widget.EditText access$000(org.geometerplus.zlibrary.ui.android.TestMainActivity) -> a
org.geometerplus.zlibrary.ui.android.TestMainActivity$1 -> org.geometerplus.zlibrary.ui.android.a:
    org.geometerplus.zlibrary.ui.android.TestMainActivity this$0 -> a
    28:28:void <init>(org.geometerplus.zlibrary.ui.android.TestMainActivity) -> <init>
    31:40:void onClick(android.view.View) -> onClick
org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow -> org.geometerplus.zlibrary.ui.android.application.a:
    java.util.HashMap myMenuItemMap -> a
    android.view.MenuItem$OnMenuItemClickListener myMenuListener -> b
    int myBatteryLevel -> c
    45:57:void <init>(org.geometerplus.zlibrary.core.application.ZLApplication) -> <init>
    65:82:void addMenuItem(android.view.Menu,java.lang.String,java.lang.Integer,java.lang.String,boolean,boolean) -> a
    87:108:void refresh() -> b
    114:116:void increaseFont() -> c
    122:124:void decreaseFont() -> d
    128:134:void runWithMessage(java.lang.String,java.lang.Runnable,java.lang.Runnable) -> a
    138:167:void processException(java.lang.Exception) -> a
    172:180:void setTitle(java.lang.String) -> a
    183:183:org.geometerplus.zlibrary.core.view.ZLViewWidget getViewWidget() -> e
    187:188:void close() -> f
    192:192:int getBatteryLevel() -> g
    195:196:void setBatteryLevel(int) -> a
    44:44:java.util.HashMap access$000(org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow) -> a
org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow$1 -> org.geometerplus.zlibrary.ui.android.application.b:
    org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow this$0 -> a
    48:48:void <init>(org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow) -> <init>
    50:51:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow$2 -> org.geometerplus.zlibrary.ui.android.application.c:
    android.app.Activity val$activity -> a
    java.lang.String val$title -> b
    org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow this$0 -> c
    174:174:void <init>(org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow,android.app.Activity,java.lang.String) -> <init>
    176:177:void run() -> run
org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow$3 -> org.geometerplus.zlibrary.ui.android.application.d:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$util$ZLBoolean3 -> a
    92:92:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.image.InputStreamImageData -> org.geometerplus.zlibrary.ui.android.image.a:
    org.geometerplus.zlibrary.core.image.ZLSingleImage myImage -> a
    32:34:void <init>(org.geometerplus.zlibrary.core.image.ZLSingleImage) -> <init>
    37:47:android.graphics.Bitmap decodeWithOptions(android.graphics.BitmapFactory$Options) -> a
org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageData -> org.geometerplus.zlibrary.ui.android.image.b:
    android.graphics.Bitmap myBitmap -> a
    int myRealWidth -> b
    int myRealHeight -> c
    org.geometerplus.zlibrary.core.view.ZLPaintContext$Size myLastRequestedSize -> d
    org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType myLastRequestedScaling -> e
    32:36:void <init>() -> <init>
    android.graphics.Bitmap decodeWithOptions(android.graphics.BitmapFactory$Options) -> a
    41:41:android.graphics.Bitmap getFullSizeBitmap() -> a
    45:45:android.graphics.Bitmap getBitmap(int,int) -> a
    49:139:android.graphics.Bitmap getBitmap(org.geometerplus.zlibrary.core.view.ZLPaintContext$Size,org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageData$1 -> org.geometerplus.zlibrary.ui.android.image.c:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLPaintContext$ScalingType -> a
    86:86:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader -> org.geometerplus.zlibrary.ui.android.image.d:
    java.util.concurrent.ExecutorService myPool -> a
    java.util.concurrent.ExecutorService mySinglePool -> b
    java.util.HashMap myOnImageSyncRunnables -> c
    org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader$ImageSynchronizedHandler myImageSynchronizedHandler -> d
    33:90:void <init>() -> <init>
    35:56:void startImageLoading(org.geometerplus.zlibrary.core.image.ZLLoadableImage,java.lang.Runnable) -> a
    33:33:org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader$ImageSynchronizedHandler access$000(org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader) -> a
    33:33:java.util.HashMap access$200(org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader) -> b
org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader$1 -> org.geometerplus.zlibrary.ui.android.image.e:
    org.geometerplus.zlibrary.core.image.ZLLoadableImage val$image -> a
    org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader this$0 -> b
    50:50:void <init>(org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader,org.geometerplus.zlibrary.core.image.ZLLoadableImage) -> <init>
    52:54:void run() -> run
org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader$ImageSynchronizedHandler -> org.geometerplus.zlibrary.ui.android.image.d$a:
    org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader this$0 -> a
    75:75:void <init>(org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader) -> <init>
    78:83:void handleMessage(android.os.Message) -> handleMessage
    86:87:void fireMessage(java.lang.String) -> a
    75:75:void <init>(org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader,org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader$1) -> <init>
org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader$MinPriorityThreadFactory -> org.geometerplus.zlibrary.ui.android.image.d$b:
    java.util.concurrent.ThreadFactory myDefaultThreadFactory -> a
    58:59:void <init>() -> <init>
    62:64:java.lang.Thread newThread(java.lang.Runnable) -> newThread
    58:58:void <init>(org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader$1) -> <init>
org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageManager -> org.geometerplus.zlibrary.ui.android.image.f:
    org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageLoader myLoader -> b
    25:25:void <init>() -> <init>
    28:36:org.geometerplus.zlibrary.ui.android.image.ZLAndroidImageData getImageData(org.geometerplus.zlibrary.core.image.ZLImage) -> b
    44:48:void startImageLoading(org.geometerplus.zlibrary.core.image.ZLLoadableImage,java.lang.Runnable) -> a
    25:25:org.geometerplus.zlibrary.core.image.ZLImageData getImageData(org.geometerplus.zlibrary.core.image.ZLImage) -> a
org.geometerplus.zlibrary.ui.android.library.UncaughtExceptionHandler -> org.geometerplus.zlibrary.ui.android.library.a:
    android.content.Context myContext -> a
    32:34:void <init>(android.content.Context) -> <init>
    38:57:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
org.geometerplus.zlibrary.ui.android.library.ZLAndroidApplication -> org.geometerplus.zlibrary.ui.android.library.ZLAndroidApplication:
    org.geometerplus.zlibrary.ui.android.application.ZLAndroidApplicationWindow myMainWindow -> a
    29:29:void <init>() -> <init>
    34:38:void onCreate() -> onCreate
org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary -> org.geometerplus.zlibrary.ui.android.library.b:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowStatusBarOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption ShowActionBarOption -> b
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption BatteryLevelToTurnScreenOffOption -> c
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption DontTurnScreenOffDuringChargingOption -> d
    org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption ScreenBrightnessLevelOption -> e
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption DisableButtonLightsOption -> f
    java.lang.Boolean myIsKindleFire -> g
    org.geometerplus.android.fbreader.FBReader myActivity -> h
    android.app.Application myApplication -> i
    android.util.DisplayMetrics myMetrics -> j
    59:65:boolean isKindleFire() -> j
    69:69:boolean hasButtonLightsBug() -> k
    50:77:void <init>(android.app.Application) -> <init>
    80:81:void setActivity(org.geometerplus.android.fbreader.FBReader) -> a
    84:87:void finish() -> l
    90:90:org.geometerplus.android.fbreader.FBReader getActivity() -> m
    94:94:org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget getWidget() -> n
    99:99:org.geometerplus.zlibrary.core.filesystem.ZLResourceFile createResourceFile(java.lang.String) -> a
    104:104:org.geometerplus.zlibrary.core.filesystem.ZLResourceFile createResourceFile(org.geometerplus.zlibrary.core.filesystem.ZLResourceFile,java.lang.String) -> a
    110:114:java.lang.String getVersionName() -> c
    121:125:java.lang.String getFullVersionName() -> o
    136:139:void setScreenBrightness(int) -> a
    143:143:int getScreenBrightness() -> d
    150:157:int getDisplayDPI() -> e
    162:169:int getPixelWidth() -> f
    174:181:int getPixelHeight() -> g
    214:216:boolean supportsAllOrientations() -> h
    49:49:android.app.Application access$000(org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary) -> a
org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary$AndroidAssetsFile -> org.geometerplus.zlibrary.ui.android.library.b$a:
    org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary$AndroidAssetsFile myParent -> b
    long mySize -> d
    org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary this$0 -> a
    223:290:void <init>(org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary,org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary$AndroidAssetsFile,java.lang.String) -> <init>
    228:290:void <init>(org.geometerplus.zlibrary.ui.android.library.ZLAndroidLibrary,java.lang.String) -> <init>
    241:251:java.util.List directoryEntries() -> o
    257:264:boolean isDirectory() -> a
    271:287:boolean exists() -> h
    293:296:long size() -> g
    301:310:long sizeInternal() -> t
    316:332:long sizeSlow() -> u
    338:338:java.io.InputStream getInputStream() -> i
    343:343:org.geometerplus.zlibrary.core.filesystem.ZLFile getParent() -> d
org.geometerplus.zlibrary.ui.android.options.ZLBoolean3Option -> org.geometerplus.zlibrary.ui.android.options.a:
    org.geometerplus.zlibrary.core.util.ZLBoolean3 myValue -> a
    org.geometerplus.zlibrary.core.util.ZLBoolean3 myDefaultValue -> b
    29:32:void <init>(java.lang.String,java.lang.String,org.geometerplus.zlibrary.core.util.ZLBoolean3) -> <init>
    35:42:org.geometerplus.zlibrary.core.util.ZLBoolean3 getValue() -> a
    46:57:void setValue(org.geometerplus.zlibrary.core.util.ZLBoolean3) -> a
org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption -> org.geometerplus.zlibrary.ui.android.options.b:
    boolean myDefaultValue -> a
    boolean myValue -> b
    27:30:void <init>(java.lang.String,java.lang.String,boolean) -> <init>
    33:44:boolean getValue() -> a
    48:58:void setValue(boolean) -> a
org.geometerplus.zlibrary.ui.android.options.ZLColorOption -> org.geometerplus.zlibrary.ui.android.options.c:
    org.geometerplus.zlibrary.core.util.ZLColor myDefaultValue -> a
    org.geometerplus.zlibrary.core.util.ZLColor myValue -> b
    29:32:void <init>(java.lang.String,java.lang.String,org.geometerplus.zlibrary.core.util.ZLColor) -> <init>
    35:48:org.geometerplus.zlibrary.core.util.ZLColor getValue() -> a
    52:67:void setValue(org.geometerplus.zlibrary.core.util.ZLColor) -> a
org.geometerplus.zlibrary.ui.android.options.ZLEnumOption -> org.geometerplus.zlibrary.ui.android.options.d:
    java.lang.Enum myDefaultValue -> a
    java.lang.Enum myValue -> b
    27:30:void <init>(java.lang.String,java.lang.String,java.lang.Enum) -> <init>
    33:43:java.lang.Enum getValue() -> a
    47:57:void setValue(java.lang.Enum) -> a
org.geometerplus.zlibrary.ui.android.options.ZLIntegerOption -> org.geometerplus.zlibrary.ui.android.options.e:
    int myDefaultValue -> a
    int myValue -> b
    27:30:void <init>(java.lang.String,java.lang.String,int) -> <init>
    33:43:int getValue() -> a
    47:57:void setValue(int) -> a
org.geometerplus.zlibrary.ui.android.options.ZLIntegerRangeOption -> org.geometerplus.zlibrary.ui.android.options.f:
    int MinValue -> a
    int MaxValue -> b
    int myDefaultValue -> d
    int myValue -> e
    30:40:void <init>(java.lang.String,java.lang.String,int,int,int) -> <init>
    43:59:int getValue() -> a
    63:78:void setValue(int) -> a
org.geometerplus.zlibrary.ui.android.options.ZLOption -> org.geometerplus.zlibrary.ui.android.options.g:
    java.lang.String myGroup -> a
    java.lang.String myOptionName -> b
    boolean myIsSynchronized -> c
    31:35:void <init>(java.lang.String,java.lang.String) -> <init>
    38:40:java.lang.String getConfigValue(java.lang.String) -> a
    44:48:void setConfigValue(java.lang.String) -> b
    51:55:void unsetConfigValue() -> b
org.geometerplus.zlibrary.ui.android.options.ZLStringListOption -> org.geometerplus.zlibrary.ui.android.options.h:
    java.util.List myDefaultValue -> a
    java.util.List myValue -> b
    java.lang.String myDelimiter -> d
    32:36:void <init>(java.lang.String,java.lang.String,java.util.List,java.lang.String) -> <init>
    39:43:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    46:53:java.util.List getValue() -> a
    57:70:void setValue(java.util.List) -> a
org.geometerplus.zlibrary.ui.android.options.ZLStringOption -> org.geometerplus.zlibrary.ui.android.options.i:
    java.lang.String myDefaultValue -> a
    java.lang.String myValue -> b
    27:30:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    33:40:java.lang.String getValue() -> a
    44:58:void setValue(java.lang.String) -> c
org.geometerplus.zlibrary.ui.android.util.ZLAndroidColorUtil -> org.geometerplus.zlibrary.ui.android.util.a:
    29:29:int rgba(org.geometerplus.zlibrary.core.util.ZLColor,int) -> a
    33:33:int rgb(org.geometerplus.zlibrary.core.util.ZLColor) -> a
    37:53:org.geometerplus.zlibrary.core.util.ZLColor getAverageColor(android.graphics.Bitmap) -> a
org.geometerplus.zlibrary.ui.android.view.AndroidFontUtil -> org.geometerplus.zlibrary.ui.android.view.a:
    java.util.Map ourFontMap -> a
    java.util.Set ourFileSet -> b
    long ourTimeStamp -> c
    java.util.HashMap ourTypefaces -> d
    38:65:java.util.Map getFontMap(boolean) -> a
    69:83:java.lang.String realFontFamilyName(java.lang.String) -> a
    87:92:void fillFamiliesList(java.util.ArrayList) -> a
    97:129:android.graphics.Typeface typeface(java.lang.String,boolean,boolean) -> a
    133:135:void clearFontCache() -> a
    94:94:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.AndroidFontUtil$1 -> org.geometerplus.zlibrary.ui.android.view.b:
    45:45:void <init>() -> <init>
    47:51:boolean accept(java.io.File,java.lang.String) -> accept
org.geometerplus.zlibrary.ui.android.view.AnimationProvider -> org.geometerplus.zlibrary.ui.android.view.c:
    org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode myMode -> i
    org.geometerplus.zlibrary.ui.android.view.BitmapManager myBitmapManager -> j
    int myStartX -> a
    int myStartY -> b
    int myEndX -> c
    int myEndY -> d
    org.geometerplus.zlibrary.core.view.ZLView$Direction myDirection -> e
    float mySpeed -> f
    int myWidth -> g
    int myHeight -> h
    java.util.List myDrawInfos -> k
    43:203:void <init>(org.geometerplus.zlibrary.ui.android.view.BitmapManager) -> <init>
    61:61:org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode getMode() -> a
    65:68:void terminate() -> b
    71:76:void startManualScrolling(int,int) -> a
    79:83:void scrollTo(int,int) -> b
    86:142:void startAnimatedScrolling(int,int,int) -> a
    145:164:void startAnimatedScrolling(org.geometerplus.zlibrary.core.view.ZLView$PageIndex,java.lang.Integer,java.lang.Integer,int) -> a
    void startAnimatedScrollingInternal(int) -> a
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    170:170:boolean inProgress() -> c
    174:174:int getScrollingShift() -> d
    178:181:void setup(org.geometerplus.zlibrary.core.view.ZLView$Direction,int,int) -> a
    void doStep() -> e
    186:188:int getScrolledPercent() -> f
    206:213:void draw(android.graphics.Canvas) -> a
    void drawInternal(android.graphics.Canvas) -> b
    org.geometerplus.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    220:220:org.geometerplus.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo() -> g
    224:224:android.graphics.Bitmap getBitmapFrom() -> h
    228:228:android.graphics.Bitmap getBitmapTo() -> i
org.geometerplus.zlibrary.ui.android.view.AnimationProvider$1 -> org.geometerplus.zlibrary.ui.android.view.d:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$Direction -> a
    130:130:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.AnimationProvider$DrawInfo -> org.geometerplus.zlibrary.ui.android.view.c$a:
    int X -> a
    int Y -> b
    long Start -> c
    int Duration -> d
    196:201:void <init>(int,int,long,long) -> <init>
org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode -> org.geometerplus.zlibrary.ui.android.view.c$b:
    org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode NoScrolling -> a
    org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode ManualScrolling -> b
    org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode AnimatedScrollingForward -> c
    org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode AnimatedScrollingBackward -> d
    boolean Auto -> e
    org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode[] $VALUES -> f
    31:31:org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode[] values() -> values
    31:31:org.geometerplus.zlibrary.ui.android.view.AnimationProvider$Mode valueOf(java.lang.String) -> valueOf
    39:41:void <init>(java.lang.String,int,boolean) -> <init>
    31:35:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.BitmapManager -> org.geometerplus.zlibrary.ui.android.view.e:
    int SIZE -> a
    android.graphics.Bitmap[] myBitmaps -> b
    org.geometerplus.zlibrary.core.view.ZLView$PageIndex[] myIndexes -> c
    int myWidth -> d
    int myHeight -> e
    org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget myWidget -> f
    27:38:void <init>(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget) -> <init>
    41:52:void setSize(int,int) -> a
    55:72:android.graphics.Bitmap getBitmap(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> a
    76:86:int getInternalIndex(org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> b
    90:93:void reset() -> a
    96:102:void shift(boolean) -> a
org.geometerplus.zlibrary.ui.android.view.CurlAnimationProvider -> org.geometerplus.zlibrary.ui.android.view.f:
    android.graphics.Paint myPaint -> l
    android.graphics.Paint myBackPaint -> m
    android.graphics.Paint myEdgePaint -> n
    android.graphics.Path myFgPath -> i
    android.graphics.Path myEdgePath -> j
    android.graphics.Path myQuadPath -> k
    float mySpeedFactor -> o
    android.graphics.Bitmap myBuffer -> p
    boolean myUseCanvasHack -> q
    30:52:void <init>(org.geometerplus.zlibrary.ui.android.view.BitmapManager) -> <init>
    56:76:void drawInternal(android.graphics.Canvas) -> b
    79:208:void drawInternalNoHack(android.graphics.Canvas) -> c
    212:226:org.geometerplus.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    231:234:void startAnimatedScrollingInternal(int) -> a
    238:261:void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    265:330:void doStep() -> e
org.geometerplus.zlibrary.ui.android.view.CurlAnimationProvider$1 -> org.geometerplus.zlibrary.ui.android.view.g:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$Direction -> a
    216:216:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.NoneAnimationProvider -> org.geometerplus.zlibrary.ui.android.view.h:
    android.graphics.Paint myPaint -> i
    27:31:void <init>(org.geometerplus.zlibrary.ui.android.view.BitmapManager) -> <init>
    35:36:void drawInternal(android.graphics.Canvas) -> b
    40:43:void doStep() -> e
    47:56:void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    60:60:void startAnimatedScrollingInternal(int) -> a
    64:78:org.geometerplus.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
org.geometerplus.zlibrary.ui.android.view.NoneAnimationProvider$1 -> org.geometerplus.zlibrary.ui.android.view.i:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$Direction -> a
    68:68:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.ShiftAnimationProvider -> org.geometerplus.zlibrary.ui.android.view.j:
    android.graphics.Paint myPaint -> i
    25:29:void <init>(org.geometerplus.zlibrary.ui.android.view.BitmapManager) -> <init>
    33:53:void drawInternal(android.graphics.Canvas) -> b
org.geometerplus.zlibrary.ui.android.view.SimpleAnimationProvider -> org.geometerplus.zlibrary.ui.android.view.k:
    float mySpeedFactor -> i
    28:29:void <init>(org.geometerplus.zlibrary.ui.android.view.BitmapManager) -> <init>
    33:47:org.geometerplus.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    52:63:void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    67:69:void startAnimatedScrollingInternal(int) -> a
    73:119:void doStep() -> e
org.geometerplus.zlibrary.ui.android.view.SimpleAnimationProvider$1 -> org.geometerplus.zlibrary.ui.android.view.l:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$Direction -> a
    37:37:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.SlideAnimationProvider -> org.geometerplus.zlibrary.ui.android.view.m:
    android.graphics.Paint myPaint -> i
    25:29:void <init>(org.geometerplus.zlibrary.ui.android.view.BitmapManager) -> <init>
    33:52:void drawInternal(android.graphics.Canvas) -> b
org.geometerplus.zlibrary.ui.android.view.ZLAndroidPaintContext -> org.geometerplus.zlibrary.ui.android.view.n:
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption AntiAliasOption -> a
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption DeviceKerningOption -> b
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption DitheringOption -> c
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption HintingOption -> d
    org.geometerplus.zlibrary.ui.android.options.ZLBooleanOption SubpixelOption -> e
    java.lang.Boolean ourUsesHintingOption -> f
    android.graphics.Canvas myCanvas -> g
    android.graphics.Paint myTextPaint -> h
    android.graphics.Paint myLinePaint -> i
    android.graphics.Paint myFillPaint -> j
    android.graphics.Paint myOutlinePaint -> k
    int myWidth -> l
    int myHeight -> m
    int myScrollbarWidth -> n
    org.geometerplus.zlibrary.core.util.ZLColor myBackgroundColor -> o
    org.geometerplus.zlibrary.core.filesystem.ZLFile ourWallpaperFile -> p
    android.graphics.Bitmap ourWallpaper -> q
    42:49:boolean usesHintingOption() -> j
    53:92:void <init>(android.graphics.Canvas,int,int,int) -> <init>
    98:147:void clear(org.geometerplus.zlibrary.core.filesystem.ZLFile,org.geometerplus.zlibrary.core.view.ZLPaintContext$WallpaperMode) -> a
    151:154:void clear(org.geometerplus.zlibrary.core.util.ZLColor) -> a
    158:158:org.geometerplus.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    162:169:void fillPolygon(int[],int[]) -> a
    172:179:void drawPolygonalLine(int[],int[]) -> b
    182:212:void drawOutline(int[],int[]) -> c
    216:220:void setFontInternal(java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    224:225:void setTextColor(org.geometerplus.zlibrary.core.util.ZLColor) -> b
    229:230:void setLineColor(org.geometerplus.zlibrary.core.util.ZLColor) -> c
    238:239:void setFillColor(org.geometerplus.zlibrary.core.util.ZLColor,int) -> a
    242:242:int getWidth() -> b
    245:245:int getHeight() -> c
    250:268:int getStringWidth(char[],int,int) -> a
    273:273:int getSpaceWidthInternal() -> d
    277:277:int getStringHeightInternal() -> e
    281:281:int getDescentInternal() -> f
    285:305:void drawString(int,int,char[],int,int) -> a
    309:311:org.geometerplus.zlibrary.core.view.ZLPaintContext$Size imageSize(org.geometerplus.zlibrary.core.image.ZLImageData,org.geometerplus.zlibrary.core.view.ZLPaintContext$Size,org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    316:320:void drawImage(int,int,org.geometerplus.zlibrary.core.image.ZLImageData,org.geometerplus.zlibrary.core.view.ZLPaintContext$Size,org.geometerplus.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    335:346:void fillRectangle(int,int,int,int) -> a
    34:38:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.ZLAndroidPaintContext$1 -> org.geometerplus.zlibrary.ui.android.view.o:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLPaintContext$WallpaperMode -> a
    104:104:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget -> org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget:
    android.graphics.Paint myPaint -> d
    org.geometerplus.zlibrary.ui.android.view.BitmapManager myBitmapManager -> e
    android.graphics.Bitmap myFooterBitmap -> f
    int myHDiff -> g
    boolean myUseHDiff -> h
    org.geometerplus.zlibrary.ui.android.view.AnimationProvider myAnimationProvider -> i
    org.geometerplus.zlibrary.core.view.ZLView$Animation myAnimationType -> j
    int myStoredLayerType -> k
    org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$LongClickRunnable myPendingLongClickRunnable -> l
    boolean myLongClickPerformed -> m
    org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$ShortClickRunnable myPendingShortClickRunnable -> n
    boolean myPendingPress -> o
    boolean myPendingDoubleTap -> p
    int myPressedX -> q
    int myPressedY -> r
    boolean myScreenIsTouched -> s
    int mode -> t
    float oldDist -> a
    float textSize -> b
    boolean zoom -> c
    long previousTime -> u
    long currentTime -> v
    int myKeyUnderTracking -> w
    long myTrackingStartTime -> x
    42:529:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    42:529:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:529:void <init>(android.content.Context) -> <init>
    64:67:void init() -> c
    73:77:void setPreserveSize(boolean) -> setPreserveSize
    81:94:void onSizeChanged(int,int,int,int) -> onSizeChanged
    98:119:void onDraw(android.graphics.Canvas) -> onDraw
    125:148:org.geometerplus.zlibrary.ui.android.view.AnimationProvider getAnimationProvider() -> getAnimationProvider
    152:182:void onDrawInScrolling(android.graphics.Canvas) -> a
    186:187:void reset() -> a
    191:192:void repaint() -> b
    196:199:void startManualScrolling(int,int,org.geometerplus.zlibrary.core.view.ZLView$Direction) -> a
    203:209:void scrollManuallyTo(int,int) -> a
    213:223:void startAnimatedScrolling(org.geometerplus.zlibrary.core.view.ZLView$PageIndex,int,int,org.geometerplus.zlibrary.core.view.ZLView$Direction,int) -> a
    227:237:void startAnimatedScrolling(org.geometerplus.zlibrary.core.view.ZLView$PageIndex,org.geometerplus.zlibrary.core.view.ZLView$Direction,int) -> a
    241:249:void startAnimatedScrolling(int,int,int) -> a
    252:264:void drawOnBitmap(android.graphics.Bitmap,org.geometerplus.zlibrary.core.view.ZLView$PageIndex) -> a
    267:292:void drawFooter(android.graphics.Canvas) -> b
    295:311:void onDrawStatic(android.graphics.Canvas) -> c
    315:320:boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    335:342:void postLongClickRunnable() -> d
    378:486:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    513:515:float spacing(android.view.MotionEvent) -> a
    525:526:boolean onLongClick(android.view.View) -> onLongClick
    534:553:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    559:571:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    577:588:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    594:605:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    611:615:int computeVerticalScrollRange() -> computeVerticalScrollRange
    619:621:int getMainAreaHeight() -> getMainAreaHeight
    41:41:int access$000(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget) -> a
    41:41:boolean access$102(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget,boolean) -> a
    41:41:int access$300(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget) -> b
    41:41:int access$400(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget) -> c
    41:41:boolean access$502(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget,boolean) -> b
    41:41:org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$ShortClickRunnable access$602(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget,org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$ShortClickRunnable) -> a
org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$1 -> org.geometerplus.zlibrary.ui.android.view.p:
    android.graphics.Canvas val$canvas -> a
    org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget this$0 -> b
    298:298:void <init>(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget,android.graphics.Canvas) -> <init>
    301:309:void run() -> run
org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$2 -> org.geometerplus.zlibrary.ui.android.view.q:
    int[] $SwitchMap$org$geometerplus$zlibrary$core$view$ZLView$Animation -> a
    int[] $SwitchMap$org$geometerplus$zlibrary$ui$android$view$AnimationProvider$Mode -> b
    131:167:void <clinit>() -> <clinit>
org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$LongClickRunnable -> org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$a:
    org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget this$0 -> a
    323:323:void <init>(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget) -> <init>
    326:329:void run() -> run
    323:323:void <init>(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget,org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$1) -> <init>
org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$ShortClickRunnable -> org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$b:
    org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget this$0 -> a
    344:344:void <init>(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget) -> <init>
    347:351:void run() -> run
    344:344:void <init>(org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget,org.geometerplus.zlibrary.ui.android.view.ZLAndroidWidget$1) -> <init>
org.vimgadgets.linebreak.LineBreaker -> org.vimgadgets.linebreak.LineBreaker:
    java.lang.String myLanguage -> a
    void init() -> init
    void setLineBreaksForCharArray(char[],int,int,java.lang.String,byte[]) -> setLineBreaksForCharArray
    20:22:void <init>(java.lang.String) -> <init>
    25:26:void setLineBreaks(char[],int,int,byte[]) -> a
    5:7:void <clinit>() -> <clinit>
patches.JellyBeanSpanFixTextView -> patches.JellyBeanSpanFixTextView:
    java.lang.String TAG -> a
    59:60:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:68:void <init>(android.content.Context) -> <init>
    73:77:void onMeasure(int,int) -> onMeasure
    84:94:void fixOnMeasure(int,int) -> a
    101:115:void fixSpannedWithSpaces(android.text.SpannableStringBuilder,int,int) -> a
    119:145:patches.JellyBeanSpanFixTextView$FixingResult addSpacesAroundSpansUntilFixed(android.text.SpannableStringBuilder,int,int) -> b
    149:149:boolean isNotSpace(java.lang.CharSequence,int) -> a
    153:155:void setTextAndMeasure(java.lang.CharSequence,int,int) -> a
    159:187:void removeUnneededSpaces(int,int,android.text.SpannableStringBuilder,patches.JellyBeanSpanFixTextView$FixingResult) -> a
    193:195:void fallbackToString(int,int) -> b
    56:56:void <clinit>() -> <clinit>
patches.JellyBeanSpanFixTextView$FixingResult -> patches.JellyBeanSpanFixTextView$a:
    boolean fixed -> a
    java.util.List spansWithSpacesBefore -> b
    java.util.List spansWithSpacesAfter -> c
    42:42:patches.JellyBeanSpanFixTextView$FixingResult fixed(java.util.List,java.util.List) -> a
    46:46:patches.JellyBeanSpanFixTextView$FixingResult notFixed() -> a
    49:53:void <init>(boolean,java.util.List,java.util.List) -> <init>
yuku.ambilwarna.AmbilWarnaDialog -> yuku.ambilwarna.a:
    android.app.AlertDialog dialog -> a
    yuku.ambilwarna.AmbilWarnaDialog$OnAmbilWarnaListener listener -> b
    android.view.View viewHue -> c
    yuku.ambilwarna.AmbilWarnaKotak viewSatVal -> d
    android.widget.ImageView viewCursor -> e
    android.view.View viewOldColor -> f
    android.view.View viewNewColor -> g
    android.widget.ImageView viewTarget -> h
    android.view.ViewGroup viewContainer -> i
    float[] currentColorHsv -> j
    32:148:void <init>(android.content.Context,int,yuku.ambilwarna.AmbilWarnaDialog$OnAmbilWarnaListener) -> <init>
    151:159:void moveCursor() -> a
    162:168:void moveTarget() -> b
    171:171:int getColor() -> d
    175:175:float getHue() -> e
    179:179:float getSat() -> f
    183:183:float getVal() -> g
    187:188:void setHue(float) -> a
    191:192:void setSat(float) -> b
    195:196:void setVal(float) -> c
    199:200:void show() -> c
    18:18:void access$000(yuku.ambilwarna.AmbilWarnaDialog,float) -> a
    18:18:float access$100(yuku.ambilwarna.AmbilWarnaDialog) -> a
    18:18:int access$200(yuku.ambilwarna.AmbilWarnaDialog) -> b
    18:18:void access$300(yuku.ambilwarna.AmbilWarnaDialog,float) -> b
    18:18:void access$400(yuku.ambilwarna.AmbilWarnaDialog,float) -> c
yuku.ambilwarna.AmbilWarnaDialog$1 -> yuku.ambilwarna.b:
    yuku.ambilwarna.AmbilWarnaDialog this$0 -> a
    61:61:void <init>(yuku.ambilwarna.AmbilWarnaDialog) -> <init>
    63:81:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
yuku.ambilwarna.AmbilWarnaDialog$2 -> yuku.ambilwarna.c:
    yuku.ambilwarna.AmbilWarnaDialog this$0 -> a
    84:84:void <init>(yuku.ambilwarna.AmbilWarnaDialog) -> <init>
    86:107:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
yuku.ambilwarna.AmbilWarnaDialog$3 -> yuku.ambilwarna.d:
    yuku.ambilwarna.AmbilWarnaDialog this$0 -> a
    126:126:void <init>(yuku.ambilwarna.AmbilWarnaDialog) -> <init>
    129:133:void onCancel(android.content.DialogInterface) -> onCancel
yuku.ambilwarna.AmbilWarnaDialog$4 -> yuku.ambilwarna.e:
    yuku.ambilwarna.AmbilWarnaDialog this$0 -> a
    119:119:void <init>(yuku.ambilwarna.AmbilWarnaDialog) -> <init>
    121:124:void onClick(android.content.DialogInterface,int) -> onClick
yuku.ambilwarna.AmbilWarnaDialog$5 -> yuku.ambilwarna.f:
    yuku.ambilwarna.AmbilWarnaDialog this$0 -> a
    112:112:void <init>(yuku.ambilwarna.AmbilWarnaDialog) -> <init>
    114:117:void onClick(android.content.DialogInterface,int) -> onClick
yuku.ambilwarna.AmbilWarnaDialog$6 -> yuku.ambilwarna.g:
    android.view.View val$view -> a
    yuku.ambilwarna.AmbilWarnaDialog this$0 -> b
    141:141:void <init>(yuku.ambilwarna.AmbilWarnaDialog,android.view.View) -> <init>
    143:146:void onGlobalLayout() -> onGlobalLayout
yuku.ambilwarna.AmbilWarnaDialog$OnAmbilWarnaListener -> yuku.ambilwarna.a$a:
    void onCancel(yuku.ambilwarna.AmbilWarnaDialog) -> a
    void onOk(yuku.ambilwarna.AmbilWarnaDialog,int) -> a
yuku.ambilwarna.AmbilWarnaKotak -> yuku.ambilwarna.AmbilWarnaKotak:
    android.graphics.Paint paint -> a
    android.graphics.Shader luar -> b
    float[] color -> c
    19:23:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    19:27:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    30:40:void onDraw(android.graphics.Canvas) -> onDraw
    43:45:void setHue(float) -> setHue
yuku.ambilwarna.widget.AmbilWarnaPrefWidgetView -> yuku.ambilwarna.widget.AmbilWarnaPrefWidgetView:
    android.graphics.Paint paint -> a
    float rectSize -> b
    float strokeWidth -> c
    boolean drawCross -> d
    19:29:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    32:33:void showCross(boolean) -> a
    37:44:void onDraw(android.graphics.Canvas) -> onDraw
yuku.ambilwarna.widget.AmbilWarnaPreference -> yuku.ambilwarna.widget.AmbilWarnaPreference:
    int value -> a
    24:31:void onBindView(android.view.View) -> onBindView
    34:46:void onClick() -> onClick
    56:56:java.lang.Object onGetDefaultValue(android.content.res.TypedArray,int) -> onGetDefaultValue
    60:67:void onSetInitialValue(boolean,java.lang.Object) -> onSetInitialValue
    75:80:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    84:95:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    15:15:boolean access$000(yuku.ambilwarna.widget.AmbilWarnaPreference,java.lang.Object) -> a
    15:15:boolean access$100(yuku.ambilwarna.widget.AmbilWarnaPreference,int) -> a
    15:15:void access$200(yuku.ambilwarna.widget.AmbilWarnaPreference) -> a
yuku.ambilwarna.widget.AmbilWarnaPreference$1 -> yuku.ambilwarna.widget.a:
    yuku.ambilwarna.widget.AmbilWarnaPreference this$0 -> a
    34:34:void <init>(yuku.ambilwarna.widget.AmbilWarnaPreference) -> <init>
    36:40:void onOk(yuku.ambilwarna.AmbilWarnaDialog,int) -> a
    44:44:void onCancel(yuku.ambilwarna.AmbilWarnaDialog) -> a
yuku.ambilwarna.widget.AmbilWarnaPreference$SavedState -> yuku.ambilwarna.widget.AmbilWarnaPreference$a:
    int value -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    107:109:void <init>(android.os.Parcel) -> <init>
    112:114:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    117:118:void <init>(android.os.Parcelable) -> <init>
    120:120:void <clinit>() -> <clinit>
yuku.ambilwarna.widget.AmbilWarnaPreference$SavedState$1 -> yuku.ambilwarna.widget.b:
    120:120:void <init>() -> <init>
    122:122:yuku.ambilwarna.widget.AmbilWarnaPreference$SavedState createFromParcel(android.os.Parcel) -> a
    126:126:yuku.ambilwarna.widget.AmbilWarnaPreference$SavedState[] newArray(int) -> a
    120:120:java.lang.Object[] newArray(int) -> newArray
    120:120:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
